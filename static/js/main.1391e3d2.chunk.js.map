{"version":3,"sources":["constants/constants.ts","actions/actions.ts","components/SearchBar/SearchBar.tsx","components/Nav/Nav.tsx","components/Carousel/carousel-images/carousel-illustration-1-2.jpg","components/Carousel/carousel-images/carousel-illustration-2-2.jpg","components/Carousel/carousel-images/carousel-illustration-3-2.jpg","components/Carousel/Carousel.tsx","components/SectionA/SectionA.tsx","components/SectionB/SectionB.tsx","functions/urlify.ts","components/LocatorMap/LocatorMap.tsx","components/LoadingBar/LoadingBar.tsx","components/Pages/Home/Home.tsx","components/Pages/Cities/Cities.tsx","components/Pages/Walks/Walks.tsx","assets/samuel-johnsons-house-illustration.jpeg","assets/whitechapel-gallery-illustration.jpeg","assets/john-soanes-museum-illustration.jpeg","components/Pages/About/About.tsx","components/Pages/Sights/Sights.tsx","functions/toTitleCase.ts","components/Pages/Sight/Sight.tsx","assets/leeds-corn-exchange-illustration.jpeg","components/Pages/Contact/Contact.tsx","components/Pages/LoginPage/LoggedInView/Components/BoardBox/BoardBox.tsx","components/Pages/LoginPage/UserPortalNav.tsx","components/Pages/LoginPage/LoggedInView/Boards.tsx","components/Pages/LoginPage/LoginForm/LoginForm.tsx","components/Pages/LoginPage/RegistrationForm/RegistrationForm.tsx","components/Pages/LoginPage/VerificationForm/VerificationForm.tsx","components/Pages/LoginPage/ResetPasswordForm/ResetPasswordForm.tsx","components/Pages/LoginPage/ForgotPasswordForm/ForgotPasswordForm.tsx","components/Pages/Admin/AddWalkForm/AddWalkForm.tsx","components/Pages/Admin/AddCityForm/AddCityForm.tsx","components/Pages/Admin/SetFeaturedWalkForm/SetFeaturedWalkForm.tsx","components/Pages/Admin/DeleteWalkForm/DeleteWalkForm.tsx","components/Pages/Admin/DeleteCityForm/DeleteCityForm.tsx","components/Pages/Admin/AddBoardForm/AddBoardForm.tsx","components/Pages/Admin/DeleteBoardForm/DeleteBoardForm.tsx","components/Pages/Admin/AddBlogPostForm/AddBlogPostForm.tsx","components/Pages/Admin/DeleteBlogPostForm/DeleteBlogPostForm.tsx","components/Pages/Admin/Admin.tsx","components/Pages/404/NotFound404.tsx","components/Pages/PrivacyPolicy/PrivacyPolicy.tsx","components/PopUp/PrivacyPopUp.tsx","components/Footer/Footer.tsx","components/Walk/PopUp/PopUp.tsx","components/Walk/Walk.tsx","components/Pages/LoginPage/LoggedInView/Components/ThreadBox/ThreadBox.tsx","components/Pages/LoginPage/LoggedInView/Components/Threads/Threads.tsx","container/Router/Router.tsx","container/App.tsx","registerServiceWorker.js","reducers/walksReducer.ts","reducers/sightsReducer.ts","reducers/citiesReducer.ts","reducers/boardsReducer.ts","reducers/recaptchaReducer.ts","reducers/searchReducer.ts","reducers/privacyPopupReducer.ts","reducers/loginReducer.ts","reducers/index.ts","store/index.ts","index.js"],"names":["HANDLE_CHANGE_SEARCH","saveSights","dispatch","axios","get","then","res","sights","data","type","catch","err","console","log","saveWalks","walks","saveCities","cities","saveBoards","boards","setFirstName","firstName","setLastName","lastName","setRegistrationEmail","registrationEmail","setRegistrationPassword","registrationPassword","setActivationMessageEmphasis","activationMessageEmphasis","setPrivacyPopupVisible","boolValue","setLoggedIn","setUserId","userId","setUserFirstName","userFirstName","setUserLastName","userLastName","setLoginEmail","loginEmail","setLoginPassword","loginPassword","setForgotPasswordEmail","forgotPasswordEmail","setResetPasswordEmail","resetPasswordEmail","setResetPasswordOldPassword","resetPasswordOldPassword","setResetPasswordNewPassword","resetPasswordNewPassword","setResetPasswordConfirmNewPassword","resetPasswordConfirmNewPassword","setVerificationEmail","verificationEmail","handleChangeSearch","inputValue","types","handleClickSearch","cityToSearch","setSearchValue","setRedirect","connect","state","searchValue","searchState","bindActionCreators","props","onSubmit","e","preventDefault","className","data-testid","label","name","id","placeholder","value","onChange","target","redirect","useState","toggleNav","setToggleNav","scroll","setScroll","pushSlug","useHistory","push","useEffect","window","addEventListener","scrollY","dark","expand","to","color","onClick","isOpen","navbar","left","right","Carousel","activeItem","length","showControls","showIndicators","itemId","src","carouselImage1","alt","carouselImage2","carouselImage3","overlay","SectionA","markup","content","img","zoom","waves","dangerouslySetInnerHTML","__html","marked","hover","SectionB","urlify","str","toLowerCase","replace","LocatorMap","useGoogleMaps","center","lat","lng","styles","ref","map","google","walk","parseFloat","walkMarker","maps","Marker","position","infowindowContent","city","coverImg","infoWindow","InfoWindow","addListener","open","LoadingBar","walksState","scrollTo","featuredWalks","filter","featuredWalk","href","content1","outline","citiesState","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","slice","cityName","description","icon","_id","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","filteredResults","v","includes","About","aboutImage1","aboutImage2","aboutImage3","sightsState","post","title","reverse","toTitleCase","txt","charAt","toUpperCase","substr","loggedIn","loginState","blogTitle","history","location","pathname","comment","setComment","selectedBlogPost","undefined","subtitle","breaks","submittedOn","substring","comments","commentId","payload","currentBlogTitle","delete","alert","reload","handleDeleteComment","event","qs","stringify","rows","required","sitekey","recaptchaState","contactName","setContactName","contactEmail","setContactEmail","contactMessage","setContactMessage","handleChange","contactImage","grecaptcha","ready","execute","action","token","submitData","email","message","gRecaptchaResponse","far","BoardBox","toggleLoginPanel","setToggleLoginPanel","handleToggleLoginPanel","localStorage","clear","setItem","justify","boardsState","board","index","boardId","handleChangeLogin","password","fname","lname","minLength","handleChangeRegistration","pattern","handleChangeResetPassword","oldPassword","newPassword","AddWalkForm","setWalk","setCity","setDescription","startingPoint","setStartingPoint","setContent1","content2","setContent2","content3","setContent3","setCoverImg","mapImg","setMapImg","img1","setImg1","img2","setImg2","img3","setImg3","author","setAuthor","aboutTheAuthor","setAboutTheAuthor","websiteLink","setWebsiteLink","instagramLink","setInstagramLink","facebookLink","setFacebookLink","twitterLink","setTwitterLink","setLat","setLng","setLength","iframeLink","setIframeLink","iframeTitle","setIframeTitle","maxLength","AddCityForm","setImg","SetFeaturedWalkForm","featuredWalk1","setFeaturedWalk1","featuredWalk2","setFeaturedWalk2","featuredWalk3","setFeaturedWalk3","patch","DeleteWalkForm","DeleteCityForm","AddBoardForm","boardName","setBoardName","boardDescription","setBoardDescription","DeleteBoardForm","AddBlogPostForm","postTitle","setPostTitle","postSubTitle","setPostSubTitle","postContent","setPostContent","postImgLink","setPostImgLink","postAuthor","setPostAuthor","DeleteBlogPostForm","Admin","displayForm","form","setForm","toggleAdminPanel","setToggleAdminPanel","adminUserName","setAdminUserName","adminPassword","setAdminPassword","adminLoggedIn","setAdminLoggedIn","handleChangeAdminLogin","username","nf404","errorMessage","PrivacyPolicy","md","fluid","Date","getFullYear","PopUp","togglePopUp","setTogglePopUp","walkName","document","handleClickOutside","currentWalk","selectedWalk","split","reveal","fab","currentUserId","displayReplies","currentBoardName","threadId","replies","currentUserFirstName","showAllReplies","setShowAllReplies","reply","setReply","replyComponents","replyId","handleDeleteReply","handleDeleteThread","threads","selectedBoard","thread","threadName","setThreadName","threadContent","setThreadContent","addThread","privacyPopupVisible","privacyPopupState","useLocation","exact","path","component","Home","Cities","Walks","Walk","Contact","Sights","Sight","Boards","LoginForm","RegistrationForm","VerificationForm","ResetPasswordForm","ForgotPasswordForm","Threads","NotFound404","getItem","url","callback","doesScriptExist","getElementById","script","createElement","onload","body","appendChild","loadScriptByURL","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","INITIAL_STATE","walksReducer","sightsReducer","citiesReducer","boardsReducer","recaptchaReducer","searchReducer","privacyPopupReducer","loginReducer","rootReducer","combineReducers","store","configureStore","reducer","middleware","thunk","ReactDOM","render","URL","process","origin","fetch","response","status","headers","indexOf","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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,CACI,MAAS,aAIrB,CACI,YAAe,YACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,oBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,WACf,QAAW,CACP,CACI,UAAa,MAIzB,CACI,YAAe,MACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,WACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,eACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,eACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,IAEjB,CACI,OAAU,MAItB,CACI,YAAe,gBACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,gBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,gBACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,aACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,aACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,aACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,UACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,QACf,YAAe,MACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,QAI1B,CACI,YAAe,QACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,QACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,QACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,QACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,QACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,QACf,YAAe,mBACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,QACf,YAAe,qBACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,QACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,YA9W9BC,EAJ0C,EAI1CA,IAAKC,EAJqC,EAIrCA,IAAKC,EAJgC,EAIhCA,OA6ZlB,OAvCID,GAEAzH,EAAMyH,KAAI,SAACE,GAEP,IAAMN,EAAcO,WAAWD,EAAKN,KAC9BC,EAAcM,WAAWD,EAAKL,KAG9BO,EAAa,IAAIH,EAAOI,KAAKC,OAAO,CACtCC,SAAU,CAAEX,IAAKA,EAAKC,IAAKA,GAC3BG,IAAKA,IAIHQ,EAA4B,0BACXnB,GAAOa,EAAKA,MADD,8FAGhBA,EAAKA,KAHW,8CAIhBA,EAAKO,KAJW,oDAKVP,EAAKQ,SALK,mIAS5BC,EAAa,IAAIV,EAAOI,KAAKO,WAAW,CAC1ChC,QAAS4B,IAIbJ,EAAWS,YAAY,SAAS,WAC5BF,EAAWG,KAAKd,EAAKI,SAW7B,qBAAKL,IAAKA,EAAKhE,UAAU,kBChalBgF,I,OATc,WACzB,OACI,sBAAKhF,UAAU,yBAAf,UACI,2CACA,qBAAKA,UAAU,qB,kBCsFZT,I,OAAAA,aAJqC,SAACC,GAAD,MAAY,CAC5DhD,MAAOgD,EAAMyF,WAAWzI,SAGY,KAAzB+C,EAzEe,SAACK,GAAkB,IAErCpD,EAAUoD,EAAVpD,MAER0E,qBAAU,WACNC,OAAO+D,SAAS,EAAG,KACpB,IAEH,IAAIC,EAA6B3I,EAAM4I,QAAO,SAAAjB,GAAI,OAA0B,IAAtBA,EAAKkB,gBAO3D,OAJIF,EAAclD,OAAS,IACvBkD,EAAgB3I,GAGhBA,EAAMyF,OAEF,eAAC,IAAD,WACI,gCACI,cAAC,EAAD,IACA,qBAAKjC,UAAU,0DAAf,SACI,oBAAIA,UAAU,eAAd,SAA6B,oBAAGsF,KAAK,mBAAmBtF,UAAU,sBAArC,UAA2D,cAAC,KAAD,IAA3D,mBAAkG,cAAC,KAAD,WAEnI,uBAEA,eAAC,IAAD,CAAMwB,GAAI,UAAa8B,GAAO6B,EAAc,GAAGhB,MAA/C,UACI,qBAAKnE,UAAU,qCAAqCI,GAAG,kBAAvD,SACI,oBAAIJ,UAAU,oBAAd,SAAmCmF,EAAc,GAAGhB,SAExD,cAAC,EAAD,CAAUtB,QAASsC,EAAc,GAAGI,SAAUzC,IAAKqC,EAAc,GAAGR,SAAUpC,IAAK4C,EAAc,GAAGhB,KAAMpB,MAAM,EAAMC,OAAO,IAC7H,qBAAKhD,UAAU,SAAf,SACI,eAAC,IAAD,CAAQC,cAAY,gBAAgBuF,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,qBAAtE,qBAAoGmF,EAAc,GAAGhB,KAArH,IAA2H,cAAC,KAAD,YAGnI,uBACA,eAAC,IAAD,CAAM3C,GAAI,UAAa8B,GAAO6B,EAAc,GAAGhB,MAA/C,UACI,qBAAKnE,UAAU,qCAAf,SACI,oBAAIA,UAAU,oBAAd,SAAmCmF,EAAc,GAAGhB,SAExD,cAAC,EAAD,CAAUtB,QAASsC,EAAc,GAAGI,SAAUzC,IAAKqC,EAAc,GAAGR,SAAUpC,IAAK4C,EAAc,GAAGhB,KAAMpB,MAAM,EAAMC,OAAO,IAC7H,qBAAKhD,UAAU,SAAf,SACI,eAAC,IAAD,CAAQC,cAAY,gBAAgBD,UAAU,wCAAwCwF,SAAO,EAAC/D,MAAM,UAApG,qBAAuH0D,EAAc,GAAGhB,KAAxI,IAA8I,cAAC,KAAD,YAGtJ,uBACA,eAAC,IAAD,CAAM3C,GAAI,UAAa8B,GAAO6B,EAAc,GAAGhB,MAA/C,UACI,qBAAKnE,UAAU,qCAAf,SACI,oBAAIA,UAAU,oBAAd,SAAmCmF,EAAc,GAAGhB,SAExD,cAAC,EAAD,CAAUtB,QAASsC,EAAc,GAAGI,SAAUzC,IAAKqC,EAAc,GAAGR,SAAUpC,IAAK4C,EAAc,GAAGhB,KAAMpB,MAAM,EAAMC,OAAO,IAC7H,qBAAKhD,UAAU,SAAf,SACI,eAAC,IAAD,CAAQC,cAAY,gBAAgBuF,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,qBAAtE,qBAAoGmF,EAAc,GAAGhB,KAArH,IAA2H,cAAC,KAAD,eAIvI,cAAC,GAAD,CAAY3H,MAAOA,OAKvB,8BACI,cAAC,IAAD,UACI,cAAC,GAAD,Y,oBCaL+C,I,OAAAA,aAXqC,SAACC,GAAD,MAAY,CAC5D9C,OAAQ8C,EAAMiG,YAAY/I,WAGH,SAACf,GACxB,OAAO,aACHA,YACGgE,YAAmB,CAAER,oBAAmBG,eAAe3D,MAInD4D,EA/Ee,SAACK,GAAkB,IAErClD,EAA2CkD,EAA3ClD,OAAQyC,EAAmCS,EAAnCT,kBAAmBG,EAAgBM,EAAhBN,YAFS,EAIRoB,mBAAiB,GAJT,mBAIrCgF,EAJqC,KAIzBC,EAJyB,KAOtCC,EADwB,EACDF,EAEvBG,EAAoBC,KAAKC,KAAKrJ,EAAOuF,OAHb,GAsC9B,OAJAf,qBAAU,WACNC,OAAO+D,SAAS,EAAG,KACpB,IAGC,cAAC,IAAD,UACI,sBAAKlF,UAAU,6BAAf,UACI,sBAAKC,cAAY,sBAAsBD,UAAU,yBAAjD,UACI,oBAAIA,UAAU,eAAd,oBACA,oBAAIA,UAAU,kBAAd,qCAEJ,qBAAKA,UAAU,iBAAf,SAhCJtD,EAAOsJ,MAAMJ,EAAcA,EAbL,GAamC3B,KAAI,SAACS,GAC1D,OACI,8BACI,eAAC,IAAD,CAAS1E,UAAU,YAAY0B,QAAS,kBAXVuE,EAW6BvB,EAAKA,KAVhFvF,EAAkB8G,QAClB3G,GAAY,GAFiC,IAAC2G,GAW9B,UACI,cAAC,IAAD,CAAcjG,UAAU,mBAAmBqC,IAAKqC,EAAK5B,IAAKP,IAAKmC,EAAKA,KAAM1B,OAAK,IAC/E,eAAC,IAAD,WACI,cAAC,IAAD,UAAe0B,EAAKA,OACpB,cAAC,IAAD,UAAcA,EAAKwB,cACnB,eAAC,IAAD,CAAQV,SAAO,EAACxF,UAAU,gBAA1B,wBAAqD,cAAC,IAAD,CAASmG,KAAK,qBANrEzB,EAAK0B,UA+BnB,cAAC,KAAD,CACIC,cAAe,WACfC,UAAW,OACXT,UAAWA,EACXU,aApBG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAClBb,EAAca,IAoBFC,mBAAoB,qBACpBC,sBAAuB,kBACvBC,kBAAmB,cACnBC,kBAAmB,sBACnBC,gBAAiB,+BCoEtBtH,I,OAAAA,aAZqC,SAACC,GAAD,MAAY,CAC5DhD,MAAOgD,EAAMyF,WAAWzI,MACxBiD,YAAaD,EAAME,YAAYD,gBAGR,SAAC9D,GACxB,OAAO,aACHA,YACGgE,YAAmB,CAAEN,kBAAkB1D,MAInC4D,EA7HgB,SAACK,GAAkB,IAO1CkH,EALIrH,EAAuCG,EAAvCH,YAAaJ,EAA0BO,EAA1BP,eAAgB7C,EAAUoD,EAAVpD,MAFQ,EAMTkE,mBAAiB,GANR,mBAMtCgF,EANsC,KAM1BC,EAN0B,KAUvCC,EADuB,EACAF,EAEvBG,EAAoBC,KAAKC,KAAKvJ,EAAMyF,OAHb,GAiG7B,OAlEAf,qBAAU,WACNC,OAAO+D,SAAS,EAAG,MAGH,KAAhBzF,EACAqH,EACI,cAAC,IAAD,UACI,sBAAK9G,UAAU,OAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,eAAd,mBACA,cAAC,IAAD,CAAQwF,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,gBAAgB0B,QAAS,kBAAMrC,EAAe,KAAxF,4BACA,oBAAGY,cAAY,oBAAoBD,UAAU,oBAA7C,UAAiE,cAAC,IAAD,CAAkBA,UAAU,yBAA7F,YAA4HP,SAEhI,qBAAKO,UAAU,iBAAf,SArCRxD,EAAMwJ,MAAMJ,EAAcA,EAPL,GAOkC3B,KAAI,SAAA8C,GACvD,OACI,8BACI,cAAC,IAAD,CAAMvF,GAAI,SAAW8B,GAAOyD,EAAE5C,MAA9B,SACI,eAAC,IAAD,CAASnE,UAAU,YAAnB,UACI,cAAC,IAAD,CAAcA,UAAU,mBAAmBqC,IAAK0E,EAAEpC,SAAUpC,IAAKwE,EAAE5C,KAAMnB,OAAK,IAC9E,eAAC,IAAD,WACI,cAAC,IAAD,UAAe+D,EAAErC,OACjB,cAAC,IAAD,CAAc1E,UAAU,eAAxB,SAAwC+G,EAAE5C,OAC1C,cAAC,IAAD,UAAc4C,EAAEb,cAChB,eAAC,IAAD,CAAQV,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,gBAA1C,qBAAkE,cAAC,KAAD,gBARxE+G,EAAEX,UAsCZ,cAAC,KAAD,CACIC,cAAe,WACfC,UAAW,OACXT,UAAWA,EACXU,aAxBD,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAClBb,EAAca,IAwBEC,mBAAoB,qBACpBC,sBAAuB,kBACvBC,kBAAmB,cACnBC,kBAAmB,sBACnBC,gBAAiB,2BAK1BrK,EAAMyH,KAAI,SAAC8C,GAAcA,EAAE5C,KAAKX,cAAcwD,SAASvH,EAAY+D,gBAAkBuD,EAAErC,KAAKlB,cAAcwD,SAASvH,EAAY+D,oBACtIsD,EACI,cAAC,IAAD,UACI,sBAAK9G,UAAU,OAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,eAAeC,cAAY,qBAAzC,mBACA,cAAC,IAAD,CAAQuF,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,gBAAgB0B,QAAS,kBAAMrC,EAAe,KAAxF,4BACA,oBAAGY,cAAY,oBAAoBD,UAAU,oBAA7C,UAAiE,cAAC,IAAD,CAAkBA,UAAU,yBAA7F,YAA4HP,SAEhI,qBAAKO,UAAU,iBAAf,SACKxD,EAAMyH,KAAI,SAAC8C,GACR,GAAIA,EAAE5C,KAAKX,cAAcwD,SAASvH,EAAY+D,gBAAkBuD,EAAErC,KAAKlB,cAAcwD,SAASvH,EAAY+D,eACtG,OACI,8BACI,cAAC,IAAD,CAAMhC,GAAI,SAAW8B,GAAOyD,EAAE5C,MAA9B,SACI,eAAC,IAAD,CAASnE,UAAU,YAAnB,UACI,cAAC,IAAD,CAAcA,UAAU,mBAAmBqC,IAAK0E,EAAEpC,SAAUpC,IAAKwE,EAAE5C,KAAMnB,OAAK,IAC9E,eAAC,IAAD,WACI,cAAC,IAAD,UAAe+D,EAAErC,OACjB,cAAC,IAAD,CAAc1E,UAAU,eAAxB,SAAwC+G,EAAE5C,OAC1C,cAAC,IAAD,UAAc4C,EAAEb,cAChB,eAAC,IAAD,CAAQV,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,gBAA1C,qBAAkE,cAAC,KAAD,gBARxE+G,EAAEX,gBAwBxC,8BACKU,QChIE,OAA0B,gECA1B,OAA0B,8DCA1B,OAA0B,6DCsC1BG,I,OA7BS,WAEpB/F,qBAAU,WACNC,OAAO+D,SAAS,EAAG,KACpB,IASH,OACI,cAAC,IAAD,UACI,8BACI,sBAAKlF,UAAU,8BAAf,UACI,oBAAIA,UAAU,eAAd,mBACA,sBAAKA,UAAU,uBAAf,UACI,cAAC,EAAD,CAAU6C,QAbL,uCAawBC,IAAKoE,GAAa3E,IAAK,yBAA0BQ,MAAM,EAAOC,OAAO,IAClG,cAAC,EAAD,CAAUH,QAZL,mIAYwBC,IAAKqE,GAAa5E,IAAK,sBAAuBQ,MAAM,EAAOC,OAAO,IAC/F,cAAC,EAAD,CAAUH,QAXL,+FAWwBC,IAAKsE,GAAa7E,IAAK,sBAAuBQ,MAAM,EAAOC,OAAO,gBC2DxGzD,I,OAAAA,aAJqC,SAACC,GAAD,MAAY,CAC5DxD,OAAQwD,EAAM6H,YAAYrL,UAGU,KAAzBuD,EA3EiB,SAACK,GAAkB,IAEvC5D,EAAW4D,EAAX5D,OAFsC,EAQV0E,mBAAiB,GARP,mBAQvCgF,EARuC,KAQ3BC,EAR2B,KAWxCC,EADwB,EACDF,EAEvBG,EAAoBC,KAAKC,KAAK/J,EAAOiG,OAHb,GAmC9B,OALAf,qBAAU,WACNC,OAAO+D,SAAS,EAAG,MAKnB,cAAC,IAAD,UACI,sBAAKlF,UAAU,OAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,eAAd,oBACA,oBAAIA,UAAU,kBAAd,oEAEJ,qBAAKA,UAAU,iBAAf,SAnCJhE,EAAOgK,MAAMJ,EAAcA,EAPL,GAOmC3B,KAAI,SAACqD,GAC1D,OACI,8BACI,cAAC,IAAD,CAAM9F,GAAI,WAAa8B,GAAOgE,EAAKC,OAAnC,SACI,eAAC,IAAD,CAASvH,UAAU,YAAnB,UACI,cAAC,IAAD,CAAcA,UAAU,mBAAmBqC,IAAKiF,EAAKxE,IAAKP,IAAK+E,EAAKC,MAAOvE,OAAK,IAChF,eAAC,IAAD,WACI,cAAC,IAAD,CAAchD,UAAU,eAAxB,SAAwCsH,EAAKC,QAC7C,cAAC,IAAD,WArBoB3E,EAqBS0E,EAAKzE,QAAQmD,MAAM,EAAG,KAAO,MApB/EpD,EAAOa,QAAQ,OAAQ,IAAIA,QAAQ,KAAM,IAAIA,QAAQ,UAAW,OAqB3C,eAAC,IAAD,CAAQ+B,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,gBAA1C,kBAA+D,cAAC,IAAD,CAASmG,KAAK,0BAPnFmB,EAAKlB,KAfoB,IAACxD,KA4BzC4E,YAuBC,cAAC,KAAD,CACInB,cAAe,WACfC,UAAW,OACXT,UAAWA,EACXU,aAvBG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAClBb,EAAca,IAuBFC,mBAAoB,qBACpBC,sBAAuB,kBACvBC,kBAAmB,cACnBC,kBAAmB,sBACnBC,gBAAiB,+BCrEtBY,GATK,SAAClE,GACnB,OAAOA,EAAIE,QACT,UACA,SAACiE,GACC,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGrE,kB,oBCmJ1CjE,I,OAAAA,aAPqC,SAACC,GAAD,MAAY,CAC9DxD,OAAQwD,EAAM6H,YAAYrL,OAC1B8L,SAAUtI,EAAMuI,WAAWD,SAC3BjK,cAAe2B,EAAMuI,WAAWlK,cAChCF,OAAQ6B,EAAMuI,WAAWpK,UAGa,KAAzB4B,EAhIgB,SAACK,GAE9BsB,qBAAU,WACRC,OAAO+D,SAAS,EAAG,KAClB,IAJ4C,IAoEmBtC,EA/D1D5G,EAA4C4D,EAA5C5D,OAAQ8L,EAAoClI,EAApCkI,SAAUjK,EAA0B+B,EAA1B/B,cAAeF,EAAWiC,EAAXjC,OAEnCqK,EAAoBP,GAAY7H,EAAMqI,QAAQC,SAASC,SAAS1E,QAAQ,WAAY,IAAIA,QAAQ,KAAM,MAP7D,EASjB/C,mBAAiB,IATA,mBASxC0H,EATwC,KAS/BC,EAT+B,KA6D3Cf,EAA2B,cAAC,GAAD,IAE/B,GAAItL,EAAOiG,OAAQ,CAEjB,IASO,IATHqG,EAAuDtM,EAAOoJ,QAAO,SAACkC,GAAD,OAAkBA,EAAKC,QAAUS,KAO1G,QAAyBO,KANzBD,EAAmBA,EAAiB,IAOlChB,EAAO,uBAEPA,EACE,sBAAKtH,UAAU,sBAAf,UACE,gCACE,oBAAIA,UAAU,eAAd,SAA8BsI,EAAiBf,QAC/C,oBAAIvH,UAAU,gCAAd,SAA+CsI,EAAiBE,cAElE,qBAAKxI,UAAU,gBAAgBqC,IAAKiG,EAAiBxF,MACrD,qBAAK9C,UAAU,oBAAoBiD,yBAduBL,EAce0F,EAAiBzF,QAbvF,CAAEK,OAAQC,IAAOP,EAAQ,CAAE6F,QAAQ,QActC,4BAAIH,EAAiBI,YAAYjF,QAAQ,IAAK,KAAKkF,UAAU,EAAG,MAPlE,UAQGL,SARH,iBAQG,EAAkBM,gBARrB,aAQG,EAA4B3E,KAAI,SAACmE,GAChC,OACE,eAAC,IAAD,CAASpI,UAAU,yBAAnB,UACE,eAAC,IAAD,WAAeoI,EAAQvK,cAAvB,iBACA,cAAC,IAAD,UAAcuK,EAAQA,UACtB,cAAC,IAAD,UAAcA,EAAQM,YAAYjF,QAAQ,IAAK,KAAKkF,UAAU,EAAG,MAChEhL,IAAWyK,EAAQzK,QAAU,cAAC,IAAD,CAAQqC,UAAU,6BAA6B0B,QAAS,kBAhD3C,SAACmH,GAExD,IAAIC,EAA2B,CAC7BC,iBAAkBf,EAClBa,UAAWA,GAGbjN,IACGoN,OAAO,uDAAwD,CAAE/M,KAAM6M,IACvEhN,MAAK,SAACC,GAELkN,MAAM,oBACN9H,OAAO+G,SAASgB,YAEf/M,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAiCwF+M,CAAoBf,EAAQhC,MAA1F,8BAJiBgC,EAAQhC,WAYrE,OAAIpK,EAEA,cAAC,IAAD,UACE,gCACE,8BAAMsL,IACLQ,GACC,uBAAMjI,SAzFuC,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAA2B,CAC7BC,iBAAkBf,EAClBI,QAASA,EACTvK,cAAeA,EACfF,OAAQA,GAGV/B,IACG0L,KAAK,oDAAqD+B,KAAGC,UAAUR,IACvEhN,MAAK,SAACC,GACY,sBAAbA,EAAIE,KACNI,QAAQC,IAAI,qBAEZD,QAAQC,IAAI,4BAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,qBACNZ,EAAW,IACXlH,OAAO+G,SAASgB,UAiEsBlJ,UAAU,wBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,WAAWqN,KAAK,IAAIpJ,KAAK,UAAUC,GAAG,UAAUE,MAAO8H,EAASlI,MAAM,UAAUK,SA9F7C,SAAC6I,GAC7Df,EAAWe,EAAM5I,OAAOF,QA6FyGkJ,UAAQ,IAC/H,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,yBACc,cAAC,IAAD,CAASiK,KAAK,oBASpC,cAAC,GAAD,QC3IS,OAA0B,8DCqI1B5G,I,OAAAA,aAJqC,SAACC,GAAD,MAAY,CAC9DiK,QAASjK,EAAMkK,eAAeD,WAGjBlK,EAtHkB,SAACK,GAAkB,IAE1C6J,EAAY7J,EAAZ6J,QAFyC,EAIX/I,mBAAiB,IAJN,mBAI1CiJ,EAJ0C,KAI7BC,EAJ6B,OAKTlJ,mBAAiB,IALR,mBAK1CmJ,EAL0C,KAK5BC,EAL4B,OAMLpJ,mBAAiB,IANZ,mBAM1CqJ,EAN0C,KAM1BC,EAN0B,KAQjD9I,qBAAU,WACRC,OAAO+D,SAAS,EAAG,KAClB,IAEH,IAAM+E,EAAwD,SAACb,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,eACHyJ,EAAeR,EAAM5I,OAAOF,OAC5B,MACF,IAAK,gBACHwJ,EAAgBV,EAAM5I,OAAOF,OAC7B,MACF,IAAK,kBACH0J,EAAkBZ,EAAM5I,OAAOF,SAyCrC,OACE,cAAC,IAAD,UACE,8BACE,sBAAKN,UAAU,8BAAf,UACE,oBAAIA,UAAU,eAAd,qBACA,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKqC,IAAK6H,GAAc3H,IAAK,0BAE/B,uBAAM1C,SA7CuC,SAACuJ,GACtDA,EAAMrJ,iBAENoB,OAAOgJ,WAAWC,OAAM,WACtBjJ,OAAOgJ,WAAWE,QAAQZ,EAAS,CAAEa,OAAQ,WAAYxO,MAAK,SAACyO,GAC7DC,EAAWD,SAIf,IAAMC,EAAa,SAACD,GAElB,IAAMzB,EAAmB,CACvB3I,KAAMwJ,EACNc,MAAOZ,EACPa,QAASX,EACTY,mBAAoBJ,GAGtB3O,IACG0L,KAAK,gDAAiD+B,KAAGC,UAAUR,IACnEhN,MAAK,SAACC,GACY,6BAAbA,EAAIE,KACNgN,MAAM,8BAENA,MAAM,6DACNW,EAAe,IACfE,EAAgB,IAChBE,EAAkB,IAClB7I,OAAO+D,SAAS,EAAG,OAEpB/I,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAcoB4D,UAAU,4BAAxC,UACE,cAAC,IAAD,CAEE9D,KAAK,OACLiE,KAAK,eACLC,GAAG,eACHE,MAAOqJ,EACPzJ,MAAM,OACNK,SAAU0J,EACVT,UAAQ,GAPJ,WASN,cAAC,IAAD,CAEEtN,KAAK,QACLiE,KAAK,gBACLC,GAAG,gBACHE,MAAOuJ,EACP3J,MAAM,QACNK,SAAU0J,EACVT,UAAQ,GAPJ,WASN,cAAC,IAAD,CAEEtN,KAAK,WACLqN,KAAK,IACLpJ,KAAK,kBACLC,GAAG,kBACHE,MAAOyJ,EACP7J,MAAM,UACNK,SAAU0J,EACVT,UAAQ,GARJ,WAUN,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAASkE,GAAG,qBAAjD,0BACe,cAAC,IAAD,CAASwK,KAAG,EAACzE,KAAK,oCCnFhC0E,I,OArBmB,SAACjL,GAAkB,IAEzCO,EAAsBP,EAAtBO,KAAM+F,EAAgBtG,EAAhBsG,YAMd,OAJAhF,qBAAU,WACNC,OAAO+D,SAAS,EAAG,MAInB,eAAC,IAAD,CAASlF,UAAU,sBAAnB,UACI,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CG,IAC3C,cAAC,IAAD,CAAaH,UAAU,uBAAvB,SACKkG,IAEL,qBAAKlG,UAAU,WAAf,SACI,cAAC,IAAD,CAAMwB,GAAI,SAAW8B,GAAOnD,GAAOH,UAAU,aAA7C,iCCgHDT,I,OAAAA,aAXqC,SAACC,GAAD,MAAY,CAC9DsI,SAAUtI,EAAMuI,WAAWD,aAGF,SAACnM,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAElC,cAAaC,YAAWE,mBAAkBE,mBAAmBnC,MAI1E4D,EApHwB,SAACK,GAAkB,IAEhDkI,EAAwElI,EAAxEkI,SAAUrK,EAA8DmC,EAA9DnC,YAAaC,EAAiDkC,EAAjDlC,UAAWE,EAAsCgC,EAAtChC,iBAAkBE,EAAoB8B,EAApB9B,gBAFL,EAIP4C,oBAAkB,GAJX,mBAIhDoK,EAJgD,KAI9BC,EAJ8B,KAMjDC,EAAqC,WACzCD,GAAqBD,IAGjB/J,EAAqBC,cAAaC,KAiBxC,OAJAC,qBAAU,WACRC,OAAO+D,SAAS,EAAG,KAClB,IAGD,qBAAKlF,UAAU,cAAf,SACG8H,EACC,8BACE,cAAC,IAAD,CAAW9H,UAAU,cAAcsB,MAAI,EAACC,OAAO,KAA/C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,wBAAQvB,UAAU,8BAAlB,2BAEF,cAAC,IAAD,CACEyB,MAAM,OACNzB,UAAU,aACVI,GAAG,aACHsB,QAASsJ,IAEX,cAAC,IAAD,CACE5K,GAAG,kBACHuB,OAAQmJ,EACRlJ,QAAM,EAHR,SAKE,cAAC,IAAD,CAAcE,OAAK,EAAnB,SACE,cAAC,IAAD,UACE,oBAAG9B,UAAU,mBAAmB0B,QArCvB,WACzBuJ,aAAaC,QACbD,aAAaE,QAAQ,eAAgB,SACrC1N,GAAY,GACZC,EAAU,IACVE,EAAiB,IACjBE,EAAgB,IAChBmL,MAAM,4BACNlI,EAAS,WA6BO,oBACS,cAAC,IAAD,CAASoF,KAAK,wBASnC,8BAEE,cAAC,IAAD,CAAWnG,UAAU,cAAcsB,MAAI,EAACC,OAAO,KAA/C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,wBAAQvB,UAAU,8BAAlB,2BAEF,cAAC,IAAD,CACEyB,MAAM,OACNzB,UAAU,aACVI,GAAG,aACHsB,QAASsJ,IAEX,cAAC,IAAD,CACE5K,GAAG,kBACHuB,OAAQmJ,EACRlJ,QAAM,EAHR,SAKE,eAAC,IAAD,CAAcwJ,QAAQ,OAAtB,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAM5J,GAAG,eAAexB,UAAU,mBAAlC,mBAA2D,cAAC,IAAD,CAASmG,KAAK,aAE3E,cAAC,IAAD,UACE,eAAC,IAAD,CAAM3E,GAAG,kBAAkBxB,UAAU,mBAArC,sBAAiE,cAAC,IAAD,CAAS4K,KAAG,EAACzE,KAAK,cAErF,cAAC,IAAD,UACE,eAAC,IAAD,CAAM3E,GAAG,gBAAgBxB,UAAU,mBAAnC,0BAAmE,cAAC,IAAD,CAAS4K,KAAG,EAACzE,KAAK,kBAEvF,cAAC,IAAD,UACE,eAAC,IAAD,CAAM3E,GAAG,wBAAwBxB,UAAU,mBAA3C,4BAA6E,cAAC,IAAD,CAASmG,KAAK,oBAE7F,cAAC,IAAD,UACE,eAAC,IAAD,CAAM3E,GAAG,yBAAyBxB,UAAU,mBAA5C,6BAA+E,cAAC,IAAD,CAAS4K,KAAG,EAACzE,KAAK,sCA/DhF,kBCHtB5G,I,OAAAA,aALqC,SAACC,GAAD,MAAY,CAC5D5C,OAAQ4C,EAAM6L,YAAYzO,OAC1BiB,cAAe2B,EAAMuI,WAAWlK,iBAGI,KAAzB0B,EApCiB,SAACK,GAAkB,IAEvChD,EAA0BgD,EAA1BhD,OAAQiB,EAAkB+B,EAAlB/B,cAEhB,OACI,gCACI,sBAAKmC,UAAU,yBAAf,UACI,cAAC,GAAD,CAAe8H,UAAU,IACzB,eAAC,IAAD,WACI,oBAAI9H,UAAU,eAAd,mBACA,qBAAIA,UAAU,gBAAd,0BAA4CnC,KAC5C,2JAGR,cAAC,IAAD,UACKjB,EAAOqF,OACJ,qBAAKjC,UAAU,mBAAf,SACKpD,EAAOqH,KAAI,SAACqH,EAAOC,GAChB,OACI,cAAC,GAAD,CAAUC,QAASF,EAAMlF,IAAKjG,KAAMmL,EAAMnL,KAAM+F,YAAaoF,EAAMpF,YAAaqF,MAAOA,GAAYA,QAK/G,cAAC,GAAD,aCqELhM,I,OAAAA,aAZqC,SAACC,GAAD,MAAY,CAC9DvB,WAAYuB,EAAMuI,WAAW9J,WAC7BE,cAAeqB,EAAMuI,WAAW5J,kBAGP,SAACxC,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAE3B,gBAAeE,mBAAkBT,cAAaC,YAAWE,mBAAkBE,mBAAmBnC,MAI3G4D,EApFoB,SAACK,GAAkB,IAE5C3B,EAA0H2B,EAA1H3B,WAAYE,EAA8GyB,EAA9GzB,cAAeH,EAA+F4B,EAA/F5B,cAAeE,EAAgF0B,EAAhF1B,iBAAkBT,EAA8DmC,EAA9DnC,YAAaC,EAAiDkC,EAAjDlC,UAAWE,EAAsCgC,EAAtChC,iBAAkBE,EAAoB8B,EAApB9B,gBAExGiD,EAAqBC,cAAaC,KAElCwK,EAAoB,SAAC3L,GACzB,OAAQA,EAAEU,OAAOL,MACf,IAAK,cACHnC,EAAc8B,EAAEU,OAAOF,OACvB,MACF,IAAK,iBACHpC,EAAiB4B,EAAEU,OAAOF,SAwChC,OACE,sBAAsBN,UAAU,OAAhC,UACE,cAAC,GAAD,CAAe8H,UAAU,IACzB,eAAC,IAAD,WACE,sBAAK9H,UAAU,yBAAf,UACE,oBAAIA,UAAU,oBAAd,mBACA,0DAEF,uBAAMH,SA3Cc,SAACC,GACzBzD,QAAQC,IAAI,iCACZwD,EAAEC,iBAEF,IAAM+I,EAAuB,CAC3B2B,MAAOxM,EACPyN,SAAUvN,GAGZvC,IACG0L,KAAK,8CAA+C+B,KAAGC,UAAUR,IACjEhN,MAAK,SAACC,GACY,oGAAbA,EAAIE,KACNgN,MAAM,mGACgB,+BAAblN,EAAIE,KACbgN,MAAM,kDAENA,MAAM,kBACNxL,GAAY,GACZO,EAAc,IACdE,EAAiB,IACjBR,EAAU3B,EAAIE,KAAKmK,KACnBxI,EAAiB7B,EAAIE,KAAK0P,OAC1B7N,EAAgB/B,EAAIE,KAAK2P,OACzBX,aAAaE,QAAQ,WAAY,QACjCF,aAAaE,QAAQ,SAAUpP,EAAIE,KAAKmK,KACxC6E,aAAaE,QAAQ,gBAAiBpP,EAAIE,KAAK0P,OAC/C5K,EAAS,UACTI,OAAO+D,SAAS,EAAG,OAEpB/I,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAYuB4D,UAAU,+BAA7C,UACE,cAAC,IAAD,CAAwB9D,KAAK,QAAQiE,KAAK,cAAcC,GAAG,cAAcE,MAAOrC,EAAYiC,MAAM,QAAQK,SAAUkL,EAAmBjC,UAAQ,GAAjI,WACd,cAAC,IAAD,CAAwBtN,KAAK,WAAWiE,KAAK,iBAAiBC,GAAG,iBAAiBE,MAAOnC,EAAe+B,MAAM,WAAWK,SAAUkL,EAAmBI,UAAU,IAAIrC,UAAQ,GAA9J,WACd,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,mBACQ,cAAC,IAAD,CAASiK,KAAK,2BAXnB,kBCgDE5G,I,OAAAA,aAdqC,SAACC,GAAD,MAAY,CAC9D1C,UAAW0C,EAAMuI,WAAWjL,UAC5BE,SAAUwC,EAAMuI,WAAW/K,SAC3BE,kBAAmBsC,EAAMuI,WAAW7K,kBACpCI,0BAA2BkC,EAAMuI,WAAWzK,8BAGnB,SAAC3B,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAE9C,eAAcE,cAAaE,uBAAsBE,0BAAyBS,mBAAkBE,kBAAiBT,gCAAgC1B,MAI1J4D,EAjG2B,SAACK,GAAkB,IAEnD9C,EAAuO8C,EAAvO9C,UAAWE,EAA4N4C,EAA5N5C,SAAUE,EAAkN0C,EAAlN1C,kBAAmBE,EAA+LwC,EAA/LxC,qBAAsBE,EAAyKsC,EAAzKtC,0BAA2BT,EAA8I+C,EAA9I/C,aAAcE,EAAgI6C,EAAhI7C,YAAaE,EAAmH2C,EAAnH3C,qBAAsBE,EAA6FyC,EAA7FzC,wBAAyBS,EAAoEgC,EAApEhC,iBAAkBE,EAAkD8B,EAAlD9B,gBAAiBT,EAAiCuC,EAAjCvC,6BAExMyO,EAAoE,SAAC1C,GACzE,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,qBACHtD,EAAauM,EAAM5I,OAAOF,OAC1B,MACF,IAAK,qBACHvD,EAAYqM,EAAM5I,OAAOF,OACzB,MACF,IAAK,qBACHrD,EAAqBmM,EAAM5I,OAAOF,OAClC,MACF,IAAK,wBACHnD,EAAwBiM,EAAM5I,OAAOF,SAwC3C,OACE,gCACE,cAAC,GAAD,CAAewH,UAAU,IACzB,eAAC,IAAD,CAAc9H,UAAU,OAAxB,UACE,sBAAKA,UAAU,gCAAf,UACE,oBAAIA,UAAU,sBAAd,sBACA,sDACA,sBAAKA,UAAW1C,EAAhB,UACE,wIACA,8EACA,yEAA2C,cAAC,IAAD,CAAM8C,GAAG,0BAA0BoB,GAAG,gBAAtC,uDAG/C,uBAAM3B,SAhDuD,SAACuJ,GAElEA,EAAMrJ,iBAEN,IAAM+I,EAAmC,CACvC6C,MAAO7O,EACP8O,MAAO5O,EACPyN,MAAOvN,EACPwO,SAAUtO,GAGZxB,IACG0L,KAAK,iDAAkD+B,KAAGC,UAAUR,IACpEhN,MAAK,SAACC,GACY,+CAAbA,EAAIE,KACNgN,MAAM,8CACgB,4FAAblN,EAAIE,MACbgN,MAAM,iIACNpM,EAAa,IACbE,EAAY,IACZE,EAAqB,IACrBE,EAAwB,IACxBS,EAAiB7B,EAAIE,KAAK0P,OAC1B7N,EAAgB/B,EAAIE,KAAK2P,OACzBvO,EAA6B,YAC7B8D,OAAO+D,SAAS,EAAG,IAEnB+D,MAAM,4BAEP9M,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAkB8B4D,UAAU,sCAApD,UACE,cAAC,IAAD,CAAwB9D,KAAK,OAAOiE,KAAK,qBAAqBC,GAAG,qBAAqBE,MAAOxD,EAAWoD,MAAM,aAAaK,SAAUuL,EAA0BC,QAAQ,iBAAgBvC,UAAQ,GAAjL,WACd,cAAC,IAAD,CAAwBtN,KAAK,OAAOiE,KAAK,qBAAqBC,GAAG,qBAAqBE,MAAOtD,EAAUkD,MAAM,YAAYK,SAAUuL,EAA0BC,QAAQ,iBAAgBvC,UAAQ,GAA/K,WACd,cAAC,IAAD,CAAwBtN,KAAK,QAAQiE,KAAK,qBAAqBC,GAAG,qBAAqBE,MAAOpD,EAAmBgD,MAAM,QAAQK,SAAUuL,EAA0BtC,UAAQ,GAA7J,WACd,cAAC,IAAD,CAAwBtN,KAAK,WAAWiE,KAAK,wBAAwBC,GAAG,wBAAwBE,MAAOlD,EAAsB8C,MAAM,kCAAkCK,SAAUuL,EAA0BD,UAAU,IAAIrC,UAAQ,GAAjN,WACd,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,sBACW,cAAC,IAAD,CAASiK,KAAK,qBANmE,+BAZzF,yBCFE5G,I,OAAAA,aAXqC,SAACC,GAAD,MAAY,CAC9DT,kBAAmBS,EAAMuI,WAAWhJ,sBAGX,SAACpD,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAEb,wBAAwBnD,MAIrC4D,EAlE2B,SAACK,GAAkB,IAEnDb,EAA4Ca,EAA5Cb,kBAAmBD,EAAyBc,EAAzBd,qBAgC3B,OACE,gCACE,cAAC,GAAD,CAAegJ,UAAU,IACzB,eAAC,IAAD,CAAc9H,UAAU,OAAxB,UACE,sBAAKA,UAAU,gCAAf,UACE,oBAAIA,UAAU,sBAAd,mCACA,qHACA,yGACA,sIAEF,uBAAMH,SAhCuD,SAACuJ,GAClE/M,QAAQC,IAAI,8BACZ8M,EAAMrJ,iBAEN,IAAM+I,EAAyB,CAC7B2B,MAAO1L,GAGTnD,IACG0L,KAAK,iDAAkD+B,KAAGC,UAAUR,IACpEhN,MAAK,SAACC,GAELkN,MAAM,8CACNnK,EAAqB,IACrBqC,OAAO+D,SAAS,EAAG,MAElB/I,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAe8B4D,UAAU,iCAApD,UACE,cAAC,IAAD,CAAwB9D,KAAK,QAAQiE,KAAK,qBAAqBC,GAAG,qBAAqBE,MAAOvB,EAAmBmB,MAAM,QAAQK,SAzC7D,SAAC6I,GACzE,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,qBACHrB,EAAqBsK,EAAM5I,OAAOF,SAsCmIkJ,UAAQ,GAA7J,WACd,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,0BACe,cAAC,IAAD,CAAS0O,KAAG,EAACzE,KAAK,2BAZ9B,yBCmEE5G,I,OAAAA,aAdqC,SAACC,GAAD,MAAY,CAC9DjB,mBAAoBiB,EAAMuI,WAAWxJ,mBACrCE,yBAA0Be,EAAMuI,WAAWtJ,yBAC3CE,yBAA0Ba,EAAMuI,WAAWpJ,yBAC3CE,gCAAiCW,EAAMuI,WAAWlJ,oCAGzB,SAAClD,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAErB,wBAAuBE,8BAA6BE,8BAA6BE,sCAAsCjD,MAIpI4D,EA/F4B,SAACK,GAE1C,IAAMmB,EAAqBC,cAAaC,KAEhC1C,EAAiOqB,EAAjOrB,mBAAoBE,EAA6MmB,EAA7MnB,yBAA0BE,EAAmLiB,EAAnLjB,yBAA0BE,EAAyJe,EAAzJf,gCAAiCP,EAAwHsB,EAAxHtB,sBAAuBE,EAAiGoB,EAAjGpB,4BAA6BE,EAAoEkB,EAApElB,4BAA6BE,EAAuCgB,EAAvChB,mCAE5LoN,EAA4B,SAAC5C,GACjC,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,cACH7B,EAAsB8K,EAAM5I,OAAOF,OACnC,MACF,IAAK,eACH9B,EAA4B4K,EAAM5I,OAAOF,OACzC,MACF,IAAK,eACH5B,EAA4B0K,EAAM5I,OAAOF,OACzC,MACF,IAAK,uBACH1B,EAAmCwK,EAAM5I,OAAOF,SAyCtD,OACE,gCACE,cAAC,GAAD,CAAewH,UAAU,IACzB,eAAC,IAAD,CAAc9H,UAAU,OAAxB,UACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,wBAAd,4BACA,6IAEF,uBAAMH,SA5CsB,SAACuJ,GACjC/M,QAAQC,IAAI,gCACZ8M,EAAMrJ,iBAEN,IAAM+I,EAAU,CACd2B,MAAOlM,EACP0N,YAAaxN,EACbyN,YAAavN,GAGXA,IAA6BE,EAC/BjD,IACG0L,KAAK,oEAAqE+B,KAAGC,UAAUR,IACvFhN,MAAK,SAACC,GACY,mBAAbA,EAAIE,KACNgN,MAAM,qDACgB,yDAAblN,EAAIE,KACbgN,MAAM,4GACgB,kCAAblN,EAAIE,OACbgN,MAAM,sCACN3K,EAAsB,IACtBE,EAA4B,IAC5BE,EAA4B,IAC5BE,EAAmC,IACnCmC,EAAS,gBACTI,OAAO+D,SAAS,EAAG,OAEpB/I,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,6CAauCjJ,UAAU,mCAArD,UACE,cAAC,IAAD,CAAU9D,KAAK,QAAQiE,KAAK,cAAcC,GAAG,cAAcE,MAAO/B,EAAoB2B,MAAM,QAAQK,SAAUyL,EAA2BxC,UAAQ,IACjJ,cAAC,IAAD,CAAUtN,KAAK,WAAWiE,KAAK,eAAeC,GAAG,eAAeE,MAAO7B,EAA0ByB,MAAM,eAAeK,SAAUyL,EAA2BH,UAAU,IAAIrC,UAAQ,IACjL,cAAC,IAAD,CAAUtN,KAAK,WAAWiE,KAAK,eAAeC,GAAG,eAAeE,MAAO3B,EAA0BuB,MAAM,eAAeK,SAAUyL,EAA2BH,UAAU,IAAIrC,UAAQ,IACjL,cAAC,IAAD,CAAUtN,KAAK,WAAWiE,KAAK,uBAAuBC,GAAG,uBAAuBE,MAAOzB,EAAiCqB,MAAM,uBAAuBK,SAAUyL,EAA2BH,UAAU,IAAIrC,UAAQ,IAChN,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,mBACQ,cAAC,IAAD,CAASiK,KAAK,gCChBjB5G,I,OAAAA,aAXqC,SAACC,GAAD,MAAY,CAC9DnB,oBAAqBmB,EAAMuI,WAAW1J,wBAGb,SAAC1C,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAEvB,0BAA0BzC,MAIvC4D,EAhE6B,SAACK,GAAkB,IAErDvB,EAAgDuB,EAAhDvB,oBAAqBD,EAA2BwB,EAA3BxB,uBA+B7B,OACE,gCACE,cAAC,GAAD,CAAe0J,UAAU,IACzB,eAAC,IAAD,CAAc9H,UAAU,OAAxB,UACE,sBAAKA,UAAU,mCAAf,UACE,oBAAIA,UAAU,yBAAd,mCACA,0DACA,sIAEF,uBAAMH,SA9ByD,SAACuJ,GACpE/M,QAAQC,IAAI,iCACZ8M,EAAMrJ,iBAEN,IAAM+I,EAAmB,CACvB2B,MAAOpM,GAGTzC,IACG0L,KAAK,mDAAoD+B,KAAGC,UAAUR,IACtEhN,MAAK,SAACC,GAELkN,MAAM,0FACN7K,EAAuB,IACvB+C,OAAO+D,SAAS,EAAG,MAElB/I,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAagC4D,UAAU,oCAAtD,UACE,cAAC,IAAD,CAAwB9D,KAAK,QAAQiE,KAAK,wBAAwBC,GAAG,wBAAwBE,MAAOjC,EAAqB6B,MAAM,QAAQK,SAvCnE,SAAC6I,GAC3E,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,wBACH/B,EAAuBgL,EAAM5I,OAAOF,SAoC2IkJ,UAAQ,GAAvK,WACd,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,4BACiB,cAAC,IAAD,CAAS0O,KAAG,EAACzE,KAAK,2BAXhC,4BCgKEgG,I,OA3Me,WAAO,IAAD,EAEVzL,mBAAiB,IAFP,mBAE3ByD,EAF2B,KAErBiI,EAFqB,OAGV1L,mBAAiB,IAHP,mBAG3BgE,EAH2B,KAGrB2H,EAHqB,OAII3L,mBAAiB,IAJrB,mBAI3BwF,EAJ2B,KAIdoG,EAJc,OAKQ5L,mBAAiB,IALzB,mBAK3B6L,EAL2B,KAKZC,EALY,OAMF9L,mBAAiB,IANf,mBAM3B6E,EAN2B,KAMjBkH,EANiB,OAOF/L,mBAAiB,IAPf,mBAO3BgM,EAP2B,KAOjBC,EAPiB,OAQFjM,mBAAiB,IARf,mBAQ3BkM,EAR2B,KAQjBC,EARiB,OASFnM,mBAAiB,IATf,mBAS3BiE,EAT2B,KASjBmI,EATiB,OAUNpM,mBAAiB,IAVX,mBAU3BqM,EAV2B,KAUnBC,EAVmB,OAWVtM,mBAAiB,IAXP,mBAW3BuM,EAX2B,KAWrBC,EAXqB,OAYVxM,mBAAiB,IAZP,mBAY3ByM,EAZ2B,KAYrBC,EAZqB,OAaV1M,mBAAiB,IAbP,mBAa3B2M,EAb2B,KAarBC,EAbqB,OAcN5M,mBAAiB,IAdX,oBAc3B6M,GAd2B,MAcnBC,GAdmB,SAeU9M,mBAAiB,IAf3B,qBAe3B+M,GAf2B,MAeXC,GAfW,SAgBIhN,mBAAiB,IAhBrB,qBAgB3BiN,GAhB2B,MAgBdC,GAhBc,SAiBQlN,mBAAiB,IAjBzB,qBAiB3BmN,GAjB2B,MAiBZC,GAjBY,SAkBMpN,mBAAiB,IAlBvB,qBAkB3BqN,GAlB2B,MAkBbC,GAlBa,SAmBItN,mBAAiB,IAnBrB,qBAmB3BuN,GAnB2B,MAmBdC,GAnBc,SAoBZxN,mBAAiB,IApBL,qBAoB3BmD,GApB2B,MAoBtBsK,GApBsB,SAqBZzN,mBAAiB,IArBL,qBAqB3BoD,GArB2B,MAqBtBsK,GArBsB,SAsBN1N,mBAAiB,IAtBX,qBAsB3BuB,GAtB2B,MAsBnBoM,GAtBmB,SAuBE3N,mBAAiB,IAvBnB,qBAuB3B4N,GAvB2B,MAuBfC,GAvBe,SAwBI7N,mBAAiB,IAxBrB,qBAwB3B8N,GAxB2B,MAwBdC,GAxBc,MA0B5BxE,GAAwD,SAACb,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,OACHiM,EAAQhD,EAAM5I,OAAOF,OACrB,MACF,IAAK,OACH+L,EAAQjD,EAAM5I,OAAOF,OACrB,MACF,IAAK,cACHgM,EAAelD,EAAM5I,OAAOF,OAC5B,MACF,IAAK,iBACHkM,EAAiBpD,EAAM5I,OAAOF,OAC9B,MACF,IAAK,WACHmM,EAAYrD,EAAM5I,OAAOF,OACzB,MACF,IAAK,WACHqM,EAAYvD,EAAM5I,OAAOF,OACzB,MACF,IAAK,WACHuM,EAAYzD,EAAM5I,OAAOF,OACzB,MACF,IAAK,YACHwM,EAAY1D,EAAM5I,OAAOF,OACzB,MACF,IAAK,UACH0M,EAAU5D,EAAM5I,OAAOF,OACvB,MACF,IAAK,OACH4M,EAAQ9D,EAAM5I,OAAOF,OACrB,MACF,IAAK,OACH8M,EAAQhE,EAAM5I,OAAOF,OACrB,MACF,IAAK,OACHgN,EAAQlE,EAAM5I,OAAOF,OACrB,MACF,IAAK,SACHkN,GAAUpE,EAAM5I,OAAOF,OACvB,MACF,IAAK,mBACHoN,GAAkBtE,EAAM5I,OAAOF,OAC/B,MACF,IAAK,eACHsN,GAAexE,EAAM5I,OAAOF,OAC5B,MACF,IAAK,iBACHwN,GAAiB1E,EAAM5I,OAAOF,OAC9B,MACF,IAAK,gBACH0N,GAAgB5E,EAAM5I,OAAOF,OAC7B,MACF,IAAK,eACH4N,GAAe9E,EAAM5I,OAAOF,OAC5B,MACF,IAAK,MACH6N,GAAO/E,EAAM5I,OAAOF,OACpB,MACF,IAAK,MACH8N,GAAOhF,EAAM5I,OAAOF,OACpB,MACF,IAAK,SACH+N,GAAUjF,EAAM5I,OAAOF,OACvB,MACF,IAAK,cACHiO,GAAcnF,EAAM5I,OAAOF,OAC3B,MACF,IAAK,eACHmO,GAAerF,EAAM5I,OAAOF,SAwElC,OACE,gCACE,0CACA,uBAAMT,SAtE6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAgB,CAClB3E,KAAMsD,GAAYtD,GAClBO,KAAM+C,GAAY/C,GAClBwB,cACAqG,cAAe9E,GAAY8E,GAC3BhH,WACAmH,WACAE,WACAjI,WACAoI,SACAE,OACAE,OACAE,OACAE,OAAQ9F,GAAY8F,IACpBE,kBACAE,eACAE,iBACAE,gBACAE,eACApK,OACAC,OACA7B,UACAqM,cACAE,gBAGF5S,IACG0L,KAAK,4CAA6C+B,KAAGC,UAAUR,IAC/DhN,MAAK,SAACC,GACY,eAAbA,EAAIE,KACNI,QAAQC,IAAI,cAEZD,QAAQC,IAAI,qBAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,kBACNmD,EAAQ,IACRC,EAAQ,IACRC,EAAe,IACfE,EAAiB,IACjBC,EAAY,IACZE,EAAY,IACZE,EAAY,IACZC,EAAY,IACZI,EAAQ,IACRE,EAAQ,IACRE,EAAQ,IACRE,GAAU,IACVE,GAAkB,IAClBE,GAAe,IACfE,GAAiB,IACjBE,GAAgB,IAChBE,GAAe,IACfC,GAAO,IACPC,GAAO,IACPC,GAAU,IACVE,GAAc,IACdE,GAAe,IACftN,OAAO+D,SAAS,EAAG,IAMalF,UAAU,gBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAO6D,EAAMjE,MAAM,2DAA2DK,SAAU0J,GAAcyE,UAAU,KAAKlF,UAAQ,IACzK,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAOoE,EAAMxE,MAAM,OAAOK,SAAU0J,GAAcyE,UAAU,KAAKlF,UAAQ,IACrH,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,cAAcC,GAAG,cAAcE,MAAO4F,EAAahG,MAAM,cAAcK,SAAU0J,GAAcyE,UAAU,MAAMlF,UAAQ,IAClJ,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,iBAAiBC,GAAG,iBAAiBE,MAAOiM,EAAerM,MAAM,iBAAiBK,SAAU0J,GAAcyE,UAAU,MAAMlF,UAAQ,IAC7J,cAAC,IAAD,CAAUtN,KAAK,WAAWqN,KAAK,IAAIpJ,KAAK,WAAWC,GAAG,WAAWE,MAAOiF,EAAUrF,MAAM,8EAA8EK,SAAU0J,GAAcyE,UAAU,MAAMlF,UAAQ,IACtN,cAAC,IAAD,CAAUtN,KAAK,WAAWqN,KAAK,IAAIpJ,KAAK,WAAWC,GAAG,WAAWE,MAAOoM,EAAUxM,MAAM,8EAA8EK,SAAU0J,GAAcyE,UAAU,MAAMlF,UAAQ,IACtN,cAAC,IAAD,CAAUtN,KAAK,WAAWqN,KAAK,IAAIpJ,KAAK,WAAWC,GAAG,WAAWE,MAAOsM,EAAU1M,MAAM,8EAA8EK,SAAU0J,GAAcyE,UAAU,MAAMlF,UAAQ,IACtN,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,YAAYC,GAAG,YAAYE,MAAOqE,EAAUzE,MAAM,mBAAmBK,SAAU0J,GAAcT,UAAQ,IAChI,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,UAAUC,GAAG,UAAUE,MAAOyM,EAAQ7M,MAAM,iBAAiBK,SAAU0J,GAAcT,UAAQ,IACxH,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAO2M,EAAM/M,MAAM,eAAeK,SAAU0J,GAAcT,UAAQ,IAC9G,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAO6M,EAAMjN,MAAM,eAAeK,SAAU0J,GAAcT,UAAQ,IAC9G,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAO+M,EAAMnN,MAAM,eAAeK,SAAU0J,GAAcT,UAAQ,IAC9G,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,SAASC,GAAG,SAASE,MAAOiN,GAAQrN,MAAM,SAASK,SAAU0J,GAAcT,UAAQ,IAC9G,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,mBAAmBC,GAAG,mBAAmBE,MAAOmN,GAAgBvN,MAAM,mBAAmBK,SAAU0J,GAAcT,UAAQ,IACpJ,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,eAAeC,GAAG,eAAeE,MAAOqN,GAAazN,MAAM,0BAA0BK,SAAU0J,KAC1H,cAAC,IAAD,CAAU/N,KAAK,OAAOiE,KAAK,iBAAiBC,GAAG,iBAAiBE,MAAOuN,GAAe3N,MAAM,4BAA4BK,SAAU0J,KAClI,cAAC,IAAD,CAAU/N,KAAK,OAAOiE,KAAK,gBAAgBC,GAAG,gBAAgBE,MAAOyN,GAAc7N,MAAM,2BAA2BK,SAAU0J,KAC9H,cAAC,IAAD,CAAU/N,KAAK,OAAOiE,KAAK,eAAeC,GAAG,eAAeE,MAAO2N,GAAa/N,MAAM,0BAA0BK,SAAU0J,KAC1H,cAAC,IAAD,CAAU/N,KAAK,OAAOiE,KAAK,MAAMC,GAAG,MAAME,MAAOuD,GAAK3D,MAAM,WAAWK,SAAU0J,GAAcT,UAAQ,IACvG,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,MAAMC,GAAG,MAAME,MAAOwD,GAAK5D,MAAM,YAAYK,SAAU0J,GAAcT,UAAQ,IACxG,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,SAASC,GAAG,SAASE,MAAO2B,GAAQ/B,MAAM,0CAA0CK,SAAU0J,GAAcT,UAAQ,IAC/I,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,cAAcC,GAAG,cAAcE,MAAOgO,GAAYpO,MAAM,gDAAgDK,SAAU0J,GAAcT,UAAQ,IACnK,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,eAAeC,GAAG,eAAeE,MAAOkO,GAAatO,MAAM,wDAAwDK,SAAU0J,GAAcT,UAAQ,IAC9K,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,sBAEE,cAAC,IAAD,CAAS0O,KAAG,EAACzE,KAAK,cAAcnG,UAAU,oBCpIrC2O,I,OAhEe,WAAO,IAAD,EAEVjO,mBAAiB,IAFP,mBAE3BgE,EAF2B,KAErB2H,EAFqB,OAGI3L,mBAAiB,IAHrB,mBAG3BwF,EAH2B,KAGdoG,EAHc,OAIZ5L,mBAAiB,IAJL,mBAI3BoC,EAJ2B,KAItB8L,EAJsB,KAM5B3E,EAAwD,SAACb,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,OACHkM,EAAQjD,EAAM5I,OAAOF,OACrB,MACF,IAAK,cACHgM,EAAelD,EAAM5I,OAAOF,OAC5B,MACF,IAAK,MACHsO,EAAOxF,EAAM5I,OAAOF,SAiC1B,OACE,gCACE,0CACA,uBAAMT,SA/B6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAgB,CAClBpE,KAAM+C,GAAY/C,GAClBwB,YAAaA,EACbpD,IAAKA,GAGPlH,IACG0L,KAAK,4CAA6C+B,KAAGC,UAAUR,IAC/DhN,MAAK,SAACC,GACY,eAAbA,EAAIE,KACNI,QAAQC,IAAI,cAEZD,QAAQC,IAAI,qBAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,kBACNoD,EAAQ,IACRC,EAAe,IACfsC,EAAO,IACPzN,OAAO+D,SAAS,EAAG,IAMalF,UAAU,gBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAOoE,EAAMxE,MAAM,OAAOK,SAAU0J,EAAcyE,UAAU,KAAKlF,UAAQ,IACrH,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,cAAcC,GAAG,cAAcE,MAAO4F,EAAahG,MAAM,cAAcK,SAAU0J,EAAcyE,UAAU,MAAMlF,UAAQ,IAClJ,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,MAAMC,GAAG,MAAME,MAAOwC,EAAK5C,MAAM,aAAaK,SAAU0J,EAAcT,UAAQ,IACzG,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,sBAEE,cAAC,IAAD,CAAS0O,KAAG,EAACzE,KAAK,cAAcnG,UAAU,oBCQrC6O,I,OAjEuB,WAAO,IAAD,EACAnO,mBAAiB,IADjB,mBACnCoO,EADmC,KACpBC,EADoB,OAEArO,mBAAiB,IAFjB,mBAEnCsO,EAFmC,KAEpBC,EAFoB,OAGAvO,mBAAiB,IAHjB,mBAGnCwO,EAHmC,KAGpBC,EAHoB,KAKpClF,EAAwD,SAACb,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,kBACH4O,EAAiB3F,EAAM5I,OAAOF,OAC9B,MACF,IAAK,kBACH2O,EAAiB7F,EAAM5I,OAAOF,OAC9B,MACF,IAAK,kBACH6O,EAAiB/F,EAAM5I,OAAOF,SAgCpC,OACE,gCACE,oDACA,uJACA,wKACA,gFACA,uBAAMT,SAjC6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAyB,CAC3BgG,cAAerH,GAAYqH,GAC3BE,cAAevH,GAAYuH,GAC3BE,cAAezH,GAAYyH,IAG7BtT,IACGwT,MAAM,qDAAsD/F,KAAGC,UAAUR,IACzEhN,MAAK,SAACC,GACY,sBAAbA,EAAIE,KACNI,QAAQC,IAAI,qBAEZD,QAAQC,IAAI,4BAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAEhB6M,MAAM,sBACN8F,EAAiB,IACjBE,EAAiB,IACjBE,EAAiB,IACjBhO,OAAO+D,SAAS,EAAG,IASalF,UAAU,yBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,kBAAkBC,GAAG,kBAAkBE,MAAOwO,EAAe5O,MAAM,qDAAqDK,SAAU0J,EAAcT,UAAQ,IACnL,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,kBAAkBC,GAAG,kBAAkBE,MAAO0O,EAAe9O,MAAM,uDAAuDK,SAAU0J,EAAcT,UAAQ,IACrL,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,kBAAkBC,GAAG,kBAAkBE,MAAO4O,EAAehP,MAAM,gDAAgDK,SAAU0J,EAAcT,UAAQ,IAC9K,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,+BAEE,cAAC,IAAD,CAAS0O,KAAG,EAACzE,KAAK,OAAOnG,UAAU,oBCV9BqP,I,OAjDkB,WAAO,IAAD,EAEb3O,mBAAiB,IAFJ,mBAE9ByD,EAF8B,KAExBiI,EAFwB,KAoCrC,OACE,gCACE,6CACA,uBAAMvM,SA3B6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAwB,CAC1B3E,KAAMsD,GAAYtD,IAGpBvI,IACGoN,OAAO,+CAAgD,CAAE/M,KAAM6M,IAC/DhN,MAAK,SAACC,GACY,iBAAbA,EAAIE,KACNI,QAAQC,IAAI,gBAEZD,QAAQC,IAAI,uBAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,gBACNmD,EAAQ,IACRjL,OAAO+D,SAAS,EAAG,IAMalF,UAAU,mBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAO6D,EAAMjE,MAAM,YAAYK,SApCnB,SAAC6I,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,OACHiM,EAAQhD,EAAM5I,OAAOF,SAiC8EkJ,UAAQ,IAC3G,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,yBACc,cAAC,IAAD,CAASiK,KAAK,qBCOrBmJ,I,OAjDkB,WAAO,IAAD,EAEb5O,mBAAiB,IAFJ,mBAE9BgE,EAF8B,KAExB2H,EAFwB,KAoCrC,OACE,gCACE,6CACA,uBAAMxM,SA3B6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAwB,CAC1BpE,KAAM+C,GAAY/C,IAGpB9I,IACGoN,OAAO,+CAAgD,CAAE/M,KAAM6M,IAC/DhN,MAAK,SAACC,GACY,iBAAbA,EAAIE,KACNI,QAAQC,IAAI,gBAEZD,QAAQC,IAAI,uBAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,gBACNoD,EAAQ,IACRlL,OAAO+D,SAAS,EAAG,IAMalF,UAAU,mBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,OAAOC,GAAG,OAAOE,MAAOoE,EAAMxE,MAAM,YAAYK,SApCnB,SAAC6I,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,OACHkM,EAAQjD,EAAM5I,OAAOF,SAiC8EkJ,UAAQ,IAC3G,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,yBACc,cAAC,IAAD,CAASiK,KAAK,qBCerBoJ,I,OAxDgB,WAAO,IAAD,EAED7O,mBAAiB,IAFhB,mBAE5B8O,EAF4B,KAEjBC,EAFiB,OAGa/O,mBAAiB,IAH9B,mBAG5BgP,EAH4B,KAGVC,EAHU,KAK7B1F,EAAwD,SAACb,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,aACHsP,EAAarG,EAAM5I,OAAOF,OAC1B,MACF,IAAK,oBACHqP,EAAoBvG,EAAM5I,OAAOF,SA+BvC,OACE,gCACE,2CACA,uBAAMT,SA7B6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAiB,CACnB3I,KAAMsH,GAAY+H,GAClBtJ,YAAawJ,GAGf9T,IACG0L,KAAK,6CAA8C+B,KAAGC,UAAUR,IAChEhN,MAAK,SAACC,GACY,gBAAbA,EAAIE,KACNI,QAAQC,IAAI,eAEZD,QAAQC,IAAI,sBAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,mBACNwG,EAAa,IACbE,EAAoB,IACpBxO,OAAO+D,SAAS,EAAG,IAMalF,UAAU,iBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,aAAaC,GAAG,aAAaE,MAAOkP,EAAWtP,MAAM,aAAaK,SAAU0J,EAAcT,UAAQ,IAC7H,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,oBAAoBC,GAAG,oBAAoBE,MAAOoP,EAAkBxP,MAAM,oBAAoBK,SAAU0J,EAAcT,UAAQ,IACzJ,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,uBACY,cAAC,IAAD,CAASiK,KAAK,oBCJnByJ,I,OA9CmB,WAAO,IAAD,EAEJlP,mBAAiB,IAFb,mBAE/B8O,EAF+B,KAEpBC,EAFoB,KAiCtC,OACE,gCACE,8CACA,uBAAM5P,SA5B6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAM+I,EAAyB,CAC7B0G,UAAW/H,GAAY+H,IAGzB5T,IACGoN,OAAO,gDAAiD,CAAE/M,KAAM6M,IAChEhN,MAAK,SAACC,GACY,kBAAbA,EAAIE,KACNI,QAAQC,IAAI,iBAEZD,QAAQC,IAAI,wBAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,iBACNwG,EAAa,IACbtO,OAAO+D,SAAS,EAAG,IAOalF,UAAU,oBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,aAAaC,GAAG,aAAaE,MAAOkP,EAAWtP,MAAM,aAAaK,SAjCrC,SAAC6I,GAC7DqG,EAAarG,EAAM5I,OAAOF,QAgC+FkJ,UAAQ,IAC7H,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,0BACe,cAAC,IAAD,CAASiK,KAAK,qBCuCtB0J,I,OA7EmB,WAAO,IAAD,EAEJnP,mBAAiB,IAFb,mBAE/BoP,EAF+B,KAEpBC,EAFoB,OAGErP,mBAAiB,IAHnB,mBAG/BsP,EAH+B,KAGjBC,EAHiB,OAIAvP,mBAAiB,IAJjB,mBAI/BwP,EAJ+B,KAIlBC,EAJkB,OAKAzP,mBAAiB,IALjB,mBAK/B0P,EAL+B,KAKlBC,EALkB,OAMF3P,mBAAiB,IANf,mBAM/B4P,EAN+B,KAMnBC,EANmB,KAQhCtG,EAAwD,SAACb,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,aACH4P,EAAa3G,EAAM5I,OAAOF,OAC1B,MACF,IAAK,gBACH2P,EAAgB7G,EAAM5I,OAAOF,OAC7B,MACF,IAAK,eACH6P,EAAe/G,EAAM5I,OAAOF,OAC5B,MACF,IAAK,gBACH+P,EAAejH,EAAM5I,OAAOF,OAC5B,MACF,IAAK,cACHiQ,EAAcnH,EAAM5I,OAAOF,SAqCjC,OACE,gCACE,+CACA,uBAAMT,SAnC6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAoB,CACtBvB,MAAOE,GAAYqI,GACnBtH,SAAUf,GAAYuI,GACtBnN,QAASqN,EACTpN,IAAKsN,EACL7C,OAAQ9F,GAAY6I,IAGtB1U,IACG0L,KAAK,iDAAkD+B,KAAGC,UAAUR,IACpEhN,MAAK,SAACC,GACY,oBAAbA,EAAIE,KACNI,QAAQC,IAAI,oBAEZD,QAAQC,IAAI,qBAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,uBACN8G,EAAa,IACbE,EAAgB,IAChBE,EAAe,IACfE,EAAe,IACfE,EAAc,IACdpP,OAAO+D,SAAS,EAAG,IAMalF,UAAU,qBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,aAAaC,GAAG,aAAaE,MAAOwP,EAAW5P,MAAM,aAAaK,SAAU0J,EAAcT,UAAQ,IAC7H,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,gBAAgBC,GAAG,gBAAgBE,MAAO0P,EAAc9P,MAAM,iBAAiBK,SAAU0J,EAAcT,UAAQ,IAC1I,cAAC,IAAD,CAAUtN,KAAK,WAAWqN,KAAK,KAAKpJ,KAAK,eAAeC,GAAG,eAAeE,MAAO4P,EAAahQ,MAAM,eAAeK,SAAU0J,EAAcT,UAAQ,IACnJ,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,gBAAgBC,GAAG,gBAAgBE,MAAO8P,EAAalQ,MAAM,kBAAkBK,SAAU0J,EAAcT,UAAQ,IAC1I,cAAC,IAAD,CAAUtN,KAAK,OAAOiE,KAAK,cAAcC,GAAG,cAAcE,MAAOgQ,EAAYpQ,MAAM,cAAcK,SAAU0J,EAAcT,UAAQ,IACjI,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,2BACgB,cAAC,IAAD,CAASiK,KAAK,oBCtBvBqK,I,OAjDsB,WAAO,IAAD,EAEP9P,mBAAiB,IAFV,mBAElCoP,EAFkC,KAEvBC,EAFuB,KAoCzC,OACE,gCACE,kDACA,uBAAMlQ,SA3B6C,SAACuJ,GACtDA,EAAMrJ,iBAEN,IAAI+I,EAAwB,CAC1BgH,UAAWrI,GAAYqI,IAGzBlU,IACGoN,OAAO,oDAAqD,CAAE/M,KAAM6M,IACpEhN,MAAK,SAACC,GACY,sBAAbA,EAAIE,KACNI,QAAQC,IAAI,qBAEZD,QAAQC,IAAI,2BAEbH,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGhB6M,MAAM,qBACN8G,EAAa,IACb5O,OAAO+D,SAAS,EAAG,IAMalF,UAAU,wBAAxC,UACE,cAAC,IAAD,CAAU9D,KAAK,OAAOiE,KAAK,aAAaC,GAAG,aAAaE,MAAOwP,EAAW5P,MAAM,kBAAkBK,SApC1C,SAAC6I,GAC7D,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,aACH4P,EAAa3G,EAAM5I,OAAOF,SAiCgGkJ,UAAQ,IAClI,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,yBACc,cAAC,IAAD,CAASiK,KAAK,qBCoHrBsK,I,OArJS,WAAO,IASzBC,EATwB,EAEJhQ,mBAAiB,IAFb,mBAErBiQ,EAFqB,KAEfC,EAFe,OAGoBlQ,oBAAkB,GAHtC,mBAGrBmQ,EAHqB,KAGHC,EAHG,KAYf,YAATH,EACFD,EAAc,cAAC,GAAD,IACI,YAATC,EACTD,EAAc,cAAC,GAAD,IACI,oBAATC,EACTD,EAAc,cAAC,GAAD,IACI,eAATC,EACTD,EAAc,cAAC,GAAD,IACI,eAATC,EACTD,EAAc,cAAC,GAAD,IACI,aAATC,EACTD,EAAc,cAAC,GAAD,IACI,gBAATC,EACTD,EAAc,cAAC,GAAD,IACI,gBAATC,EACTD,EAAc,cAAC,GAAD,IACI,mBAATC,IACTD,EAAc,cAAC,GAAD,KAGhBxP,qBAAU,WACRC,OAAO+D,SAAS,EAAG,MAjCO,MAoCcxE,mBAAiB,IApC/B,mBAoCrBqQ,EApCqB,KAoCNC,EApCM,OAqCctQ,mBAAiB,IArC/B,mBAqCrBuQ,EArCqB,KAqCNC,EArCM,OAsCcxQ,oBAAkB,GAtChC,mBAsCrByQ,EAtCqB,KAsCNC,EAtCM,KAkEtBC,EAAkE,SAACjI,GACvE,OAAQA,EAAM5I,OAAOL,MACnB,IAAK,iBACH6Q,EAAiB5H,EAAM5I,OAAOF,OAC9B,MACF,IAAK,iBACH4Q,EAAiB9H,EAAM5I,OAAOF,SASpC,OACE,qBAAKN,UAAU,oBAAf,SACGmR,EACC,gCACE,cAAC,IAAD,CAAWnR,UAAU,cAAcsB,MAAI,EAACC,OAAO,KAA/C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,wBAAQvB,UAAU,aAAlB,4BAEF,cAAC,IAAD,CAAqByB,MAAM,OAAOzB,UAAU,aAAaI,GAAG,aAAasB,QArF1C,WACzCoP,GAAqBD,MAqFX,eAAC,IAAD,CAAazQ,GAAG,kBAAkBuB,OAAQkP,EAAkBjP,QAAM,EAAlE,UACE,eAAC,IAAD,CAAcC,MAAI,EAAlB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYL,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,YAA3C,wBAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,YAA3C,wBAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,oBAA3C,iCAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,eAA3C,2BAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,eAA3C,2BAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,aAA3C,yBAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,gBAA3C,4BAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,gBAA3C,6BAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpP,GAAG,KAAKE,QAAS,kBAAMkP,EAAQ,mBAA3C,mCAGJ,cAAC,IAAD,CAAc9O,OAAK,EAAnB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYN,GAAG,KAAKE,QAAS,WA7C7C0P,GAAiB,IA6CD,sCAMV,uBACA,uBACA,uBACA,cAAC,IAAD,UACGV,OAGL,cAAC,IAAD,UACE,uBAAM1Q,UAAU,mBAAmBH,SAjGsB,SAACuJ,GAChEA,EAAMrJ,iBAEN,IAAM+I,EAAuB,CAC3BwI,SAAUP,EACVrF,SAAUuF,GAGZrV,IACG0L,KAAK,+CAAgD+B,KAAGC,UAAUR,IAClEhN,MAAK,SAACC,GACY,+BAAbA,EAAIE,KACNgN,MAAM,kDAENA,MAAM,0BACNmI,GAAiB,GACjBJ,EAAiB,IACjBE,EAAiB,IACjB/P,OAAO+D,SAAS,EAAG,OAEpB/I,OAAM,SAACC,GACRC,QAAQC,IAAIF,OA4EV,UACE,cAAC,IAAD,CAAUF,KAAK,OAAOiE,KAAK,iBAAiBC,GAAG,iBAAiBE,MAAOyQ,EAAe7Q,MAAM,iBAAiBK,SAAU8Q,EAAwB3C,UAAU,KAAKlF,UAAQ,IACtK,cAAC,IAAD,CAAUtN,KAAK,WAAWiE,KAAK,iBAAiBC,GAAG,iBAAiBE,MAAO2Q,EAAe/Q,MAAM,iBAAiBK,SAAU8Q,EAAwB3C,UAAU,KAAKlF,UAAQ,IAC1K,eAAC,IAAD,CAAQhE,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,iCAAkE,cAAC,IAAD,CAASiK,KAAK,4BCpI7EoL,I,OAfgB,SAAC,GAA0C,IAAxCrJ,EAAuC,EAAvCA,SAExBsJ,EAAoB,uCAAmCtJ,EAASC,UAEtE,OACI,cAAC,IAAD,UACI,qBAAKnI,UAAU,4BAAf,SACI,qBAAKA,UAAU,yBAAf,SACI,oBAAIA,UAAU,eAAd,SAA8BwR,YCmFnCC,I,OAhGiB,WAM5B,OAJAvQ,qBAAU,WACNC,OAAO+D,SAAS,EAAG,KACpB,IAGC,cAAC,IAAD,UACI,sBAAKlF,UAAU,2BAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,oBAAIA,UAAU,eAAd,yCAEJ,kPACA,yCACA,+BACI,0DACA,8DACA,4DACA,4DACA,2CACA,uEACA,mDACA,wDACA,kEACA,4DACA,oEACA,+DACA,mDACA,+EAEJ,0DACA,0GACA,6BACI,0HAEJ,8DACA,uIACA,+BACI,iDACA,oEAEJ,4DACA,8EACA,+BACI,oHACA,mGAEJ,4DACA,+MACA,2QACA,2CACA,iIACA,uEACA,mKACA,8BAAG,wBAAQA,UAAU,YAAlB,oCAAH,gIACA,8BAAG,wBAAQA,UAAU,YAAlB,2CAAH,4MACA,8BAAG,wBAAQA,UAAU,YAAlB,qCAAH,uGACA,8BAAG,wBAAQA,UAAU,YAAlB,iDAAH,4HACA,8BAAG,wBAAQA,UAAU,YAAlB,kDAAH,8GACA,8BAAG,wBAAQA,UAAU,YAAlB,8CAAH,8JACA,uMACA,mDACA,oRACA,gEAAkC,mBAAGQ,OAAO,SAAS8E,KAAK,mCAAxB,oCAClC,wDACA,iIACA,+BACI,wDACA,qIAEJ,kEACA,8IACA,+BACI,kDACA,iDACA,yCACA,qFAEJ,uDACA,6OACA,oEACA,6NACA,+DACA,2LACA,mDACA,8NACA,oEACA,0EACA,4NACA,+HACA,+DCrDD/F,I,OAAAA,YAAQ,MAPI,SAAC5D,GACxB,OAAO,aACHA,YACGgE,YAAmB,CAAEpC,0BAA0B5B,MAI3C4D,EA7BuB,SAACK,GAAkB,IAE7CrC,EAA2BqC,EAA3BrC,uBAOR,OACI,cAAC,IAAD,UACI,qBAAKyC,UAAU,0BAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,kHAAoF,cAAC,IAAD,CAAMwB,GAAG,WAAWxB,UAAU,aAA9B,4BAApF,gCACA,oBAAGA,UAAU,oBAAb,yDAA6E,mBAAGQ,OAAO,SAAS8E,KAAK,sCAAsCtF,UAAU,aAAxE,mCAA7E,QAAgM,mBAAGQ,OAAO,SAAS8E,KAAK,oCAAoCtF,UAAU,aAAtE,8BAAhM,aACA,cAAC,IAAD,CAAQ0B,QAXe,WACnCnE,GAAuB,GACvB0N,aAAaE,QAAQ,eAAgB,UASYnL,UAAU,mBAA/C,+BCwGLT,I,OAAAA,aAZqC,SAACC,GAAD,MAAY,CAC9DsI,SAAUtI,EAAMuI,WAAWD,SAC3BnK,OAAQ6B,EAAMuI,WAAWpK,WAGA,SAAChC,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAElC,cAAaC,YAAWE,mBAAkBE,mBAAmBnC,MAI1E4D,EA9GiB,SAACK,GAAkB,IAEzCkI,EAAgFlI,EAAhFkI,SAAUnK,EAAsEiC,EAAtEjC,OAAQF,EAA8DmC,EAA9DnC,YAAaC,EAAiDkC,EAAjDlC,UAAWE,EAAsCgC,EAAtChC,iBAAkBE,EAAoB8B,EAApB9B,gBAE9DiD,EAAqBC,cAAaC,KA+BxC,OACE,eAAC,IAAD,CAAWjB,UAAU,8BAArB,UACE,cAAC,IAAD,CAAcA,UAAU,YAAxB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAQ0R,GAAG,IAAX,UACE,qBAAI1R,UAAU,QAAd,2BAAoC,cAAC,KAAD,OACpC,wJAIF,cAAC,IAAD,CAAQ0R,GAAG,MACX,eAAC,IAAD,CAAQA,GAAG,IAAI1R,UAAU,oBAAzB,UACE,oBAAIA,UAAU,QAAd,wBACA,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,IAAT,oBAEF,oBAAIxB,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,UAAT,sBAEF,oBAAIxB,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,SAAT,qBAEF,oBAAIxB,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,SAAT,qBAEF,oBAAIxB,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,UAAT,sBAEF,oBAAIxB,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,WAAT,uBAEF,oBAAIxB,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,eAAT,gCAIN,eAAC,IAAD,CAAQkQ,GAAG,IAAI1R,UAAU,qBAAzB,UACE,oBAAIA,UAAU,QAAd,yBACA,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,SAAT,4BAEF,oBAAIxB,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMwB,GAAG,WAAT,8BAEDsG,GACC,oBAAI9H,UAAU,gBAAd,SACE,mBAAG0B,QAlEG,WAEpB,IAAMoH,EAAmB,CACvBnL,OAAQA,GAGV/B,IAAMoN,OAAO,kDAAmD,CAAE/M,KAAM6M,IACrEhN,MAAK,SAACC,GACLM,QAAQC,IAAI,sBACXH,OAAM,SAACC,GACRC,QAAQC,IAAIF,EAAK,sCAGrB6M,MAAM,uDAvBNgC,aAAaC,QACbD,aAAaE,QAAQ,eAAgB,SACrC1N,GAAY,GACZC,EAAU,IACVE,EAAiB,IACjBE,EAAgB,IAChBmL,MAAM,4BACNlI,EAAS,UAkBTI,OAAO+D,SAAS,EAAG,IAmDL,yCAMZ,qBAAKlF,UAAU,oCAAf,SACE,eAAC,IAAD,CAAc2R,OAAK,EAAnB,mBACU,IAAIC,MAAOC,cADrB,cAC8C,mBAAGvM,KAAK,oCAAoC9E,OAAO,SAASR,UAAU,qBAAtE,uCClFvC8R,I,OArBgB,SAAClS,GAAkB,IAEtC0O,EAA4B1O,EAA5B0O,WAAYE,EAAgB5O,EAAhB4O,YAEpB,OACI,cAAC,IAAD,UACI,qBAAKxO,UAAU,kBAAf,SACI,qBAAKA,UAAU,QAAf,SAEI,wBACIqC,IAAKiM,EACL/G,MAAOiH,EACPxO,UAAU,sB,kBCuFnBT,I,OAAAA,aAJqC,SAACC,GAAD,MAAY,CAC9DhD,MAAOgD,EAAMyF,WAAWzI,SAGX+C,EAvFa,SAACK,GAAkB,IAErCpD,EAAUoD,EAAVpD,MAFoC,EAINkE,oBAAkB,GAJZ,mBAIrCqR,EAJqC,KAIxBC,EAJwB,KAMtCC,EAAmBxK,GAAY7H,EAAMqI,QAAQC,SAASC,SAAS1E,QAAQ,UAAW,IAAIA,QAAQ,KAAM,MAE1GvC,qBAAU,WACRC,OAAO+D,SAAS,EAAG,GACnBgN,SAAS9Q,iBAAiB,YAAa+Q,MAGzC,IAAIhO,EAA2B,cAAC,GAAD,IAE3BiO,EAAmE,CAAE9D,WAAY,GAAIE,YAAa,IAOhG2D,EAAuC,SAACrS,GAExB,cAAhBA,EAAEU,OAAOJ,IAAsC,gBAAhBN,EAAEU,OAAOJ,IAAwC,aAAhBN,EAAEU,OAAOJ,IAC3E4R,GAAe,IAInB,GAAIxV,EAAMyF,OAAQ,CAEhB,IAAIoQ,EAAiD7V,EAAM4I,QAAO,SAACjB,GAAD,OAAUA,EAAKA,OAAS8N,KAG1FG,EAFAC,EAAeA,EAAa,GAK1BlO,OADmBoE,IAAjB8J,EACK,iBAGL,gCACE,sBAAKrS,UAAU,yBAAf,UACE,qBAAIA,UAAU,eAAd,UAA8BqS,EAAalO,KAA3C,IAAiD,cAAC,KAAD,IAAjD,IAA4DkO,EAAa3N,QACzE,oBAAG1E,UAAU,mBAAb,UAAgC,cAAC,IAAD,IAAhC,IAAoDqS,EAAanM,eACjE,oBAAGlG,UAAU,mBAAb,UAAgC,cAAC,KAAD,IAAhC,oBAA+DqS,EAAa9F,iBAC5E,oBAAGvM,UAAU,mBAAb,UAAgC,cAAC,IAAD,IAAhC,YAAoDqS,EAAapQ,aAEnE,cAAC,EAAD,CAAUY,QAASwP,EAAa9M,SAAUzC,IAAKuP,EAAapF,KAAM1K,IAAK8P,EAAalO,KAAMpB,MAAM,EAAOC,OAAO,IAC9G,cAAC,EAAD,CAAUH,QAASwP,EAAa3F,SAAU5J,IAAKuP,EAAalF,KAAM5K,IAAK8P,EAAalO,KAAMpB,MAAM,EAAOC,OAAO,IAC9G,cAAC,EAAD,CAAUH,QAASwP,EAAazF,SAAU9J,IAAKuP,EAAahF,KAAM9K,IAAK8P,EAAalO,KAAMpB,MAAM,EAAOC,OAAO,IAC9G,sBAAKhD,UAAU,wBAAf,UACE,0DAA6BqS,EAAa9E,UAC1C,4BAAI8E,EAAa5E,iBACjB,8CAAiB4E,EAAa9E,OAAO+E,MAAM,KAAK,GAAhD,OACA,cAAC,IAAD,CAAcC,QAAM,EAACrW,KAAK,aAA1B,SACE,qBAAK8D,UAAU,eAAf,cACgCuI,IAA7B8J,EAAa1E,aAA6B,mBAAGrI,KAAM+M,EAAa1E,YAAanN,OAAO,SAA1C,SAAmD,cAAC,IAAD,CAASgS,KAAG,EAACrM,KAAK,uBAS9H,OACE,gCACE,cAAC,IAAD,UACE,qBAAKlG,cAAY,YAAjB,SACE,qBAAKD,UAAU,cAAf,SACGmE,SAIL4N,GAAe,eAAC,IAAD,CAAQ3R,GAAG,cAAcsB,QAzDd,WAC9BsQ,GAAgBD,IAwDG,qBACP,cAAC,IAAD,CAAS5L,KAAK,iBAAiB/F,GAAG,gBAE3C2R,GAAe,cAAC,GAAD,CAAOzD,WAAY8D,EAAY9D,WAAYE,YAAa4D,EAAY5D,qBC+C3EjP,I,OAAAA,aANqC,SAACC,GAAD,MAAY,CAC9DsI,SAAUtI,EAAMuI,WAAWD,SAC3BjK,cAAe2B,EAAMuI,WAAWlK,cAChC4U,cAAejT,EAAMuI,WAAWpK,UAGM,KAAzB4B,EAtHoB,SAACK,GAAkB,IAkF9C8S,EAhFIC,EAA0J/S,EAA1J+S,iBAAkBC,EAAwIhT,EAAxIgT,SAAU/U,EAA8H+B,EAA9H/B,cAAe0J,EAA+G3H,EAA/G2H,MAAO1E,EAAwGjD,EAAxGiD,QAASgQ,EAA+FjT,EAA/FiT,QAASnK,EAAsF9I,EAAtF8I,YAAaZ,EAAyElI,EAAzEkI,SAAyBgL,EAAgDlT,EAA/D/B,cAAqC4U,EAA0B7S,EAA1B6S,cAAe9U,EAAWiC,EAAXjC,OAFtG,EAIL+C,oBAAkB,GAJb,mBAI1CqS,EAJ0C,KAI1BC,EAJ0B,OAKvBtS,mBAAiB,IALM,mBAK1CuS,EAL0C,KAKnCC,EALmC,KAsE3CC,EAAoCN,EAAQ5O,KAAI,SAACgP,EAAc1H,GAEjE,OACA,sBAAKvL,UAAU,QAAf,UACI,8BAAIiT,EAAMpV,cAAV,eACA,4BAAIoV,EAAMA,QACV,4BAAIA,EAAMvK,YAAYjF,QAAQ,IAAK,KAAKkF,UAAU,EAAG,MACpDsK,EAAMtV,SAAW8U,GAAiB,cAAC,IAAD,CAAQjN,SAAO,EAAC9D,QAAS,kBA5Cf,SAAC0R,GAElD,IAAItK,EAAyB,CACzB6J,iBAAkBA,EAClBC,SAAUA,EACVQ,QAASA,GAGbxX,IACCoN,OAAO,gDAAiD,CAAE/M,KAAM6M,IAChEhN,MAAK,SAACC,GACLkN,MAAM,kBACN9H,OAAO+G,SAASgB,YACf/M,OAAM,SAACC,GACRC,QAAQC,IAAIF,MA8BwDiX,CAAkBJ,EAAM7M,MAAvD,sBAJXmF,MAiBhC,OANImH,EADAK,EACiBI,EAGAA,EAAgBnN,MAAM,EAAE,GAIzC,eAAC,IAAD,CAAShG,UAAU,uBAAnB,UACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAAcA,UAAU,mBAAxB,SAA4CuH,IACxC,cAAC,IAAD,CAAavH,UAAU,qBAAvB,SACK6C,IAEL,2CAAchF,EAAd,OAAiC6K,EAAYjF,QAAQ,IAAK,KAAKkF,UAAU,EAAG,OACzEhL,IAAW8U,GAAiB,cAAC,IAAD,CAAQjN,SAAO,EAAC/D,MAAM,SAASC,QAAS,kBA/C5B,SAACkR,GAEtD,IAAI9J,EAA0B,CAC5B6J,iBAAkBA,EAClBC,SAAUA,GAGZhX,IACCoN,OAAO,iDAAkD,CAAE/M,KAAM6M,IACjEhN,MAAK,SAACC,GAEHkN,MAAM,mBACN9H,OAAO+G,SAASgB,YAEjB/M,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAgCyEkX,CAAmBV,IAAjE,8BAEnC,qBAAK5S,UAAU,uBAAf,SACI,8CAEA,qBAAKA,UAAU,oBAAf,SAAoC0S,IACpC,cAAC,IAAD,CAAQlN,SAAO,EAAC/D,MAAM,UAAUzB,UAAU,uBAAuB0B,QAAS,kBAAMsR,GAAmBD,IAAnG,SAAqHA,EAAiB,eAAiB,qBACvJ,sBAAMlT,SA9FqC,SAACuJ,GACpDA,EAAMrJ,iBACNmT,EAAS,IAET,IAAIpK,EAAyB,CACzB6J,iBAAkBA,EAClBC,SAAUA,EACVjV,OAAQ8U,EACR5U,cAAeiV,EACfG,MAAOA,GAGXrX,IACC0L,KAAK,6CAA8C+B,KAAGC,UAAUR,IAChEhN,MAAK,SAACC,GACLkN,MAAM,oBACN9H,OAAO+G,SAASgB,YACf/M,OAAM,SAACC,GACRC,QAAQC,IAAIF,OA4EN,SACK0L,GAAY,gCAAK,cAAC,IAAD,CAAU5L,KAAK,WAAWqN,KAAK,IAAIpJ,KAAK,QAAQC,GAAG,QAAQF,MAAM,QAAQI,MAAO2S,EAAO1S,SAnG3D,SAAC6I,GAC3D8J,EAAS9J,EAAM5I,OAAOF,UAkGwH,cAAC,IAAD,CAAQkF,SAAO,EAACtJ,KAAK,SAArB,gCCLvIqD,I,OAAAA,aAPqC,SAACC,GAAD,MAAY,CAC5D5C,OAAQ4C,EAAM6L,YAAYzO,OAC1BkL,SAAUtI,EAAMuI,WAAWD,SAC3BnK,OAAQ6B,EAAMuI,WAAWpK,OACzBE,cAAe2B,EAAMuI,WAAWlK,iBAGI,KAAzB0B,EA1GkB,SAACK,GAAkB,IAExChD,EAA4CgD,EAA5ChD,OAAQkL,EAAoClI,EAApCkI,SAAUnK,EAA0BiC,EAA1BjC,OAAQE,EAAkB+B,EAAlB/B,cAE5B2R,EAAoB/H,GAAY7H,EAAMqI,QAAQC,SAASC,SAAS1E,QAAQ,UAAW,IAAIA,QAAQ,KAAM,MAE3GvC,qBAAU,WACNC,OAAO+D,SAAS,EAAG,KACpB,IAEH,IAAIqO,EAA8B,cAAC,GAAD,IAElC,GAAI3W,EAAOqF,OAAQ,CAEf,IAAMuR,EAAgB5W,EAAOwI,QAAO,SAACkG,GAAD,OAAkBA,EAAMnL,OAASqP,KAAW,GAG5E+D,OADkBhL,IAAlBiL,EACU,mBAEAA,EAAcD,QAAQtP,KAAI,SAACwP,EAAiBlI,GAElD,OACI,cAAC,GAAD,CACIoH,iBAAkBnD,EAClBoD,SAAUa,EAAOrN,IACjBvI,cAAe4V,EAAO5V,cACtB0J,MAAOkM,EAAOlM,MACd1E,QAAS4Q,EAAO5Q,QAChBgQ,QAASY,EAAOZ,QAChBnK,YAAa+K,EAAO/K,YACpB/K,OAAQ8V,EAAO9V,OACHmK,SAAUA,EAAUgL,qBAAsB,GAAIL,cAAe,IAApElH,MAEd/D,UAjCoC,MAqCX9G,mBAAiB,IArCN,mBAqCxCgT,EArCwC,KAqC5BC,EArC4B,OAsCLjT,mBAAiB,IAtCZ,mBAsCxCkT,EAtCwC,KAsCzBC,EAtCyB,KAwCzC5J,EAAwD,SAACb,GAE3D,OAAQA,EAAM5I,OAAOL,MACjB,IAAK,kBACDwT,EAAcvK,EAAM5I,OAAOF,OAC3B,MACJ,IAAK,qBACDuT,EAAiBzK,EAAM5I,OAAOF,SA+BpCwT,EACF,sBAAK9T,UAAU,4BAAf,UACI,oBAAIA,UAAU,0BAAd,yDACA,uBAAMA,UAAU,kBAAkBH,SA5Ba,SAACuJ,GACpDA,EAAMrJ,iBAEN,IAAI+I,EAAkB,CAClB6J,iBAAkBnD,EAClB7R,OAAQA,EACRE,cAAeA,EACf0J,MAAOmM,EACP7Q,QAAS+Q,GAGbhY,IACK0L,KAAK,8CAA+C+B,KAAGC,UAAUR,IACjEhN,MAAK,SAACC,GAEHkN,MAAM,qBACN0K,EAAc,IACdE,EAAiB,IACjB1S,OAAO+G,SAASgB,YAEjB/M,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAOhB,UACI,cAAC,IAAD,CAAUF,KAAK,OAAOiE,KAAK,kBAAkBC,GAAG,kBAAkBG,SAAU0J,EAAc3J,MAAOoT,EAAYxT,MAAM,gBACnH,cAAC,IAAD,CAAUhE,KAAK,WAAWqN,KAAK,IAAIpJ,KAAK,qBAAqBC,GAAG,qBAAqBG,SAAU0J,EAAc3J,MAAOsT,EAAe1T,MAAM,mBACzI,cAAC,IAAD,CAAQsF,SAAO,EAAC/D,MAAM,UAAUvF,KAAK,SAArC,8BAIZ,OACI,cAAC,IAAD,UACI,sBAAK8D,UAAU,oBAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BwP,IAC7B1H,GAAYgM,EACb,8BAAMP,aCpCPhU,gBAPqC,SAACC,GAAD,MAAY,CAC9DuU,oBAAqBvU,EAAMwU,kBAAkBD,oBAC7CjM,SAAUtI,EAAMuI,WAAWD,SAC3BnK,OAAQ6B,EAAMuI,WAAWpK,OACzB8C,SAAUjB,EAAME,YAAYe,YAGflB,EA7CiB,SAACK,GAAkB,IAEzCkI,EAAoDlI,EAApDkI,SAAUnK,EAA0CiC,EAA1CjC,OAAQ8C,EAAkCb,EAAlCa,SAAUsT,EAAwBnU,EAAxBmU,oBAE9B7L,EAAqB+L,cAE3B,OACE,gCACE,cAAC,EAAD,CAAKxT,SAAUA,IACdsT,GAAuB,cAAC,GAAD,IACxB,eAAC,IAAD,CAAQ7L,SAAUA,EAAlB,UACE,cAAC,IAAD,CAAOgM,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,KACjC,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,SAASC,UAAWG,KAEtC,cAAC,IAAD,CAAOJ,KAAK,gBAAgBC,UAAWI,KACvC,cAAC,IAAD,CAAOL,KAAK,SAASC,UAAWnN,KAChC,cAAC,IAAD,CAAOkN,KAAK,WAAWC,UAAWK,KAClC,cAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,UAAUC,UAAWM,KACvC,cAAC,IAAD,CAAOP,KAAK,iBAAiBC,UAAWO,KAGxC,cAAC,IAAD,CAAOT,OAAK,EAACC,KAAK,SAASC,UAAWQ,KACtC,cAAC,IAAD,CAAOV,OAAK,EAACC,KAAK,eAAeC,UAAWS,KAC5C,cAAC,IAAD,CAAOX,OAAK,EAACC,KAAK,kBAAkBC,UAAWU,KAC/C,cAAC,IAAD,CAAOZ,OAAK,EAACC,KAAK,gBAAgBC,UAAWW,KAC7C,cAAC,IAAD,CAAOb,OAAK,EAACC,KAAK,wBAAwBC,UAAWY,KACrD,cAAC,IAAD,CAAOd,OAAK,EAACC,KAAK,yBAAyBC,UAAWa,KACtD,cAAC,IAAD,CAAOd,KAAK,gBAAgBC,UAAWc,KACvC,cAAC,IAAD,CAAOf,KAAK,SAASC,UAAW3D,KAChC,cAAC,IAAD,CAAO0D,KAAK,WAAWC,UAAW3C,KAClC,cAAC,IAAD,CAAO2C,UAAWe,OArBajN,EAASC,UAuB1C,cAAC,GAAD,CAAQL,SAAUA,EAAUnK,OAAQA,UCuB3B4B,I,OAAAA,aAZqC,SAACC,GAAD,MAAY,CAC9DiK,QAASjK,EAAMkK,eAAeD,QAC9BsK,oBAAqBvU,EAAMwU,kBAAkBD,wBAGpB,SAACpY,GAC1B,OAAO,aACLA,YACGgE,YAAmB,CAAEjE,aAAYa,YAAWE,aAAYE,aAAYY,yBAAwBE,cAAaC,YAAWE,oBAAoBjC,MAIhI4D,EAjEY,SAACK,GAAkB,IAEpCjD,EAAkJiD,EAAlJjD,WAAYjB,EAAsIkE,EAAtIlE,WAAYa,EAA0HqD,EAA1HrD,UAAWE,EAA+GmD,EAA/GnD,WAAYc,EAAmGqC,EAAnGrC,uBAAwBE,EAA2EmC,EAA3EnC,YAAaC,EAA8DkC,EAA9DlC,UAAWE,EAAmDgC,EAAnDhC,iBAAkB6L,EAAiC7J,EAAjC6J,QAASsK,EAAwBnU,EAAxBmU,oBAgDlI,OA9CA7S,qBAAU,WAGR3E,IACAb,IACAe,IACAE,IAE6C,OAAzCsO,aAAamK,QAAQ,iBACvB7X,GAAuB,GAGgB,OAArC0N,aAAamK,QAAQ,cACvB3X,GAAY,GAEZC,EAAUuN,aAAamK,QAAQ,WAC/BxX,EAAiBqN,aAAamK,QAAQ,oBAKuC,SAAChV,EAAIiV,EAAKC,GACvF,IAAMC,EAAkBrD,SAASsD,eAAepV,GAEhD,IAAKmV,EAAiB,CACpB,IAAME,EAASvD,SAASwD,cAAc,UACtCD,EAAOvZ,KAAO,kBACduZ,EAAOpT,IAAMgT,EACbI,EAAOrV,GAAKA,EACZqV,EAAOE,OAAS,WACVL,GAAUA,KAEhBpD,SAAS0D,KAAKC,YAAYJ,GAIxBF,GAAmBD,GAAUA,IAInCQ,CAAgB,gBAAD,yDAAoErM,IAAW,WAC5FpN,QAAQC,IAAI,iCAGb,IAEK,cAAC,GAAD,CAAQyX,oBAAqBA,EAAqBjM,UAAU,EAAOnK,OAAQ,GAAI8C,UAAU,QCjE7FsV,GAAcC,QACW,cAA7B7U,OAAO+G,SAAS+N,UAEe,UAA7B9U,OAAO+G,SAAS+N,UAEhB9U,OAAO+G,SAAS+N,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTta,MAAK,SAAA0a,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlX,QACf6W,UAAUC,cAAcO,WAK1Bxa,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBH,OAAM,SAAA2a,GACLza,QAAQya,MAAM,4CAA6CA,MC9DjE,IAAMC,GAAuB,CAC3Bva,MAAO,IAWMwa,GARM,WAAmD,IAAlDxX,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCACrE,OAAQA,EAAOpO,MACb,IAAK,aACH,OAAO,2BAAKsD,GAAZ,IAAmBhD,MAAO8N,EAAO9N,QACnC,QAAS,OAAOgD,ICRduX,GAAuB,CAC3B/a,OAAQ,IAWKib,GARO,WAAmD,IAAlDzX,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCACtE,OAAQA,EAAOpO,MACb,IAAK,cACH,OAAO,2BAAKsD,GAAZ,IAAmBxD,OAAQsO,EAAOtO,SACpC,QAAS,OAAOwD,ICRduX,GAAuB,CACzBra,OAAQ,IAWGwa,GARO,WAAmD,IAAlD1X,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCACpE,OAAQA,EAAOpO,MACX,IAAK,cACD,OAAO,2BAAKsD,GAAZ,IAAmB9C,OAAQ4N,EAAO5N,SACtC,QAAS,OAAO8C,ICRlBuX,GAAuB,CACzBna,OAAQ,IAWGua,GARO,WAAmD,IAAlD3X,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCACpE,OAAQA,EAAOpO,MACX,IAAK,cACD,OAAO,2BAAKsD,GAAZ,IAAmB5C,OAAQ0N,EAAO1N,SACtC,QAAS,OAAO4C,ICTlBuX,GAAuB,CACzBtN,QAAS,4CAWE2N,GARU,WAAmD,IAAlD5X,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCACvE,OAAQA,EAAOpO,MACX,IAAK,eACD,OAAO,2BAAKsD,GAAZ,IAAmBiK,QAASa,EAAOb,UACvC,QAAS,OAAOjK,ICNlBuX,GAAuB,CACzBtW,UAAU,EACVhB,YAAa,IAeF4X,GAZO,WAAmD,IAAlD7X,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCACpE,OAAQA,EAAOpO,MACX,IAAK,eACD,OAAO,2BAAKsD,GAAZ,IAAmBiB,SAAU6J,EAAO9M,YACxC,IAAK,uBACD,OAAO,2BAAKgC,GAAZ,IAAmBC,YAAa6K,EAAOrL,aAC3C,IAAK,sBACD,OAAO,2BAAKO,GAAZ,IAAmBC,YAAa6K,EAAOlL,eAC3C,QAAS,OAAOI,ICflBuX,GAAuB,CACzBhD,qBAAqB,GAWVuD,GARa,WAAmD,IAAlD9X,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCAC1E,OAAQA,EAAOpO,MACX,IAAK,oBACD,OAAO,2BAAKsD,GAAZ,IAAmBuU,oBAAqBzJ,EAAO9M,YACnD,QAAS,OAAOgC,ICSlBuX,GAAuB,CACzBja,UAAW,GACXE,SAAU,GACVW,OAAQ,GACRT,kBAAmB,GACnBE,qBAAsB,GACtBa,WAAY,GACZE,cAAe,GACf2J,UAAU,EACVjK,cAAe,GACfE,aAAc,GACdgB,kBAAmB,GACnBR,mBAAoB,GACpBE,yBAA0B,GAC1BE,yBAA0B,GAC1BE,gCAAiC,GACjCR,oBAAqB,GACrBf,0BAA2B,eA2ChBia,GAxCM,WAAmD,IAAlD/X,EAAiD,uDAAlCuX,GAAezM,EAAmB,uCACnE,OAAQA,EAAOpO,MACX,IAAK,iBACD,OAAO,2BAAKsD,GAAZ,IAAmB1C,UAAWwN,EAAOxN,YACzC,IAAK,gBACD,OAAO,2BAAK0C,GAAZ,IAAmBxC,SAAUsN,EAAOtN,WACxC,IAAK,cACD,OAAO,2BAAKwC,GAAZ,IAAmB7B,OAAQ2M,EAAO3M,SACtC,IAAK,yBACD,OAAO,2BAAK6B,GAAZ,IAAmBtC,kBAAmBoN,EAAOpN,oBACjD,IAAK,4BACD,OAAO,2BAAKsC,GAAZ,IAAmBpC,qBAAsBkN,EAAOlN,uBACpD,IAAK,kBACD,OAAO,2BAAKoC,GAAZ,IAAmBvB,WAAYqM,EAAOrM,aAC1C,IAAK,qBACD,OAAO,2BAAKuB,GAAZ,IAAmBrB,cAAemM,EAAOnM,gBAC7C,IAAK,gBACD,OAAO,2BAAKqB,GAAZ,IAAmBsI,SAAUwC,EAAO9M,YACxC,IAAK,sBACD,OAAO,2BAAKgC,GAAZ,IAAmB3B,cAAeyM,EAAOzM,gBAC7C,IAAK,qBACD,OAAO,2BAAK2B,GAAZ,IAAmBzB,aAAcuM,EAAOvM,eAC5C,IAAK,yBACD,OAAO,2BAAKyB,GAAZ,IAAmBT,kBAAmBuL,EAAOvL,oBACjD,IAAK,2BACD,OAAO,2BAAKS,GAAZ,IAAmBjB,mBAAoB+L,EAAO/L,qBAClD,IAAK,kCACD,OAAO,2BAAKiB,GAAZ,IAAmBf,yBAA0B6L,EAAO7L,2BACxD,IAAK,kCACD,OAAO,2BAAKe,GAAZ,IAAmBb,yBAA0B2L,EAAO3L,2BACxD,IAAK,0CACD,OAAO,2BAAKa,GAAZ,IAAmBX,gCAAiCyL,EAAOzL,kCAC/D,IAAK,4BACD,OAAO,2BAAKW,GAAZ,IAAmBnB,oBAAqBiM,EAAOjM,sBACnD,IAAK,kCACD,OAAO,2BAAKmB,GAAZ,IAAmBlC,0BAA2BgN,EAAOhN,4BACzD,QAAS,OAAOkC,IC3DTgY,GAXKC,YAAgB,CAClCpQ,YAAa4P,GACbhS,WAAY+R,GACZvR,YAAayR,GACb7L,YAAa8L,GACbzN,eAAgB0N,GAChB1X,YAAa2X,GACbrD,kBAAmBsD,GACnBvP,WAAYwP,K,kBCTCG,GALDC,aAAe,CACzBC,QAASJ,GACTK,WAAY,CAACC,QCIjBC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAEOxF,SAASsD,eAAe,SXKtB,WACb,GAA6C,kBAAmBa,UAAW,CAGzE,GADkB,IAAI4B,IAAIC,uBAAwB/W,OAAO+G,UAC3CiQ,SAAWhX,OAAO+G,SAASiQ,OAIvC,OAGFhX,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMgV,EAAK,UAAM8B,uBAAN,sBAENnC,GAwCX,SAAiCK,GAE/BgC,MAAMhC,GACHta,MAAK,SAAAuc,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ1c,IAAI,gBAAgB2c,QAAQ,cAG7CnC,UAAUC,cAAclM,MAAMtO,MAAK,SAAA0a,GACjCA,EAAaiC,aAAa3c,MAAK,WAC7BqF,OAAO+G,SAASgB,eAKpBiN,GAAgBC,MAGnBja,OAAM,WACLE,QAAQC,IACN,oEAzDAoc,CAAwBtC,GAHxBD,GAAgBC,OWlBxBuC,M","file":"static/js/main.1391e3d2.chunk.js","sourcesContent":["// data\nexport const SAVE_SIGHTS = 'SAVE_SIGHTS'\nexport const SAVE_WALKS = 'SAVE_WALKS'\nexport const SAVE_CITIES = 'SAVE_CITIES'\nexport const SAVE_BOARDS = 'SAVE_BOARDS'\n// registration\nexport const SET_FIRST_NAME = 'SET_FIRST_NAME'\nexport const SET_LAST_NAME = 'SET_LAST_NAME'\nexport const SET_REGISTRATION_EMAIL = 'SET_REGISTRATION_EMAIL'\nexport const SET_REGISTRATION_PASSWORD = 'SET_REGISTRATION_PASSWORD'\nexport const SET_ACTIVATION_MESSAGE_EMPHASIS = 'SET_ACTIVATION_MESSAGE_EMPHASIS'\n// login\nexport const SET_POPUP_VISIBLE = 'SET_POPUP_VISIBLE'\nexport const SET_LOGGED_IN = 'SET_LOGGED_IN'\nexport const SET_USER_ID = 'SET_USER_ID'\nexport const SET_USER_FIRST_NAME = 'SET_USER_FIRST_NAME'\nexport const SET_USER_LAST_NAME = 'SET_USER_LAST_NAME'\nexport const SET_LOGIN_EMAIL = 'SET_LOGIN_EMAIL'\nexport const SET_LOGIN_PASSWORD = 'SET_LOGIN_PASSWORD'\nexport const SET_FORGOT_PASSWORD_EMAIL = 'SET_FORGOT_PASSWORD_EMAIL'\n// reset login credentials \nexport const SET_RESET_PASSWORD_EMAIL = 'SET_RESET_PASSWORD_EMAIL'\nexport const SET_RESET_PASSWORD_OLD_PASSWORD = 'SET_RESET_PASSWORD_OLD_PASSWORD'\nexport const SET_RESET_PASSWORD_NEW_PASSWORD = 'SET_RESET_PASSWORD_NEW_PASSWORD'\nexport const SET_RESET_PASSWORD_CONFIRM_NEW_PASSWORD = 'SET_RESET_PASSWORD_CONFIRM_NEW_PASSWORD'\n// verification\nexport const SET_VERIFICATION_EMAIL = 'SET_VERIFICATION_EMAIL'\n// search\nexport const HANDLE_CHANGE_SEARCH = 'HANDLE_CHANGE_SEARCH'\nexport const HANDLE_CLICK_SEARCH = 'HANDLE_CLICK_SEARCH'\nexport const SET_REDIRECT = 'SET_REDIRECT'","import Sight from \"../types/Sights/Sight\"\nimport Walk from \"../types/Walks/Walk\"\nimport City from \"../types/Cities/City\"\nimport Board from \"../types/Boards/Board\"\nimport * as types from '../constants/constants'\nimport { Dispatch } from \"redux\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\n\n// data\n\nexport const saveSights: () => (dispatch: Dispatch) => Promise<any> = () => {\n    return (dispatch) => {\n        return axios.get('https://city-walks.herokuapp.com/blog').then(\n            (res: AxiosResponse) => {\n                let sights: Array<Sight> = res.data\n                dispatch({ type: types.SAVE_SIGHTS, sights })\n            }\n        ).catch((err: AxiosError) => {\n            console.log(err)\n        });\n    };\n};\n\nexport const saveWalks: () => (dispatch: Dispatch) => Promise<any> = () => {\n    return (dispatch) => {\n        return axios.get('https://city-walks.herokuapp.com/walks').then(\n            (res: AxiosResponse) => {\n                let walks: Array<Walk> = res.data\n                dispatch({ type: types.SAVE_WALKS, walks })\n            }\n\n        ).catch((err: AxiosError) => {\n            console.log(err)\n        });\n    };\n};\n\nexport const saveCities: () => (dispatch: Dispatch) => Promise<any> = () => {\n    return (dispatch) => {\n        return axios.get('https://city-walks.herokuapp.com/cities').then(\n            (res: AxiosResponse) => {\n                let cities: Array<City> = res.data\n                dispatch({ type: types.SAVE_CITIES, cities })\n            }\n        ).catch((err: AxiosError) => {\n            console.log(err)\n        });\n    };\n};\n\nexport const saveBoards: () => (dispatch: Dispatch) => Promise<any> = () => {\n    return (dispatch) => {\n        return axios.get('https://city-walks.herokuapp.com/boards').then(\n            (res: AxiosResponse) => {\n                let boards: Array<Board> = res.data\n                dispatch({ type: types.SAVE_BOARDS, boards })\n            }\n        ).catch((err: AxiosError) => {\n            console.log(err)\n        });\n    };\n};\n\n// registration\n\nexport const setFirstName = (firstName: string) => {\n    return { type: types.SET_FIRST_NAME, firstName }\n}\n\nexport const setLastName = (lastName: string) => {\n    return { type: types.SET_LAST_NAME, lastName }\n}\n\nexport const setRegistrationEmail = (registrationEmail: string) => {\n    return { type: types.SET_REGISTRATION_EMAIL, registrationEmail }\n}\n\nexport const setRegistrationPassword = (registrationPassword: string) => {\n    return { type: types.SET_REGISTRATION_PASSWORD, registrationPassword }\n}\n\nexport const setActivationMessageEmphasis = (activationMessageEmphasis: string) => {\n    return { type: types.SET_ACTIVATION_MESSAGE_EMPHASIS, activationMessageEmphasis }\n}\n\n// login\n\nexport const setPrivacyPopupVisible = (boolValue: boolean) => {\n    return { type: types.SET_POPUP_VISIBLE, boolValue }\n}\n\nexport const setLoggedIn = (boolValue: boolean) => {\n    return { type: types.SET_LOGGED_IN, boolValue }\n}\n\nexport const setUserId = (userId: string | null) => {\n    return { type: types.SET_USER_ID, userId }\n}\n\nexport const setUserFirstName = (userFirstName: string | null) => {\n    return { type: types.SET_USER_FIRST_NAME, userFirstName }\n}\n\nexport const setUserLastName = (userLastName: string | null) => {\n    return { type: types.SET_USER_LAST_NAME, userLastName }\n}\n\nexport const setLoginEmail = (loginEmail: string) => {\n    return { type: types.SET_LOGIN_EMAIL, loginEmail }\n}\n\nexport const setLoginPassword = (loginPassword: string) => {\n    return { type: types.SET_LOGIN_PASSWORD, loginPassword }\n}\n\nexport const setForgotPasswordEmail = (forgotPasswordEmail: string) => {\n    return { type: types.SET_FORGOT_PASSWORD_EMAIL, forgotPasswordEmail }\n}\n\n// reset login credentials \n\nexport const setResetPasswordEmail = (resetPasswordEmail: string) => {\n    return { type: types.SET_RESET_PASSWORD_EMAIL, resetPasswordEmail }\n}\n\nexport const setResetPasswordOldPassword = (resetPasswordOldPassword: string) => {\n    return { type: types.SET_RESET_PASSWORD_OLD_PASSWORD, resetPasswordOldPassword }\n}\n\nexport const setResetPasswordNewPassword = (resetPasswordNewPassword: string) => {\n    return { type: types.SET_RESET_PASSWORD_NEW_PASSWORD, resetPasswordNewPassword }\n}\n\nexport const setResetPasswordConfirmNewPassword = (resetPasswordConfirmNewPassword: string) => {\n    return { type: types.SET_RESET_PASSWORD_CONFIRM_NEW_PASSWORD, resetPasswordConfirmNewPassword }\n}\n\n// verification\n\nexport const setVerificationEmail = (verificationEmail: string) => {\n    return { type: types.SET_VERIFICATION_EMAIL, verificationEmail }\n}\n\n// search\n\nexport const handleChangeSearch = (inputValue: string) => {\n    return { type: types.HANDLE_CHANGE_SEARCH, inputValue }\n}\n\nexport const handleClickSearch = (cityToSearch: string) => {\n    return { type: types.HANDLE_CLICK_SEARCH, cityToSearch }\n}\n\nexport const setSearchValue = (inputValue: string) => {\n    return { type: types.HANDLE_CHANGE_SEARCH, inputValue }\n}\n\nexport const setRedirect = (boolValue: boolean) => {\n    return { type: types.SET_REDIRECT, boolValue }\n}","import React from 'react'\nimport { MDBInput } from \"mdbreact\"\nimport { FaSearchLocation } from \"react-icons/fa\"\nimport { connect } from 'react-redux'\nimport { Action, bindActionCreators, Dispatch } from 'redux'\nimport RootState from \"../../types/State/Root/State\"\nimport { handleChangeSearch, setRedirect } from '../../actions/actions'\nimport './SeachBar.scss'\n\ninterface Props {\n  handleChangeSearch: (inputValue: string) => Action;\n  setRedirect: (boolValue: boolean) => Action;\n  searchValue: string;\n}\n\nlet SearchBar: React.FC<Props> = (props: Props) => {\n\n  const { handleChangeSearch, setRedirect, searchValue } = props;\n\n  function submitSearch(e: React.FormEvent) {\n    e.preventDefault()\n    setRedirect(true)\n  }\n\n  function processInputValue(e: React.ChangeEvent<any>) {\n    const inputValue: string = e.target.value\n    handleChangeSearch(inputValue)\n  }\n\n  return (\n    <form onSubmit={submitSearch} className=\"search-container\">\n      <span>\n        <MDBInput\n          data-testid=\"search-input\"\n          label=\"Search Walks\"\n          name=\"search-input\"\n          id=\"search-input\"\n          type=\"text\" placeholder=\"Search\"\n          className=\"search-input\"\n          value={searchValue}\n          onChange={processInputValue}\n        />\n        <button type=\"submit\" data-testid=\"search-btn\" className=\"search-btn\"><FaSearchLocation id=\"search-btn-icon\" className=\"search-location-icon\" /></button>\n      </span>\n    </form>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  searchValue: state.searchState.searchValue,\n});\n\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ handleChangeSearch, setRedirect }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","import React, { useState, useEffect } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport SearchBar from '../SearchBar/SearchBar'\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBHamburgerToggler, MDBCollapse, MDBInput, MDBContainer, MDBRow, MDBCol } from \"mdbreact\"\nimport { connect } from 'react-redux'\nimport { Action, Dispatch, bindActionCreators } from \"redux\"\nimport { setRedirect } from \"../../actions/actions\"\nimport RootState from \"../../types/State/Root/State\"\nimport './Nav.scss'\n\ninterface Props {\n  redirect: boolean;\n  setRedirect: (boolValue: boolean) => Action;\n}\n\nconst Nav: React.FC<Props> = (props: Props) => {\n\n  const [toggleNav, setToggleNav] = useState<boolean>(false)\n  const [scroll, setScroll] = useState<boolean>(false);\n\n  const { redirect, setRedirect } = props;\n\n  const pushSlug: Function = useHistory().push\n\n  useEffect(() => {\n    if (redirect) {\n      pushSlug(\"/walks\")\n      setRedirect(false)\n    }\n\n    window.addEventListener(\"scroll\", () => {\n      setScroll(window.scrollY > 2);\n    });\n  })\n\n  const handleClick: () => void = () => {\n    setToggleNav(!toggleNav)\n  }\n\n  return (\n    <MDBNavbar className={scroll ? \"nav-bar nav-bar--scroll\" : \"nav-bar\"} dark expand=\"lg\">\n      <MDBContainer>\n        <MDBNavbarBrand>\n          <span className=\"white-text\"><MDBNavLink className=\"white-text logo\" to=\"/\">City Walks</MDBNavLink></span>\n        </MDBNavbarBrand>\n        <MDBHamburgerToggler color=\"#fff\" className=\"hamburger1\" id=\"hamburger1\" onClick={handleClick} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={toggleNav} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n              <MDBNavLink className=\"white-text\" to=\"/\">Home</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink data-testid=\"nav-link-cities\" className=\"white-text\" to=\"/cities\">Cities</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"white-text\" to=\"/walks\">Walks</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"white-text\" to=\"/sights\">Sights</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"white-text\" to=\"/forum\">Forum</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"white-text\" to=\"/about\">About</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"white-text\" to=\"/contact\">Contact</MDBNavLink>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <SearchBar searchValue={\"\"} />\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBContainer>\n    </MDBNavbar>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  redirect: state.searchState.redirect,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setRedirect }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","export default __webpack_public_path__ + \"static/media/carousel-illustration-1-2.54c6c31d.jpg\";","export default __webpack_public_path__ + \"static/media/carousel-illustration-2-2.78dde8a2.jpg\";","export default __webpack_public_path__ + \"static/media/carousel-illustration-3-2.8c9c7bea.jpg\";","import React from \"react\"\nimport { MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBMask } from \"mdbreact\"\nimport carouselImage1 from \"./carousel-images/carousel-illustration-1-2.jpg\"\nimport carouselImage2 from \"./carousel-images/carousel-illustration-2-2.jpg\"\nimport carouselImage3 from \"./carousel-images/carousel-illustration-3-2.jpg\"\nimport './Carousel.scss'\n\nconst Carousel: React.FC = () => {\n  return (\n    <div className=\"home-carousel\">\n      <MDBCarousel\n        activeItem={1}\n        length={3}\n        showControls={true}\n        showIndicators={true}\n        className=\"z-depth-1\"\n      >\n        <MDBCarouselInner>\n          <MDBCarouselItem itemId=\"1\">\n            <MDBView className='carousel-view'>\n              <img\n                className=\"d-block w-100 carousel-img\"\n                src={carouselImage1}\n                alt=\"First slide\"\n              />\n              <MDBMask />\n            </MDBView>\n            <MDBCarouselCaption className=\"carousel-caption\">\n              <h3 className=\"h3-responsive\">Explore</h3>\n              <p>the history of cities, their landmarks and hidden gems.</p>\n            </MDBCarouselCaption>\n          </MDBCarouselItem>\n          <MDBCarouselItem itemId=\"2\">\n            <MDBView className='carousel-view'>\n              <img\n                className=\"d-block w-100 carousel-img\"\n                src={carouselImage2}\n                alt=\"Second slide\"\n              />\n              <MDBMask />\n            </MDBView>\n            <MDBCarouselCaption className=\"carousel-caption\">\n              <h3 className=\"h3-responsive\">Discover</h3>\n              <p>local attractions, landmarks, museums and public spaces.</p>\n            </MDBCarouselCaption>\n          </MDBCarouselItem>\n          <MDBCarouselItem itemId=\"3\">\n            <MDBView className='carousel-view'>\n              <img\n                className=\"d-block w-100 carousel-img\"\n                src={carouselImage3}\n                alt=\"Third slide\"\n              />\n              <MDBMask overlay=\"black-slight\" />\n            </MDBView>\n            <MDBCarouselCaption className=\"carousel-caption\">\n              <h3 className=\"h3-responsive\">Share</h3>\n              <p>your experiences and recommendations.</p>\n            </MDBCarouselCaption>\n          </MDBCarouselItem>\n        </MDBCarouselInner>\n      </MDBCarousel>\n    </div>\n  );\n}\n\nexport default Carousel;","import React from 'react'\nimport { MDBView } from \"mdbreact\"\nimport marked from \"marked\"\nimport \"./SectionA.scss\"\n\ninterface Props {\n  content: string;\n  img: string;\n  alt: string;\n  zoom: boolean;\n  waves: boolean;\n}\n\nconst SectionA: React.FC<Props> = (props: Props) => {\n\n  const { content, img, alt, zoom, waves } = props\n\n  const createMarkup = (markup: string) => {\n    return { __html: marked(markup) }\n  }\n\n  return (\n    <div className='section-a grid-container-a'>\n      <div className='grid-item-a grid-item-a-text-box'>\n        <div dangerouslySetInnerHTML={createMarkup(content)}></div>\n      </div>\n      <div className='grid-item-a grid-item-a-image-box'>\n        <MDBView hover zoom={zoom} waves={waves} id=\"grid-item-overlay\">\n          <img className=\"grid-item-a-img\" src={img} alt={alt} />\n        </MDBView>\n      </div>\n    </div>\n  );\n};\n\nexport default SectionA\n\n// content: no more than 570 characters","import React from 'react'\nimport { MDBView } from \"mdbreact\"\nimport marked from \"marked\"\nimport \"./SectionB.scss\"\n\ninterface Props {\n  content: string;\n  img: string;\n  alt: string;\n  zoom: boolean;\n  waves: boolean;\n}\n\nconst SectionB: React.FC<Props> = (props: Props) => {\n\n  const { content, img, alt, zoom, waves } = props\n\n  const createMarkup = (markup: string) => {\n    return { __html: marked(markup) }\n  }\n\n  return (\n    <div className='section-b grid-container-b'>\n      <div className='grid-item-b grid-item-b-image-box'>\n        <MDBView hover zoom={zoom} waves={waves} id=\"grid-item-overlay\">\n          <img className=\"grid-item-b-img\" src={img} alt={alt} />\n        </MDBView>\n      </div>\n      <div className='grid-item-b grid-item-b-text-box'>\n        <div dangerouslySetInnerHTML={createMarkup(content)}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default SectionB","const urlify = (str: string) => str.toLowerCase().replace(/ /g, '-')\n\nexport default urlify","import React, { ReactNode } from 'react'\nimport { useGoogleMaps } from \"react-hook-google-maps\"\nimport urlify from \"../../functions/urlify\"\nimport Walk from '../../types/Walks/Walk'\nimport \"./LocatorMap.scss\"\n\ninterface Props {\n    walks: Array<Walk>\n}\n\nconst LocatorMap: React.FC<Props> = (props: Props) => {\n\n    const { walks } = props\n\n    const { ref, map, google } = useGoogleMaps(\n        // enable billing and restrict this api key to the production app\n        \"AIzaSyAIK0BvMxzAMX_JiAltdlYznF-G2NfEh7o\",\n        {\n            center: { lat: 53.60818414548348, lng: -1.3976421011088946 },\n            zoom: 4,\n            styles: [\n                {\n                    \"featureType\": \"all\",\n                    \"elementType\": \"all\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"on\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"all\",\n                    \"elementType\": \"labels\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        },\n                        {\n                            \"saturation\": \"-100\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"all\",\n                    \"elementType\": \"labels.text.fill\",\n                    \"stylers\": [\n                        {\n                            \"saturation\": 36\n                        },\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 40\n                        },\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"all\",\n                    \"elementType\": \"labels.text.stroke\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        },\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 16\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"all\",\n                    \"elementType\": \"labels.icon\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"administrative\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 20\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"administrative\",\n                    \"elementType\": \"geometry.stroke\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 17\n                        },\n                        {\n                            \"weight\": 1.2\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"landscape\",\n                    \"elementType\": \"geometry\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 20\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"landscape\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#4d6059\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"landscape\",\n                    \"elementType\": \"geometry.stroke\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#4d6059\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"landscape.natural\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#4d6059\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"poi\",\n                    \"elementType\": \"geometry\",\n                    \"stylers\": [\n                        {\n                            \"lightness\": 21\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"poi\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#4d6059\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"poi\",\n                    \"elementType\": \"geometry.stroke\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#4d6059\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road\",\n                    \"elementType\": \"geometry\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"on\"\n                        },\n                        {\n                            \"color\": \"#7f8d89\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#7f8d89\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.highway\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#7f8d89\"\n                        },\n                        {\n                            \"lightness\": 17\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.highway\",\n                    \"elementType\": \"geometry.stroke\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#7f8d89\"\n                        },\n                        {\n                            \"lightness\": 29\n                        },\n                        {\n                            \"weight\": 0.2\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.arterial\",\n                    \"elementType\": \"geometry\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 18\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.arterial\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#7f8d89\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.arterial\",\n                    \"elementType\": \"geometry.stroke\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#7f8d89\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.local\",\n                    \"elementType\": \"geometry\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 16\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.local\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#7f8d89\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"road.local\",\n                    \"elementType\": \"geometry.stroke\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#7f8d89\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"transit\",\n                    \"elementType\": \"geometry\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#000000\"\n                        },\n                        {\n                            \"lightness\": 19\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"all\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#2b3638\"\n                        },\n                        {\n                            \"visibility\": \"on\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"geometry\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#2b3638\"\n                        },\n                        {\n                            \"lightness\": 17\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"geometry.fill\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#24282b\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"geometry.stroke\",\n                    \"stylers\": [\n                        {\n                            \"color\": \"#24282b\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"labels\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"labels.text\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"labels.text.fill\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"labels.text.stroke\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"water\",\n                    \"elementType\": \"labels.icon\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                }\n            ]\n        },\n    );\n\n    if (map) {\n        // loop walks array and create a marker for each one\n        walks.map((walk: Walk) => {\n\n            const lat: number = parseFloat(walk.lat)\n            const lng: number = parseFloat(walk.lng)\n            // The marker\n\n            const walkMarker = new google.maps.Marker({\n                position: { lat: lat, lng: lng },\n                map: map,\n            });\n\n            // attach infoWindows to markers\n            const infowindowContent: ReactNode =\n                `<a href=\"/walks/${urlify(walk.walk)}\">\n                    <div class=\"map-marker-link\">\n                        <h3>${walk.walk}</h3>\n                        <h6>${walk.city}</h6>\n                        <img src=\"${walk.coverImg}\" style=\"height: 75px; width: 150px; margin-top: 10px; border-radius: 2px;\"/>\n                    </div>\n                </a>`\n            // declare infowindow and insert content\n            const infoWindow = new google.maps.InfoWindow({\n                content: infowindowContent,\n            });\n\n            // add click event to markers to open an infowindow\n            walkMarker.addListener(\"click\", () => {\n                infoWindow.open(map, walkMarker);\n            });\n\n        })\n\n\n\n    }\n\n\n    return (\n        <div ref={ref} className=\"locator-map\" />\n    )\n}\n\nexport default LocatorMap","import React from 'react'\nimport './LoadingBar.scss'\n\nconst LoadingBar: React.FC = () => {\n    return (\n        <div className=\"loading-bar__container\">\n            <p>Loading...</p>\n            <div className=\"loading-bar\"></div>\n        </div>\n    )\n}\n\nexport default LoadingBar\n\n","import React, { useEffect } from \"react\"\nimport { MDBBtn, MDBContainer } from \"mdbreact\"\nimport { Link } from \"react-router-dom\"\nimport Carousel from '../../Carousel/Carousel'\nimport SectionA from '../../SectionA/SectionA'\nimport SectionB from '../../SectionB/SectionB'\nimport urlify from '../../../functions/urlify'\nimport LocatorMap from \"../../LocatorMap/LocatorMap\"\nimport LoadingBar from \"../../LoadingBar/LoadingBar\"\nimport { GiWalkingBoot } from 'react-icons/gi'\nimport { RiArrowDropDownLine } from 'react-icons/ri'\nimport { connect } from 'react-redux'\nimport Walk from '../../../types/Walks/Walk'\nimport RootState from \"../../../types/State/Root/State\"\nimport './Home.scss'\n\ninterface Props {\n    walks: Array<Walk>\n}\n\nconst Home: React.FC<Props> = (props: Props) => {\n\n    const { walks } = props\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    let featuredWalks: Array<Walk> = walks.filter(walk => walk.featuredWalk === true);\n\n    // if there are less than 3 featured walks set in the db just use the first 3 entries in walks\n    if (featuredWalks.length < 3) {\n        featuredWalks = walks;\n    }\n\n    if (walks.length) {\n        return (\n            <MDBContainer>\n                <div>\n                    <Carousel />\n                    <div className=\"page-heading-container featured-walks-heading-container\">\n                        <h2 className=\"page-heading\"><a href=\"#featured-walk-1\" className=\"featured-walks-link\"><RiArrowDropDownLine /> Featured Walks <RiArrowDropDownLine /></a></h2>\n                    </div>\n                    <hr />\n\n                    <Link to={\"/walks/\" + (urlify(featuredWalks[0].walk))}>\n                        <div className=\"center featured-walks-h3-container\" id=\"featured-walk-1\">\n                            <h3 className=\"featured-walks-h3\">{featuredWalks[0].walk}</h3>\n                        </div>\n                        <SectionA content={featuredWalks[0].content1} img={featuredWalks[0].coverImg} alt={featuredWalks[0].walk} zoom={true} waves={true} />\n                        <div className=\"center\">\n                            <MDBBtn data-testid=\"explore-btn-1\" outline color=\"elegant\" className=\"featured-walks-btn\">Explore {featuredWalks[0].walk} <GiWalkingBoot /></MDBBtn>\n                        </div>\n                    </Link>\n                    <hr />\n                    <Link to={\"/walks/\" + (urlify(featuredWalks[1].walk))}>\n                        <div className=\"center featured-walks-h3-container\">\n                            <h3 className=\"featured-walks-h3\">{featuredWalks[1].walk}</h3>\n                        </div>\n                        <SectionB content={featuredWalks[1].content1} img={featuredWalks[1].coverImg} alt={featuredWalks[1].walk} zoom={true} waves={true} />\n                        <div className=\"center\">\n                            <MDBBtn data-testid=\"explore-btn-2\" className=\"section-b-home-btn featured-walks-btn\" outline color=\"elegant\">Explore {featuredWalks[1].walk} <GiWalkingBoot /></MDBBtn>\n                        </div>\n                    </Link>\n                    <hr />\n                    <Link to={\"/walks/\" + (urlify(featuredWalks[2].walk))}>\n                        <div className=\"center featured-walks-h3-container\">\n                            <h3 className=\"featured-walks-h3\">{featuredWalks[2].walk}</h3>\n                        </div>\n                        <SectionA content={featuredWalks[2].content1} img={featuredWalks[2].coverImg} alt={featuredWalks[2].walk} zoom={true} waves={true} />\n                        <div className=\"center\">\n                            <MDBBtn data-testid=\"explore-btn-3\" outline color=\"elegant\" className=\"featured-walks-btn\">Explore {featuredWalks[2].walk} <GiWalkingBoot /></MDBBtn>\n                        </div>\n                    </Link>\n                </div>\n                <LocatorMap walks={walks} />\n            </MDBContainer>\n        )\n    } else {\n        return (\n            <div>\n                <MDBContainer>\n                    <LoadingBar />\n                </MDBContainer>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n    walks: state.walksState.walks\n})\n\nexport default connect(mapStateToProps, null)(Home);","import React, { ReactNode, useEffect, useState } from \"react\"\nimport { MDBIcon, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBContainer } from 'mdbreact'\nimport ReactPaginate from \"react-paginate\"\nimport { connect } from 'react-redux'\nimport { Action, bindActionCreators, Dispatch } from \"redux\"\nimport { handleClickSearch, setRedirect } from \"../../../actions/actions\"\nimport City from \"../../../types/Cities/City\"\nimport RootState from \"../../../types/State/Root/State\"\nimport './Cities.scss'\n\ninterface Props {\n    cities: Array<City>;\n    handleClickSearch: (cityToSearch: string) => Action;\n    setRedirect: (boolValue: boolean) => Action;\n}\n\nconst Cities: React.FC<any> = (props: Props) => {\n\n    const { cities, handleClickSearch, setRedirect } = props;\n\n    const [pageNumber, setPageNumber] = useState<number>(0)\n\n    const citiesPerPage: number = 3;\n    const pagesVisited: number = pageNumber * citiesPerPage;\n\n    const pageCount: number = Math.ceil(cities.length / citiesPerPage);\n\n    const submitSearch: (cityName: string) => void = (cityName) => {\n        handleClickSearch(cityName)\n        setRedirect(true)\n    }\n\n    const displayAllCities: () => Array<ReactNode> = () => {\n\n        return (\n            cities.slice(pagesVisited, pagesVisited + citiesPerPage).map((city) => {\n                return (\n                    <div key={city._id}>\n                        <MDBCard className=\"city-card\" onClick={() => submitSearch(city.city)}>\n                            <MDBCardImage className=\"cutter img-fluid\" src={city.img} alt={city.city} waves />\n                            <MDBCardBody>\n                                <MDBCardTitle>{city.city}</MDBCardTitle>\n                                <MDBCardText>{city.description}</MDBCardText>\n                                <MDBBtn outline className=\"city-card-btn\">Find walks <MDBIcon icon=\"search\" /></MDBBtn>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </div>\n                )\n            })\n        )\n    }\n\n    const changePage = ({ selected }: { selected: number }) => {\n        setPageNumber(selected);\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    return (\n        <MDBContainer>\n            <div className=\"cities-page-container page\">\n                <div data-testid=\"cities-page-heading\" className=\"page-heading-container\">\n                    <h1 className=\"page-heading\">Cities</h1>\n                    <h2 className=\"page-subheading\">search walks by city</h2>\n                </div>\n                <div className=\"card-container\">{displayAllCities()}</div>\n                <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    pageCount={pageCount}\n                    onPageChange={changePage}\n                    containerClassName={\"pagination-buttons\"}\n                    previousLinkClassName={\"previous-button\"}\n                    nextLinkClassName={\"next-button\"}\n                    disabledClassName={\"pagination-disabled\"}\n                    activeClassName={\"pagination-active\"}\n                />\n            </div>\n        </MDBContainer>\n    )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n    cities: state.citiesState.cities,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        dispatch,\n        ...bindActionCreators({ handleClickSearch, setRedirect }, dispatch),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);\n\n// these cards will conduct a search and filter the walks by city -- each one will link to the walks page","import React, { ReactNode, useEffect, useState } from \"react\"\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBContainer } from 'mdbreact'\nimport { FaSearchLocation } from \"react-icons/fa\"\nimport urlify from '../../../functions/urlify'\nimport { Link } from \"react-router-dom\"\nimport ReactPaginate from \"react-paginate\"\nimport { GiWalkingBoot } from 'react-icons/gi'\nimport { connect } from 'react-redux';\nimport { Action, bindActionCreators, Dispatch } from \"redux\"\nimport { setSearchValue } from \"../../../actions/actions\"\nimport Walk from \"../../../types/Walks/Walk\"\nimport RootState from \"../../../types/State/Root/State\"\nimport './Walks.scss'\n\ninterface Props {\n    searchValue: string;\n    setSearchValue: (inputValue: string) => Action;\n    walks: Array<Walk>;\n}\n\nconst Walks: React.FC<Props> = (props: Props) => {\n\n    const { searchValue, setSearchValue, walks } = props;\n\n    // display all walks pagination\n\n    const [pageNumber, setPageNumber] = useState<number>(0)\n    let filteredResults: ReactNode;\n\n    const walksPerPage: number = 3;\n    const pagesVisited: number = pageNumber * walksPerPage;\n\n    const pageCount: number = Math.ceil(walks.length / walksPerPage);\n\n    const displayAllWalks: () => Array<ReactNode> = () => {\n        return (\n            walks.slice(pagesVisited, pagesVisited + walksPerPage).map(v => {\n                return (\n                    <div key={v._id}>\n                        <Link to={'walks/' + urlify(v.walk)}>\n                            <MDBCard className=\"walk-card\">\n                                <MDBCardImage className=\"cutter img-fluid\" src={v.coverImg} alt={v.walk} waves />\n                                <MDBCardBody>\n                                    <MDBCardTitle>{v.city}</MDBCardTitle>\n                                    <MDBCardTitle className=\"display-font\">{v.walk}</MDBCardTitle>\n                                    <MDBCardText>{v.description}</MDBCardText>\n                                    <MDBBtn outline color=\"elegant\" className=\"city-card-btn\">Explore <GiWalkingBoot /></MDBBtn>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </Link>\n                    </div>\n                )\n            })\n        )\n    }\n\n    const changePage = ({ selected }: { selected: number }) => {\n        setPageNumber(selected);\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    if (searchValue === \"\") {\n        filteredResults =\n            <MDBContainer>\n                <div className=\"page\">\n                    <div className=\"page-heading-container\">\n                        <h1 className=\"page-heading\">Walks</h1>\n                        <MDBBtn outline color=\"elegant\" className=\"city-card-btn\" onClick={() => setSearchValue(\"\")}>Show all walks</MDBBtn>\n                        <p data-testid=\"walks-search-icon\" className=\"walks-search-icon\"><FaSearchLocation className=\"search-location-icon\" />{`  ${searchValue}`}</p>\n                    </div>\n                    <div className=\"card-container\">\n                        {displayAllWalks()}\n                    </div>\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        pageCount={pageCount}\n                        onPageChange={changePage}\n                        containerClassName={\"pagination-buttons\"}\n                        previousLinkClassName={\"previous-button\"}\n                        nextLinkClassName={\"next-button\"}\n                        disabledClassName={\"pagination-disabled\"}\n                        activeClassName={\"pagination-active\"}\n                    />\n                </div>\n            </MDBContainer>\n\n    } else if (walks.map((v: Walk) => { v.walk.toLowerCase().includes(searchValue.toLowerCase()) || v.city.toLowerCase().includes(searchValue.toLowerCase()) })) {\n        filteredResults =\n            <MDBContainer>\n                <div className=\"page\">\n                    <div className=\"page-heading-container\">\n                        <h1 className=\"page-heading\" data-testid=\"walks-page-heading\">Walks</h1>\n                        <MDBBtn outline color=\"elegant\" className=\"city-card-btn\" onClick={() => setSearchValue(\"\")}>Show all walks</MDBBtn>\n                        <p data-testid=\"walks-search-icon\" className=\"walks-search-icon\"><FaSearchLocation className=\"search-location-icon\" />{`  ${searchValue}`}</p>\n                    </div>\n                    <div className=\"card-container\">\n                        {walks.map((v: Walk) => {\n                            if (v.walk.toLowerCase().includes(searchValue.toLowerCase()) || v.city.toLowerCase().includes(searchValue.toLowerCase())) {\n                                return (\n                                    <div key={v._id}>\n                                        <Link to={'walks/' + urlify(v.walk)}>\n                                            <MDBCard className=\"walk-card\">\n                                                <MDBCardImage className=\"cutter img-fluid\" src={v.coverImg} alt={v.walk} waves />\n                                                <MDBCardBody>\n                                                    <MDBCardTitle>{v.city}</MDBCardTitle>\n                                                    <MDBCardTitle className=\"display-font\">{v.walk}</MDBCardTitle>\n                                                    <MDBCardText>{v.description}</MDBCardText>\n                                                    <MDBBtn outline color=\"elegant\" className=\"city-card-btn\">Explore <GiWalkingBoot /></MDBBtn>\n                                                </MDBCardBody>\n                                            </MDBCard>\n                                        </Link>\n                                    </div>\n                                )\n                            }\n                        }\n                        )}\n                    </div>\n                </div>\n            </MDBContainer>\n\n    }\n\n    return (\n        <div>\n            {filteredResults}\n        </div>\n    )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n    walks: state.walksState.walks,\n    searchValue: state.searchState.searchValue,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        dispatch,\n        ...bindActionCreators({ setSearchValue }, dispatch),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Walks);","export default __webpack_public_path__ + \"static/media/samuel-johnsons-house-illustration.01ef75aa.jpeg\";","export default __webpack_public_path__ + \"static/media/whitechapel-gallery-illustration.5e454e1d.jpeg\";","export default __webpack_public_path__ + \"static/media/john-soanes-museum-illustration.d06583ef.jpeg\";","import React, { useEffect } from \"react\"\nimport { MDBContainer } from \"mdbreact\"\nimport SectionA from \"../../SectionA/SectionA\"\nimport SectionB from \"../../SectionB/SectionB\"\nimport aboutImage1 from \"../../../assets/samuel-johnsons-house-illustration.jpeg\"\nimport aboutImage2 from \"../../../assets/whitechapel-gallery-illustration.jpeg\"\nimport aboutImage3 from \"../../../assets/john-soanes-museum-illustration.jpeg\"\nimport './About.scss'\n\nconst About: React.FC = () => {\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    const content1: string = \"We publish illustrated guided walks.\"\n\n    const content2: string = \"Each walk provides a guided tour of a district within a city, pointing out local attractions, accompanied by a map of the route.\"\n\n    const content3: string = \"The walks utilise public transport for their start and end points, so are accessible to all.\"\n\n\n    return (\n        <MDBContainer>\n            <div>\n                <div className=\"page-heading-container page\">\n                    <h1 className=\"page-heading\">About</h1>\n                    <div className=\"about-page-container\">\n                        <SectionA content={content1} img={aboutImage1} alt={\"samuel johnson's house\"} zoom={false} waves={false} />\n                        <SectionB content={content2} img={aboutImage2} alt={\"whitechapel gallery\"} zoom={false} waves={false} />\n                        <SectionA content={content3} img={aboutImage3} alt={\"john soane's museum\"} zoom={false} waves={false} />\n                    </div>\n                </div>\n            </div>\n        </MDBContainer>\n    )\n}\n\nexport default About","import React, { ReactNode, useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport ReactPaginate from \"react-paginate\"\nimport { MDBBtn, MDBIcon, MDBCard, MDBCardBody, MDBCardImage, MDBCardText, MDBCardTitle, MDBContainer } from \"mdbreact\"\nimport urlify from \"../../../functions/urlify\"\nimport { connect } from 'react-redux'\nimport Sight from \"../../../types/Sights/Sight\"\nimport RootState from \"../../../types/State/Root/State\"\nimport \"./Sights.scss\"\n\ninterface Props {\n    sights: Array<Sight>\n}\n\nconst Sights: React.FC<Props> = (props: Props) => {\n\n    const { sights } = props;\n\n    const removeMarkdown: (markup: string) => string = (markup) => {\n        return markup.replace(/\\**/g, \"\").replace(/#/g, \"\").replace(/<br\\/>/g, \"\")\n    }\n\n    const [pageNumber, setPageNumber] = useState<number>(0)\n\n    const sightsPerPage: number = 3;\n    const pagesVisited: number = pageNumber * sightsPerPage;\n\n    const pageCount: number = Math.ceil(sights.length / sightsPerPage);\n\n    const displayAllSights: () => Array<ReactNode> = () => {\n        return (\n            sights.slice(pagesVisited, pagesVisited + sightsPerPage).map((post: Sight) => {\n                return (\n                    <div key={post._id}>\n                        <Link to={'/sights/' + urlify(post.title)}>\n                            <MDBCard className=\"blog-card\">\n                                <MDBCardImage className=\"cutter img-fluid\" src={post.img} alt={post.title} waves />\n                                <MDBCardBody>\n                                    <MDBCardTitle className=\"display-font\">{post.title}</MDBCardTitle>\n                                    <MDBCardText>{removeMarkdown(post.content.slice(0, 199) + \"...\")}</MDBCardText>\n                                    <MDBBtn outline color=\"elegant\" className=\"city-card-btn\">Read <MDBIcon icon=\"book-open\" /></MDBBtn>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </Link>\n                    </div>\n                )\n            }).reverse()\n        )\n    }\n\n    const changePage = ({ selected }: { selected: number }) => {\n        setPageNumber(selected);\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n\n    return (\n        <MDBContainer>\n            <div className=\"page\">\n                <div className=\"page-heading-container\">\n                    <h1 className=\"page-heading\">Sights</h1>\n                    <h2 className=\"page-subheading\">find more sights and visitor attractions to explore</h2>\n                </div>\n                <div className=\"card-container\">\n                    {displayAllSights()}\n                </div>\n                <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    pageCount={pageCount}\n                    onPageChange={changePage}\n                    containerClassName={\"pagination-buttons\"}\n                    previousLinkClassName={\"previous-button\"}\n                    nextLinkClassName={\"next-button\"}\n                    disabledClassName={\"pagination-disabled\"}\n                    activeClassName={\"pagination-active\"}\n                />\n            </div>\n        </MDBContainer>\n    )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n    sights: state.sightsState.sights,\n});\n\nexport default connect(mapStateToProps, null)(Sights);\n","const toTitleCase = (str: string) => {\n  return str.replace(\n    /\\w\\S*/g,\n    (txt) => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n  );\n}\n\nexport default toTitleCase","import React, { ReactNode, useEffect, useState } from \"react\"\nimport toTitleCase from \"../../../functions/toTitleCase\"\nimport { MDBInput, MDBBtn, MDBIcon, MDBCard, MDBCardTitle, MDBCardText, MDBContainer } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport marked from \"marked\"\nimport SelectedComment from \"../../../types/PostRequests/SelectedComment\"\nimport LoadingBar from \"../../LoadingBar/LoadingBar\"\nimport RootState from \"../../../types/State/Root/State\"\nimport SightT from \"../../../types/Sights/Sight\"\nimport Comment from \"../../../types/Sights/Comment\"\nimport { connect } from 'react-redux'\nimport CommentToSubmit from \"../../../types/PostRequests/CommentToSubmit\"\nimport './Sight.scss'\n\ninterface Props {\n  history: any;\n  sights: Array<SightT>;\n  loggedIn: boolean;\n  userFirstName: string;\n  userId: string;\n}\n\nconst Sight: React.FC<Props> = (props: Props) => {\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const { sights, loggedIn, userFirstName, userId } = props\n\n  const blogTitle: string = toTitleCase(props.history.location.pathname.replace(\"/sights/\", \"\").replace(/-/g, \" \"))\n\n  const [comment, setComment] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    setComment(event.target.value)\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: CommentToSubmit = {\n      currentBlogTitle: blogTitle,\n      comment: comment,\n      userFirstName: userFirstName,\n      userId: userId\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/add-blog-comment\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"comment submitted\") {\n          console.log(\"comment submitted\")\n        } else {\n          console.log(\"comment not submitted\")\n        }\n      }).catch((err: AxiosResponse) => {\n        console.log(err)\n      });\n\n    alert(\"Comment Submitted\")\n    setComment(\"\")\n    window.location.reload()\n  }\n\n  const handleDeleteComment: (commentId: string) => void = (commentId) => {\n\n    let payload: SelectedComment = {\n      currentBlogTitle: blogTitle,\n      commentId: commentId,\n    };\n\n    axios\n      .delete(\"https://city-walks.herokuapp.com/delete-blog-comment\", { data: payload })\n      .then((res: AxiosResponse) => {\n\n        alert(\"comment deleted.\")\n        window.location.reload()\n\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });\n  }\n\n  let post: string | ReactNode = <LoadingBar />\n\n  if (sights.length) {\n\n    let selectedBlogPost: SightT | Array<SightT> | undefined = sights.filter((post: SightT) => post.title === blogTitle)\n    selectedBlogPost = selectedBlogPost[0]\n\n    const createMarkup: (markup: string) => ({ __html: string }) = (markup) => {\n      return { __html: marked(markup, { breaks: true }) }\n    }\n\n    if (selectedBlogPost === undefined) {\n      post = \"sight not found\"\n    } else {\n      post =\n        <div className=\"blog-post-container\">\n          <div>\n            <h1 className=\"page-heading\">{selectedBlogPost.title}</h1>\n            <h2 className=\"blog-subtitle page-subheading\">{selectedBlogPost.subtitle}</h2>\n          </div>\n          <img className=\"blog-post-img\" src={selectedBlogPost.img} />\n          <div className=\"blog-post-content\" dangerouslySetInnerHTML={createMarkup(selectedBlogPost.content)}></div>\n          <p>{selectedBlogPost.submittedOn.replace('T', ' ').substring(0, 19)}</p>\n          {selectedBlogPost?.comments?.map((comment: Comment) => {\n            return (\n              <MDBCard className=\"blog-post-comment-card\" key={comment._id}>\n                <MDBCardTitle>{comment.userFirstName} commented:</MDBCardTitle>\n                <MDBCardText>{comment.comment}</MDBCardText>\n                <MDBCardText>{comment.submittedOn.replace('T', ' ').substring(0, 19)}</MDBCardText>\n                {userId === comment.userId && <MDBBtn className=\"blog-post-comment-card-btn\" onClick={() => handleDeleteComment(comment._id)}>Delete Comment</MDBBtn>}\n              </MDBCard>\n            )\n          })}\n        </div>\n    }\n  }\n\n  if (sights) {\n    return (\n      <MDBContainer>\n        <div>\n          <div>{post}</div>\n          {loggedIn &&\n            <form onSubmit={handleSubmit} className=\"add-blog-comment-form\">\n              <MDBInput type=\"textarea\" rows=\"5\" name=\"comment\" id=\"comment\" value={comment} label=\"comment\" onChange={handleChange} required />\n              <MDBBtn outline color=\"elegant\" type=\"submit\">\n                Add Comment <MDBIcon icon=\"plus\" />\n              </MDBBtn>\n            </form>\n          }\n        </div>\n      </MDBContainer>\n    )\n  } else {\n    return (\n      <LoadingBar />\n    )\n  }\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  sights: state.sightsState.sights,\n  loggedIn: state.loginState.loggedIn,\n  userFirstName: state.loginState.userFirstName,\n  userId: state.loginState.userId\n});\n\nexport default connect(mapStateToProps, null)(Sight);\n\n","export default __webpack_public_path__ + \"static/media/leeds-corn-exchange-illustration.c110a213.jpeg\";","import React from 'react'\nimport { useState, useEffect } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon, MDBContainer } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport Message from '../../../types/PostRequests/Message'\nimport RootState from '../../../types/State/Root/State'\nimport contactImage from \"../../../assets/leeds-corn-exchange-illustration.jpeg\"\nimport \"./Contact.scss\"\n\ninterface Props {\n  sitekey: string;\n}\n\nconst Contact: React.FC<Props> = (props: Props) => {\n\n  const { sitekey } = props\n\n  const [contactName, setContactName] = useState<string>(\"\");\n  const [contactEmail, setContactEmail] = useState<string>(\"\");\n  const [contactMessage, setContactMessage] = useState<string>(\"\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"contact-name\":\n        setContactName(event.target.value);\n        break;\n      case \"contact-email\":\n        setContactEmail(event.target.value);\n        break;\n      case \"contact-message\":\n        setContactMessage(event.target.value);\n        break;\n    }\n  };\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault();\n\n    window.grecaptcha.ready(() => {\n      window.grecaptcha.execute(sitekey, { action: 'submit' }).then((token: string) => {\n        submitData(token);\n      });\n    });\n\n    const submitData = (token: string) => {\n\n      const payload: Message = {\n        name: contactName,\n        email: contactEmail,\n        message: contactMessage,\n        gRecaptchaResponse: token\n      };\n\n      axios\n        .post(\"https://city-walks.herokuapp.com/contact-form\", qs.stringify(payload))\n        .then((res: AxiosResponse) => {\n          if (res.data === \"request failed recaptcha\") {\n            alert(\"request failed recaptcha.\")\n          } else {\n            alert(\"Thanks for getting in touch. We will be in touch shortly.\");\n            setContactName(\"\");\n            setContactEmail(\"\");\n            setContactMessage(\"\");\n            window.scrollTo(0, 0);\n          }\n        }).catch((err: AxiosError) => {\n          console.log(err)\n        });\n    };\n  }\n\n  return (\n    <MDBContainer>\n      <div>\n        <div className=\"page-heading-container page\">\n          <h1 className=\"page-heading\">Contact</h1>\n          <div className=\"contact-grid\">\n            <div className=\"contact-main-img\">\n              <img src={contactImage} alt={\"leeds corn exchange\"} />\n            </div>\n            <form onSubmit={handleSubmit} className=\"contact-form display-form\">\n              <MDBInput\n                key=\"input-5\"\n                type=\"text\"\n                name=\"contact-name\"\n                id=\"contact-name\"\n                value={contactName}\n                label=\"name\"\n                onChange={handleChange}\n                required\n              />\n              <MDBInput\n                key=\"input-6\"\n                type=\"email\"\n                name=\"contact-email\"\n                id=\"contact-email\"\n                value={contactEmail}\n                label=\"email\"\n                onChange={handleChange}\n                required\n              />\n              <MDBInput\n                key=\"input-7\"\n                type=\"textarea\"\n                rows=\"3\"\n                name=\"contact-message\"\n                id=\"contact-message\"\n                value={contactMessage}\n                label=\"message\"\n                onChange={handleChange}\n                required\n              />\n              <MDBBtn outline color=\"elegant\" type=\"submit\" id=\"contact-submit-btn\">\n                Send Message <MDBIcon far icon=\"paper-plane\" />\n              </MDBBtn>\n            </form>\n          </div>\n        </div>\n      </div>\n    </MDBContainer>\n  );\n};\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  sitekey: state.recaptchaState.sitekey,\n});\n\nexport default connect(mapStateToProps)(Contact);\n","import React from 'react'\nimport { MDBCard, MDBCardTitle, MDBCardText } from \"mdbreact\"\nimport { useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport urlify from \"../../../../../../functions/urlify\"\nimport './BoardBox.scss'\n\ninterface Props {\n    boardId: string;\n    name: string;\n    description: string;\n    index: number;\n    key: number;\n}\n\nconst BoardBox: React.FC<Props> = (props: Props) => {\n\n    const { name, description } = props\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    return (\n        <MDBCard className=\"card-body board-box\">\n            <MDBCardTitle className=\"board-box-title\">{name}</MDBCardTitle>\n            <MDBCardText className=\"board-box-desription\">\n                {description}\n            </MDBCardText>\n            <div className=\"flex-row\">\n                <Link to={'forum/' + urlify(name)} className=\"board-link\">Read More...</Link>\n            </div>\n        </MDBCard>\n    )\n}\n\nexport default BoardBox\n","import React, { useState, useEffect } from \"react\"\nimport {\n  MDBIcon,\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBHamburgerToggler,\n  MDBCollapse,\n  MDBContainer\n} from \"mdbreact\";\nimport { Link, useHistory } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport { Action, bindActionCreators, Dispatch } from \"redux\";\nimport RootState from \"../../../types/State/Root/State\"\nimport { setLoggedIn, setUserId, setUserFirstName, setUserLastName } from \"../../../actions/actions\";\nimport \"./UserPortalNav.scss\"\n\ninterface Props {\n  loggedIn: boolean;\n  setLoggedIn: (boolValue: boolean) => Action;\n  setUserId: (userId: string) => Action;\n  setUserFirstName: (userFirstName: string) => Action;\n  setUserLastName: (userLastName: string) => Action;\n}\n\nconst UserPortalNav: React.FC<Props> = (props: Props) => {\n\n  const { loggedIn, setLoggedIn, setUserId, setUserFirstName, setUserLastName } = props\n\n  const [toggleLoginPanel, setToggleLoginPanel] = useState<boolean>(false);\n\n  const handleToggleLoginPanel: () => void = () => {\n    setToggleLoginPanel(!toggleLoginPanel);\n  };\n\n  const pushSlug: Function = useHistory().push\n\n  const logOut: () => void = () => {\n    localStorage.clear()\n    localStorage.setItem('popupVisible', 'false')\n    setLoggedIn(false)\n    setUserId('')\n    setUserFirstName('')\n    setUserLastName('')\n    alert(\"Logged out successfully.\")\n    pushSlug(\"/forum\");\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className=\"user-portal\" key=\"login-page\">\n      {loggedIn ? (\n        <div>\n          <MDBNavbar className=\"login-panel\" dark expand=\"md\">\n            <MDBContainer>\n              <MDBNavbarBrand>\n                <strong className=\"white-text user-portal-logo\">User Portal</strong>\n              </MDBNavbarBrand>\n              <MDBHamburgerToggler\n                color=\"#fff\"\n                className=\"hamburger1\"\n                id=\"hamburger2\"\n                onClick={handleToggleLoginPanel}\n              />\n              <MDBCollapse\n                id=\"navbarCollapse3\"\n                isOpen={toggleLoginPanel}\n                navbar\n              >\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    <a className=\"user-portal-link\" onClick={logOut}>\n                      Logout <MDBIcon icon=\"key\" />\n                    </a>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBContainer>\n          </MDBNavbar>\n        </div>\n      ) : (\n        <div>\n\n          <MDBNavbar className=\"login-panel\" dark expand=\"md\">\n            <MDBContainer>\n              <MDBNavbarBrand>\n                <strong className=\"white-text user-portal-logo\">User Portal</strong>\n              </MDBNavbarBrand>\n              <MDBHamburgerToggler\n                color=\"#fff\"\n                className=\"hamburger1\"\n                id=\"hamburger2\"\n                onClick={handleToggleLoginPanel}\n              />\n              <MDBCollapse\n                id=\"navbarCollapse3\"\n                isOpen={toggleLoginPanel}\n                navbar\n              >\n                <MDBNavbarNav justify=\"true\">\n                  <MDBNavItem>\n                    <Link to=\"/forum/login\" className=\"user-portal-link\">Login <MDBIcon icon=\"key\" /></Link>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <Link to=\"/forum/register\" className=\"user-portal-link\">Register <MDBIcon far icon=\"edit\" /></Link>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <Link to=\"/forum/verify\" className=\"user-portal-link\">Resend Email <MDBIcon far icon=\"envelope\" /></Link>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <Link to=\"/forum/reset-password\" className=\"user-portal-link\">Reset Password <MDBIcon icon=\"unlock-alt\" /></Link>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <Link to=\"/forum/forgot-password\" className=\"user-portal-link\">Forgot Password <MDBIcon far icon=\"question-circle\" /></Link>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBContainer>\n          </MDBNavbar>\n\n        </div>\n\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  loggedIn: state.loginState.loggedIn,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setLoggedIn, setUserId, setUserFirstName, setUserLastName }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPortalNav);\n","import React from 'react'\nimport BoardBox from \"./Components/BoardBox/BoardBox\"\nimport UserPortalNav from \"../UserPortalNav\"\nimport LoadingBar from '../../../LoadingBar/LoadingBar'\nimport { MDBContainer } from \"mdbreact\"\nimport { connect } from 'react-redux'\nimport Board from '../../../../types/Boards/Board'\nimport RootState from '../../../../types/State/Root/State'\nimport './Boards.scss'\n\ninterface Props {\n    boards: Array<Board>;\n    userFirstName: string;\n}\n\nconst Boards: React.FC<Props> = (props: Props) => {\n\n    const { boards, userFirstName } = props;\n\n    return (\n        <div>\n            <div className=\"page-heading-container\">\n                <UserPortalNav loggedIn={false} />\n                <MDBContainer>\n                    <h1 className=\"page-heading\">Forum</h1>\n                    <h2 className=\"login-heading\">Welcome back {userFirstName}</h2>\n                    <p>Here you can join in the discussion and put forward your own recomendations. Discussions are subdivided by category:</p>\n                </MDBContainer>\n            </div>\n            <MDBContainer>\n                {boards.length ?\n                    <div className=\"boards-container\">\n                        {boards.map((board, index) => {\n                            return (\n                                <BoardBox boardId={board._id} name={board.name} description={board.description} index={index} key={index} />\n                            )\n                        })}\n                    </div>\n                    :\n                    <LoadingBar />\n                }\n            </MDBContainer>\n        </div>\n    )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n    boards: state.boardsState.boards,\n    userFirstName: state.loginState.userFirstName\n});\n\nexport default connect(mapStateToProps, null)(Boards);","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { MDBInput, MDBBtn, MDBIcon, MDBContainer } from \"mdbreact\"\nimport UserPortalNav from \"../UserPortalNav\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport RootState from '../../../../types/State/Root/State'\nimport Credentials from '../../../../types/PostRequests/Credentials'\nimport { Action, bindActionCreators, Dispatch } from 'redux'\nimport { setLoggedIn, setLoginEmail, setLoginPassword, setUserFirstName, setUserId, setUserLastName } from '../../../../actions/actions'\nimport './LoginForm.scss'\n\ninterface Props {\n  loginEmail: string;\n  loginPassword: string;\n  setLoginEmail: (loginEmail: string) => Action;\n  setLoginPassword: (loginPassword: string) => Action;\n  setLoggedIn: (boolValue: boolean) => Action;\n  setUserId: (userId: string) => Action;\n  setUserFirstName: (userFirstName: string) => Action;\n  setUserLastName: (userLastName: string) => Action;\n}\n\nconst LoginForm: React.FC<Props> = (props: Props) => {\n\n  const { loginEmail, loginPassword, setLoginEmail, setLoginPassword, setLoggedIn, setUserId, setUserFirstName, setUserLastName } = props\n\n  const pushSlug: Function = useHistory().push\n\n  const handleChangeLogin = (e: React.ChangeEvent<any>) => {\n    switch (e.target.name) {\n      case \"login-email\":\n        setLoginEmail(e.target.value)\n        break;\n      case \"login-password\":\n        setLoginPassword(e.target.value)\n        break;\n    }\n  }\n\n  const handleSubmitLogin = (e: React.FormEvent) => {\n    console.log(\"handle submit login triggered\")\n    e.preventDefault()\n\n    const payload: Credentials = {\n      email: loginEmail,\n      password: loginPassword\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/login-user\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"Your account exists but is not activated. Please click 'verify account' for email verification.\") {\n          alert(\"Your account exists but is not activated. Please click 'verify account' for email verification.\")\n        } else if (res.data === \"unsuccessful login attempt\") {\n          alert(\"Unsuccessful Login Attempt. Please Try Again.\")\n        } else {\n          alert(\"Login Complete\")\n          setLoggedIn(true)\n          setLoginEmail(\"\")\n          setLoginPassword(\"\")\n          setUserId(res.data._id)\n          setUserFirstName(res.data.fname)\n          setUserLastName(res.data.lname)\n          localStorage.setItem(\"loggedIn\", 'true')\n          localStorage.setItem(\"userId\", res.data._id)\n          localStorage.setItem(\"userFirstName\", res.data.fname)\n          pushSlug(\"/forum\");\n          window.scrollTo(0, 0)\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });\n  }\n\n  return (\n    <div key=\"user-login\" className=\"page\">\n      <UserPortalNav loggedIn={false} />\n      <MDBContainer>\n        <div className=\"login-header-container\">\n          <h2 className=\"login-form-header\">Login</h2>\n          <p>Login to Your Account.</p>\n        </div>\n        <form onSubmit={handleSubmitLogin} className=\"user-login-form display-form\">\n          <MDBInput key=\"input-5\" type=\"email\" name=\"login-email\" id=\"login-email\" value={loginEmail} label=\"email\" onChange={handleChangeLogin} required />\n          <MDBInput key=\"input-6\" type=\"password\" name=\"login-password\" id=\"login-password\" value={loginPassword} label=\"password\" onChange={handleChangeLogin} minLength=\"8\" required />\n          <MDBBtn outline color=\"elegant\" type=\"submit\">\n            Login <MDBIcon icon=\"sign-in-alt\" />\n          </MDBBtn>\n        </form>\n      </MDBContainer>\n    </div>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  loginEmail: state.loginState.loginEmail,\n  loginPassword: state.loginState.loginPassword,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setLoginEmail, setLoginPassword, setLoggedIn, setUserId, setUserFirstName, setUserLastName }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import React from 'react'\nimport { MDBInput, MDBBtn, MDBIcon, MDBContainer } from \"mdbreact\"\nimport UserPortalNav from \"../UserPortalNav\"\nimport { Link } from \"react-router-dom\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport { Action, bindActionCreators, Dispatch } from 'redux'\nimport { setFirstName, setLastName, setRegistrationEmail, setRegistrationPassword, setUserFirstName, setUserLastName, setActivationMessageEmphasis } from '../../../../actions/actions'\nimport RootState from '../../../../types/State/Root/State'\nimport RegistrationCredentials from '../../../../types/PostRequests/RegistrationCredentials'\nimport './RegistrationForm.scss'\n\ninterface Props {\n  firstName: string;\n  lastName: string;\n  registrationEmail: string;\n  registrationPassword: string;\n  activationMessageEmphasis: string;\n  setFirstName: (firstName: string) => Action;\n  setLastName: (lastName: string) => Action;\n  setRegistrationEmail: (registrationEmail: string) => Action;\n  setRegistrationPassword: (registrationPassword: string) => Action;\n  setUserFirstName: (userFirstName: string) => Action;\n  setUserLastName: (userLastName: string) => Action;\n  setActivationMessageEmphasis: (activationMessageEmphasis: string) => Action;\n}\n\nconst RegistrationForm: React.FC<Props> = (props: Props) => {\n\n  const { firstName, lastName, registrationEmail, registrationPassword, activationMessageEmphasis, setFirstName, setLastName, setRegistrationEmail, setRegistrationPassword, setUserFirstName, setUserLastName, setActivationMessageEmphasis } = props\n\n  const handleChangeRegistration: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"registration-fname\":\n        setFirstName(event.target.value)\n        break;\n      case \"registration-lname\":\n        setLastName(event.target.value)\n        break;\n      case \"registration-email\":\n        setRegistrationEmail(event.target.value)\n        break;\n      case \"registration-password\":\n        setRegistrationPassword(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmitRegistration: (event: React.FormEvent) => void = (event) => {\n\n    event.preventDefault()\n\n    const payload: RegistrationCredentials = {\n      fname: firstName,\n      lname: lastName,\n      email: registrationEmail,\n      password: registrationPassword,\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/register-user\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"An account with this email already exists.\") {\n          alert(\"An account with this email already exists.\")\n        } else if (res.data === \"We have sent you an email. Please verify your account by clicking the link in the mail.\") {\n          alert(\"We have sent you an email. Please verify your account by clicking the link in the email. (This code expires after 10 minutes)\")\n          setFirstName(\"\")\n          setLastName(\"\")\n          setRegistrationEmail(\"\")\n          setRegistrationPassword(\"\")\n          setUserFirstName(res.data.fname)\n          setUserLastName(res.data.lname)\n          setActivationMessageEmphasis(\"emphasis\")\n          window.scrollTo(0, 0)\n        } else {\n          alert(\"Registration Complete\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });\n  }\n\n\n  return (\n    <div key=\"user-registration\">\n      <UserPortalNav loggedIn={false} />\n      <MDBContainer className=\"page\">\n        <div className=\"registration-header-container\">\n          <h2 className=\"registration-header\">Register</h2>\n          <p>Create a new account.</p>\n          <div className={activationMessageEmphasis}>\n            <p>You will receive an email containing an activation link to verify your email and activate your account.</p>\n            <p>The activation link expires after 10 minutes.</p>\n            <p>If the activation link expires, you can <Link id=\"request-activation-link\" to=\"/forum/verify\">request a fresh activation link.</Link></p>\n          </div>\n        </div>\n        <form onSubmit={handleSubmitRegistration} className=\"user-registration-form display-form\" key=\"user-registration-form\">\n          <MDBInput key=\"input-1\" type=\"text\" name=\"registration-fname\" id=\"registration-fname\" value={firstName} label=\"first Name\" onChange={handleChangeRegistration} pattern=\"^[A-Za-z\\-]+$\" required />\n          <MDBInput key=\"input-2\" type=\"text\" name=\"registration-lname\" id=\"registration-lname\" value={lastName} label=\"last Name\" onChange={handleChangeRegistration} pattern=\"^[A-Za-z\\-]+$\" required />\n          <MDBInput key=\"input-3\" type=\"email\" name=\"registration-email\" id=\"registration-email\" value={registrationEmail} label=\"email\" onChange={handleChangeRegistration} required />\n          <MDBInput key=\"input-4\" type=\"password\" name=\"registration-password\" id=\"registration-password\" value={registrationPassword} label=\"password (minimum 8 characters)\" onChange={handleChangeRegistration} minLength=\"8\" required />\n          <MDBBtn outline color=\"elegant\" type=\"submit\">\n            Register <MDBIcon icon=\"sign-in-alt\" />\n          </MDBBtn>\n        </form>\n      </MDBContainer>\n    </div>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  firstName: state.loginState.firstName,\n  lastName: state.loginState.lastName,\n  registrationEmail: state.loginState.registrationEmail,\n  activationMessageEmphasis: state.loginState.activationMessageEmphasis\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setFirstName, setLastName, setRegistrationEmail, setRegistrationPassword, setUserFirstName, setUserLastName, setActivationMessageEmphasis }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);","import React from 'react'\nimport { MDBInput, MDBBtn, MDBIcon, MDBContainer } from \"mdbreact\"\nimport UserPortalNav from \"../UserPortalNav\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport { Action, bindActionCreators, Dispatch } from 'redux'\nimport { setVerificationEmail } from '../../../../actions/actions'\nimport EmailToVerify from '../../../../types/PostRequests/EmailToVerify'\nimport RootState from '../../../../types/State/Root/State'\nimport './VerificationForm.scss'\n\ninterface Props {\n  verificationEmail: string;\n  setVerificationEmail: (verificationEmail: string) => Action;\n}\n\nconst VerificationForm: React.FC<Props> = (props: Props) => {\n\n  const { verificationEmail, setVerificationEmail } = props\n\n  const handleChangeVerification: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"verification-email\":\n        setVerificationEmail(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmitVerification: (event: React.FormEvent) => void = (event) => {\n    console.log(\"handle submit verification\")\n    event.preventDefault()\n\n    const payload: EmailToVerify = {\n      email: verificationEmail,\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/reverify-user\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n\n        alert(\"Verification email sent. Check your inbox.\")\n        setVerificationEmail(\"\")\n        window.scrollTo(0, 0)\n\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      })\n  }\n\n\n  return (\n    <div key=\"user-verification\">\n      <UserPortalNav loggedIn={false} />\n      <MDBContainer className=\"page\">\n        <div className=\"verification-header-container\">\n          <h2 className=\"verification-header\">Activate Your Account</h2>\n          <p>Submit your email address to resend the verification email to activate your account.</p>\n          <p>You must activate your account within 10 minutes of receiving the email.</p>\n          <p>If the email link expires then submit your email address again to receive a fresh activation link.</p>\n        </div>\n        <form onSubmit={handleSubmitVerification} className=\"verification-form display-form\">\n          <MDBInput key=\"input-5\" type=\"email\" name=\"verification-email\" id=\"verification-email\" value={verificationEmail} label=\"email\" onChange={handleChangeVerification} required />\n          <MDBBtn outline color=\"elegant\" type=\"submit\">\n            Resend Email <MDBIcon far icon=\"paper-plane\" />\n          </MDBBtn>\n        </form>\n      </MDBContainer>\n    </div>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  verificationEmail: state.loginState.verificationEmail,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setVerificationEmail }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerificationForm);","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { MDBInput, MDBBtn, MDBIcon, MDBContainer } from \"mdbreact\"\nimport UserPortalNav from \"../UserPortalNav\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport { Action, bindActionCreators, Dispatch } from 'redux'\nimport { setResetPasswordEmail, setResetPasswordOldPassword, setResetPasswordNewPassword, setResetPasswordConfirmNewPassword } from '../../../../actions/actions'\n\nimport RootState from '../../../../types/State/Root/State'\nimport './ResetPasswordForm.scss'\n\ninterface Props {\n  resetPasswordEmail: string;\n  resetPasswordOldPassword: string;\n  resetPasswordNewPassword: string;\n  resetPasswordConfirmNewPassword: string;\n  setResetPasswordEmail: (resetPasswordEmail: string) => Action;\n  setResetPasswordOldPassword: (resetPasswordOldPassword: string) => Action;\n  setResetPasswordNewPassword: (resetPasswordNewPassword: string) => Action;\n  setResetPasswordConfirmNewPassword: (resetPasswordConfirmNewPassword: string) => Action;\n}\n\nconst ResetPasswordForm: React.FC<Props> = (props: Props) => {\n\n  const pushSlug: Function = useHistory().push\n\n  const { resetPasswordEmail, resetPasswordOldPassword, resetPasswordNewPassword, resetPasswordConfirmNewPassword, setResetPasswordEmail, setResetPasswordOldPassword, setResetPasswordNewPassword, setResetPasswordConfirmNewPassword } = props\n\n  const handleChangeResetPassword = (event: React.ChangeEvent<any>) => {\n    switch (event.target.name) {\n      case \"reset-email\":\n        setResetPasswordEmail(event.target.value)\n        break;\n      case \"old-password\":\n        setResetPasswordOldPassword(event.target.value)\n        break;\n      case \"new-password\":\n        setResetPasswordNewPassword(event.target.value)\n        break;\n      case \"confirm-new-password\":\n        setResetPasswordConfirmNewPassword(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmitResetPassword = (event: React.FormEvent<any>) => {\n    console.log(\"handle submit reset password\")\n    event.preventDefault()\n\n    const payload = {\n      email: resetPasswordEmail,\n      oldPassword: resetPasswordOldPassword,\n      newPassword: resetPasswordNewPassword,\n    };\n\n    if (resetPasswordNewPassword === resetPasswordConfirmNewPassword) {\n      axios\n        .post(\"https://city-walks.herokuapp.com/reset-password-with-old-password\", qs.stringify(payload))\n        .then((res: AxiosResponse) => {\n          if (res.data === \"user not found\") {\n            alert(\"We could not find your account. Please try again.\")\n          } else if (res.data === \"old password does not match password in the database\") {\n            alert(\"The password you entered does not match the account. Please try again or use the Forgot Password option.\")\n          } else if (res.data === \"password successfully updated\") {\n            alert(\"Password reset. You can now login.\")\n            setResetPasswordEmail(\"\")\n            setResetPasswordOldPassword(\"\")\n            setResetPasswordNewPassword(\"\")\n            setResetPasswordConfirmNewPassword(\"\")\n            pushSlug(\"/forum/login\");\n            window.scrollTo(0, 0)\n          }\n        }).catch((err: AxiosError) => {\n          console.log(err)\n        });\n    } else {\n      alert(\"Passwords don't match. Please try again.\")\n    }\n\n  }\n\n  return (\n    <div>\n      <UserPortalNav loggedIn={false} />\n      <MDBContainer className=\"page\">\n        <div className=\"reset-password-header-container\">\n          <h2 className=\"reset-password-header\">Reset Password</h2>\n          <p>Reset your account password by submitting your old password and the password you want to replace it with.</p>\n        </div>\n        <form onSubmit={handleSubmitResetPassword} className=\"reset-password-form display-form\">\n          <MDBInput type=\"email\" name=\"reset-email\" id=\"reset-email\" value={resetPasswordEmail} label=\"email\" onChange={handleChangeResetPassword} required />\n          <MDBInput type=\"password\" name=\"old-password\" id=\"old-password\" value={resetPasswordOldPassword} label=\"old password\" onChange={handleChangeResetPassword} minLength=\"8\" required />\n          <MDBInput type=\"password\" name=\"new-password\" id=\"new-password\" value={resetPasswordNewPassword} label=\"new password\" onChange={handleChangeResetPassword} minLength=\"8\" required />\n          <MDBInput type=\"password\" name=\"confirm-new-password\" id=\"confirm-new-password\" value={resetPasswordConfirmNewPassword} label=\"confirm new password\" onChange={handleChangeResetPassword} minLength=\"8\" required />\n          <MDBBtn outline color=\"elegant\" type=\"submit\">\n            Login <MDBIcon icon=\"sign-in-alt\" />\n          </MDBBtn>\n        </form>\n      </MDBContainer>\n    </div>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  resetPasswordEmail: state.loginState.resetPasswordEmail,\n  resetPasswordOldPassword: state.loginState.resetPasswordOldPassword,\n  resetPasswordNewPassword: state.loginState.resetPasswordNewPassword,\n  resetPasswordConfirmNewPassword: state.loginState.resetPasswordConfirmNewPassword\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setResetPasswordEmail, setResetPasswordOldPassword, setResetPasswordNewPassword, setResetPasswordConfirmNewPassword }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordForm);\n\n","import React from 'react'\nimport { MDBInput, MDBBtn, MDBIcon, MDBContainer } from \"mdbreact\"\nimport UserPortalNav from \"../UserPortalNav\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport RootState from '../../../../types/State/Root/State'\nimport Account from '../../../../types/PostRequests/Account'\nimport { Action, bindActionCreators, Dispatch } from 'redux'\nimport { setForgotPasswordEmail } from '../../../../actions/actions'\nimport './ForgotPasswordForm.scss'\n\ninterface Props {\n  forgotPasswordEmail: string;\n  setForgotPasswordEmail: (forgotPasswordEmail: string) => Action;\n}\n\nconst ForgotPasswordForm: React.FC<Props> = (props: Props) => {\n\n  const { forgotPasswordEmail, setForgotPasswordEmail } = props\n\n  const handleChangeForgotPassword: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"forgot-password-email\":\n        setForgotPasswordEmail(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmitForgotPassword: (event: React.FormEvent) => void = (event) => {\n    console.log(\"handle submit forgot password\")\n    event.preventDefault()\n\n    const payload: Account = {\n      email: forgotPasswordEmail,\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/forgot-password\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n\n        alert(\"We have sent you an email. Please click the click in your email to reset your password\")\n        setForgotPasswordEmail(\"\")\n        window.scrollTo(0, 0)\n\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <div key=\"user-forgot-password\">\n      <UserPortalNav loggedIn={false} />\n      <MDBContainer className=\"page\">\n        <div className=\"forgot-password-header-container\">\n          <h2 className=\"forgot-password-header\">Forgot Your Password?</h2>\n          <p>Please submit your email.</p>\n          <p>We will send you an email to confirm it's you. Click the link in the email to reset your password.</p>\n        </div>\n        <form onSubmit={handleSubmitForgotPassword} className=\"forgot-password-form display-form\">\n          <MDBInput key=\"input-5\" type=\"email\" name=\"forgot-password-email\" id=\"forgot-password-email\" value={forgotPasswordEmail} label=\"email\" onChange={handleChangeForgotPassword} required />\n          <MDBBtn outline color=\"elegant\" type=\"submit\">\n            Reset Password <MDBIcon far icon=\"paper-plane\" />\n          </MDBBtn>\n        </form>\n      </MDBContainer>\n    </div>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  forgotPasswordEmail: state.loginState.forgotPasswordEmail,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setForgotPasswordEmail }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordForm);","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport qs from \"qs\";\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport Walk from '../../../../types/PostRequests/Walk'\nimport './AddWalkForm.scss'\n\nconst AddWalkForm: React.FC = () => {\n\n  const [walk, setWalk] = useState<string>(\"\")\n  const [city, setCity] = useState<string>(\"\")\n  const [description, setDescription] = useState<string>(\"\")\n  const [startingPoint, setStartingPoint] = useState<string>(\"\")\n  const [content1, setContent1] = useState<string>(\"\")\n  const [content2, setContent2] = useState<string>(\"\")\n  const [content3, setContent3] = useState<string>(\"\")\n  const [coverImg, setCoverImg] = useState<string>(\"\")\n  const [mapImg, setMapImg] = useState<string>(\"\")\n  const [img1, setImg1] = useState<string>(\"\")\n  const [img2, setImg2] = useState<string>(\"\")\n  const [img3, setImg3] = useState<string>(\"\")\n  const [author, setAuthor] = useState<string>(\"\")\n  const [aboutTheAuthor, setAboutTheAuthor] = useState<string>(\"\")\n  const [websiteLink, setWebsiteLink] = useState<string>(\"\")\n  const [instagramLink, setInstagramLink] = useState<string>(\"\")\n  const [facebookLink, setFacebookLink] = useState<string>(\"\")\n  const [twitterLink, setTwitterLink] = useState<string>(\"\")\n  const [lat, setLat] = useState<string>(\"\")\n  const [lng, setLng] = useState<string>(\"\")\n  const [length, setLength] = useState<string>(\"\")\n  const [iframeLink, setIframeLink] = useState<string>(\"\")\n  const [iframeTitle, setIframeTitle] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"walk\":\n        setWalk(event.target.value)\n        break;\n      case \"city\":\n        setCity(event.target.value)\n        break;\n      case \"description\":\n        setDescription(event.target.value)\n        break;\n      case \"starting-point\":\n        setStartingPoint(event.target.value)\n        break;\n      case \"content1\":\n        setContent1(event.target.value)\n        break;\n      case \"content2\":\n        setContent2(event.target.value)\n        break;\n      case \"content3\":\n        setContent3(event.target.value)\n        break;\n      case \"cover-img\":\n        setCoverImg(event.target.value)\n        break;\n      case \"map-img\":\n        setMapImg(event.target.value)\n        break;\n      case \"img1\":\n        setImg1(event.target.value)\n        break;\n      case \"img2\":\n        setImg2(event.target.value)\n        break;\n      case \"img3\":\n        setImg3(event.target.value)\n        break;\n      case \"author\":\n        setAuthor(event.target.value)\n        break;\n      case \"about-the-author\":\n        setAboutTheAuthor(event.target.value)\n        break;\n      case \"website-link\":\n        setWebsiteLink(event.target.value)\n        break;\n      case \"instagram-link\":\n        setInstagramLink(event.target.value)\n        break;\n      case \"facebook-link\":\n        setFacebookLink(event.target.value)\n        break;\n      case \"twitter-link\":\n        setTwitterLink(event.target.value)\n        break;\n      case \"lat\":\n        setLat(event.target.value)\n        break;\n      case \"lng\":\n        setLng(event.target.value)\n        break;\n      case \"length\":\n        setLength(event.target.value)\n        break;\n      case \"iframe-link\":\n        setIframeLink(event.target.value)\n        break;\n      case \"iframe-title\":\n        setIframeTitle(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: Walk = {\n      walk: toTitleCase(walk),\n      city: toTitleCase(city),\n      description,\n      startingPoint: toTitleCase(startingPoint),\n      content1,\n      content2,\n      content3,\n      coverImg,\n      mapImg,\n      img1,\n      img2,\n      img3,\n      author: toTitleCase(author),\n      aboutTheAuthor,\n      websiteLink,\n      instagramLink,\n      facebookLink,\n      twitterLink,\n      lat,\n      lng,\n      length,\n      iframeLink,\n      iframeTitle\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/add-walk\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"walk saved\") {\n          console.log(\"walk saved\")\n        } else {\n          console.log(\"walk not saved\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"Walk Submitted\")\n    setWalk(\"\")\n    setCity(\"\")\n    setDescription(\"\")\n    setStartingPoint(\"\")\n    setContent1(\"\")\n    setContent2(\"\")\n    setContent3(\"\")\n    setCoverImg(\"\")\n    setImg1(\"\")\n    setImg2(\"\")\n    setImg3(\"\")\n    setAuthor(\"\")\n    setAboutTheAuthor(\"\")\n    setWebsiteLink(\"\")\n    setInstagramLink(\"\")\n    setFacebookLink(\"\")\n    setTwitterLink(\"\")\n    setLat(\"\")\n    setLng(\"\")\n    setLength(\"\")\n    setIframeLink(\"\")\n    setIframeTitle(\"\")\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div>\n      <h2>Add Walk</h2>\n      <form onSubmit={handleSubmit} className=\"add-walk-form\">\n        <MDBInput type=\"text\" name=\"walk\" id=\"walk\" value={walk} label=\"walk, title-case only e.g. 'Baker Street To Bond Street'\" onChange={handleChange} maxLength=\"70\" required />\n        <MDBInput type=\"text\" name=\"city\" id=\"city\" value={city} label=\"city\" onChange={handleChange} maxLength=\"70\" required />\n        <MDBInput type=\"text\" name=\"description\" id=\"description\" value={description} label=\"description\" onChange={handleChange} maxLength=\"136\" required />\n        <MDBInput type=\"text\" name=\"starting-point\" id=\"starting-point\" value={startingPoint} label=\"starting point\" onChange={handleChange} maxLength=\"100\" required />\n        <MDBInput type=\"textarea\" rows=\"4\" name=\"content1\" id=\"content1\" value={content1} label=\"paragraph 1 (569 character limit - excl formatting). Format using Markdown.\" onChange={handleChange} maxLength=\"700\" required />\n        <MDBInput type=\"textarea\" rows=\"4\" name=\"content2\" id=\"content2\" value={content2} label=\"paragraph 2 (569 character limit - excl formatting). Format using Markdown.\" onChange={handleChange} maxLength=\"700\" required />\n        <MDBInput type=\"textarea\" rows=\"4\" name=\"content3\" id=\"content3\" value={content3} label=\"paragraph 3 (569 character limit - excl formatting). Format using Markdown.\" onChange={handleChange} maxLength=\"700\" required />\n        <MDBInput type=\"text\" name=\"cover-img\" id=\"cover-img\" value={coverImg} label=\"cover image link\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"map-img\" id=\"map-img\" value={mapImg} label=\"map image link\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"img1\" id=\"img1\" value={img1} label=\"image 1 link\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"img2\" id=\"img2\" value={img2} label=\"image 2 link\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"img3\" id=\"img3\" value={img3} label=\"image 3 link\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"author\" id=\"author\" value={author} label=\"author\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"about-the-author\" id=\"about-the-author\" value={aboutTheAuthor} label=\"about the author\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"website-link\" id=\"website-link\" value={websiteLink} label=\"website link (optional)\" onChange={handleChange} />\n        <MDBInput type=\"text\" name=\"instagram-link\" id=\"instagram-link\" value={instagramLink} label=\"instagram link (optional)\" onChange={handleChange} />\n        <MDBInput type=\"text\" name=\"facebook-link\" id=\"facebook-link\" value={facebookLink} label=\"facebook link (optional)\" onChange={handleChange} />\n        <MDBInput type=\"text\" name=\"twitter-link\" id=\"twitter-link\" value={twitterLink} label=\"twitter link (optional)\" onChange={handleChange} />\n        <MDBInput type=\"text\" name=\"lat\" id=\"lat\" value={lat} label=\"latitude\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"lng\" id=\"lng\" value={lng} label=\"longitude\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"length\" id=\"length\" value={length} label=\"walk length (e.g. '3.5 km / 2.1 miles')\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"iframe-link\" id=\"iframe-link\" value={iframeLink} label=\"iframe link (should include '/maps/d/embed?')\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"iframe-title\" id=\"iframe-title\" value={iframeTitle} label=\"iframe title (e.g. 'Canterbury Cathedral Google Map')\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Send Walk\n          <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default AddWalkForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport qs from \"qs\";\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport City from '../../../../types/PostRequests/City'\nimport './AddCityForm.scss'\n\nconst AddCityForm: React.FC = () => {\n\n  const [city, setCity] = useState<string>(\"\")\n  const [description, setDescription] = useState<string>(\"\")\n  const [img, setImg] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"city\":\n        setCity(event.target.value)\n        break;\n      case \"description\":\n        setDescription(event.target.value)\n        break;\n      case \"img\":\n        setImg(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: City = {\n      city: toTitleCase(city),\n      description: description,\n      img: img\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/add-city\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"city saved\") {\n          console.log(\"city saved\")\n        } else {\n          console.log(\"city not saved\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"City Submitted\")\n    setCity(\"\")\n    setDescription(\"\")\n    setImg(\"\")\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div>\n      <h2>Add City</h2>\n      <form onSubmit={handleSubmit} className=\"add-city-form\">\n        <MDBInput type=\"text\" name=\"city\" id=\"city\" value={city} label=\"city\" onChange={handleChange} maxLength=\"70\" required />\n        <MDBInput type=\"text\" name=\"description\" id=\"description\" value={description} label=\"description\" onChange={handleChange} maxLength=\"136\" required />\n        <MDBInput type=\"text\" name=\"img\" id=\"img\" value={img} label=\"image link\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Send City\n          <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default AddCityForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport qs from \"qs\";\nimport toTitleCase from \"../../../../functions/toTitleCase\"\nimport FeaturedWalks from \"../../../../types/PostRequests/FeaturedWalks\";\nimport './SetFeaturedWalkForm.scss'\n\nconst SetFeaturedWalkForm: React.FC = () => {\n  const [featuredWalk1, setFeaturedWalk1] = useState<string>(\"\")\n  const [featuredWalk2, setFeaturedWalk2] = useState<string>(\"\")\n  const [featuredWalk3, setFeaturedWalk3] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"featured-walk-1\":\n        setFeaturedWalk1(event.target.value)\n        break;\n      case \"featured-walk-2\":\n        setFeaturedWalk2(event.target.value)\n        break;\n      case \"featured-walk-3\":\n        setFeaturedWalk3(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: FeaturedWalks = {\n      featuredWalk1: toTitleCase(featuredWalk1),\n      featuredWalk2: toTitleCase(featuredWalk2),\n      featuredWalk3: toTitleCase(featuredWalk3),\n    };\n\n    axios\n      .patch(\"https://city-walks.herokuapp.com/set-featured-walk\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"featured walk set\") {\n          console.log(\"featured walk set\")\n        } else {\n          console.log(\"featured walk not set\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n    alert(\"Featured walks set\")\n    setFeaturedWalk1(\"\")\n    setFeaturedWalk2(\"\")\n    setFeaturedWalk3(\"\")\n    window.scrollTo(0, 0);\n\n  }\n  return (\n    <div>\n      <h2>Set Featured Walks</h2>\n      <p>Administrator note: a prerequisite of this working is that at least one record has the featuredWalk field set to true.</p>\n      <p>Only records where walk is fully in Title Case can be set as a featured walk. For example, 'Bond Street to Baker Street' will not pass.</p>\n      <p>The form will convert your input to Title Case.</p>\n      <form onSubmit={handleSubmit} className=\"set-featured-walk-form\">\n        <MDBInput type=\"text\" name=\"featured-walk-1\" id=\"featured-walk-1\" value={featuredWalk1} label=\"featured walk 1 (walk name, e.g 'Stoke Newington')\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"featured-walk-2\" id=\"featured-walk-2\" value={featuredWalk2} label=\"featured walk 2 (walk name, e.g 'Buckingham Palace')\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"featured-walk-3\" id=\"featured-walk-3\" value={featuredWalk3} label=\"featured walk 3 (walk name, e.g 'Old Street')\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Set Featured Walks\n          <MDBIcon far icon=\"star\" className=\"ml-2\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default SetFeaturedWalkForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport SelectedWalk from \"../../../../types/PostRequests/SelectedWalk\"\nimport './DeleteWalkForm.scss'\n\nconst DeleteWalkForm: React.FC = () => {\n\n  const [walk, setWalk] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"walk\":\n        setWalk(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: SelectedWalk = {\n      walk: toTitleCase(walk)\n    };\n\n    axios\n      .delete(\"https://city-walks.herokuapp.com/delete-walk\", { data: payload })\n      .then((res: AxiosResponse) => {\n        if (res.data === \"walk deleted\") {\n          console.log(\"walk deleted\")\n        } else {\n          console.log(\"walk not deleted\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"Walk Deleted\")\n    setWalk(\"\")\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div>\n      <h2>Delete Walk</h2>\n      <form onSubmit={handleSubmit} className=\"delete-walk-form\">\n        <MDBInput type=\"text\" name=\"walk\" id=\"walk\" value={walk} label=\"walk name\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Delete Walk <MDBIcon icon=\"trash\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default DeleteWalkForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport SelectedCity from \"../../../../types/PostRequests/SelectedCity\"\nimport './DeleteCityForm.scss'\n\nconst DeleteCityForm: React.FC = () => {\n\n  const [city, setCity] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"city\":\n        setCity(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: SelectedCity = {\n      city: toTitleCase(city)\n    };\n\n    axios\n      .delete(\"https://city-walks.herokuapp.com/delete-city\", { data: payload })\n      .then((res: AxiosResponse) => {\n        if (res.data === \"city deleted\") {\n          console.log(\"city deleted\")\n        } else {\n          console.log(\"city not deleted\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"City Deleted\")\n    setCity(\"\")\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div>\n      <h2>Delete City</h2>\n      <form onSubmit={handleSubmit} className=\"delete-city-form\">\n        <MDBInput type=\"text\" name=\"city\" id=\"city\" value={city} label=\"city name\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Delete City <MDBIcon icon=\"trash\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default DeleteCityForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport qs from \"qs\";\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport Board from '../../../../types/PostRequests/Board'\nimport './AddBoardForm.scss'\n\nconst AddBoardForm: React.FC = () => {\n\n  const [boardName, setBoardName] = useState<string>(\"\")\n  const [boardDescription, setBoardDescription] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"board-name\":\n        setBoardName(event.target.value)\n        break;\n      case \"board-description\":\n        setBoardDescription(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: Board = {\n      name: toTitleCase(boardName),\n      description: boardDescription\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/add-board\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"board saved\") {\n          console.log(\"board saved\")\n        } else {\n          console.log(\"board not saved\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"Board Submitted\")\n    setBoardName(\"\")\n    setBoardDescription(\"\")\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div>\n      <h2>Add Board</h2>\n      <form onSubmit={handleSubmit} className=\"add-board-form\">\n        <MDBInput type=\"text\" name=\"board-name\" id=\"board-name\" value={boardName} label=\"board name\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"board-description\" id=\"board-description\" value={boardDescription} label=\"board description\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Add Board <MDBIcon icon=\"plus\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default AddBoardForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport SelectedBoard from \"../../../../types/PostRequests/SelectedBoard\";\nimport './DeleteBoardForm.scss'\n\nconst DeleteBoardForm: React.FC = () => {\n\n  const [boardName, setBoardName] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    setBoardName(event.target.value)\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    const payload: SelectedBoard = {\n      boardName: toTitleCase(boardName)\n    }\n\n    axios\n      .delete(\"https://city-walks.herokuapp.com/delete-board\", { data: payload })\n      .then((res: AxiosResponse) => {\n        if (res.data === \"board deleted\") {\n          console.log(\"board deleted\")\n        } else {\n          console.log(\"board not deleted\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"Board Deleted\")\n    setBoardName(\"\")\n    window.scrollTo(0, 0);\n  }\n\n\n  return (\n    <div>\n      <h2>Delete Board</h2>\n      <form onSubmit={handleSubmit} className=\"delete-board-form\">\n        <MDBInput type=\"text\" name=\"board-name\" id=\"board-name\" value={boardName} label=\"board name\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Delete Board <MDBIcon icon=\"trash\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default DeleteBoardForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport qs from \"qs\";\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport BlogPost from \"../../../../types/PostRequests/BlogPost\";\nimport './AddBlogPostForm.scss'\n\nconst AddBlogPostForm: React.FC = () => {\n\n  const [postTitle, setPostTitle] = useState<string>(\"\")\n  const [postSubTitle, setPostSubTitle] = useState<string>(\"\")\n  const [postContent, setPostContent] = useState<string>(\"\")\n  const [postImgLink, setPostImgLink] = useState<string>(\"\")\n  const [postAuthor, setPostAuthor] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"post-title\":\n        setPostTitle(event.target.value)\n        break;\n      case \"post-subtitle\":\n        setPostSubTitle(event.target.value)\n        break;\n      case \"post-content\":\n        setPostContent(event.target.value)\n        break;\n      case \"post-img-link\":\n        setPostImgLink(event.target.value)\n        break;\n      case \"post-author\":\n        setPostAuthor(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: BlogPost = {\n      title: toTitleCase(postTitle),\n      subtitle: toTitleCase(postSubTitle),\n      content: postContent,\n      img: postImgLink,\n      author: toTitleCase(postAuthor)\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/add-blog-post\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"blog post saved\") {\n          console.log(\"blog post saved.\")\n        } else {\n          console.log(\"blog not saved\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"Blog Post Submitted\")\n    setPostTitle(\"\")\n    setPostSubTitle(\"\")\n    setPostContent(\"\")\n    setPostImgLink(\"\")\n    setPostAuthor(\"\")\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div>\n      <h2>Add Blog Post</h2>\n      <form onSubmit={handleSubmit} className=\"add-blog-post-form\">\n        <MDBInput type=\"text\" name=\"post-title\" id=\"post-title\" value={postTitle} label=\"post title\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"post-subtitle\" id=\"post-subtitle\" value={postSubTitle} label=\"post sub-title\" onChange={handleChange} required />\n        <MDBInput type=\"textarea\" rows=\"10\" name=\"post-content\" id=\"post-content\" value={postContent} label=\"post content\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"post-img-link\" id=\"post-img-link\" value={postImgLink} label=\"post image link\" onChange={handleChange} required />\n        <MDBInput type=\"text\" name=\"post-author\" id=\"post-author\" value={postAuthor} label=\"post author\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Add Blog Post <MDBIcon icon=\"plus\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default AddBlogPostForm","import React, { useState } from \"react\"\nimport { MDBInput, MDBBtn, MDBIcon } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport toTitleCase from '../../../../functions/toTitleCase'\nimport SelectedPost from \"../../../../types/PostRequests/SelectedPost\"\nimport './DeleteBlogPostForm.scss'\n\nconst DeleteBlogPostForm: React.FC = () => {\n\n  const [postTitle, setPostTitle] = useState<string>(\"\")\n\n  const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"post-title\":\n        setPostTitle(event.target.value)\n        break;\n    }\n  }\n\n  const handleSubmit: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    let payload: SelectedPost = {\n      postTitle: toTitleCase(postTitle)\n    };\n\n    axios\n      .delete(\"https://city-walks.herokuapp.com/delete-blog-post\", { data: payload })\n      .then((res: AxiosResponse) => {\n        if (res.data === \"blog post deleted\") {\n          console.log(\"blog post deleted\")\n        } else {\n          console.log(\"response not deleted\")\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n    alert(\"Blog Post Deleted\")\n    setPostTitle(\"\")\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div>\n      <h2>Delete Blog Post</h2>\n      <form onSubmit={handleSubmit} className=\"delete-blog-post-form\">\n        <MDBInput type=\"text\" name=\"post-title\" id=\"post-title\" value={postTitle} label=\"blog post title\" onChange={handleChange} required />\n        <MDBBtn outline color=\"elegant\" type=\"submit\">\n          Delete Post <MDBIcon icon=\"trash\" />\n        </MDBBtn>\n      </form>\n    </div>\n  )\n}\n\nexport default DeleteBlogPostForm","import React, { ReactNode, useState, useEffect } from \"react\"\nimport { MDBBtn, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBHamburgerToggler, MDBCollapse, MDBIcon, MDBInput, MDBContainer } from \"mdbreact\";\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport AddWalkForm from './AddWalkForm/AddWalkForm'\nimport AddCityForm from './AddCityForm/AddCityForm'\nimport SetFeaturedWalkForm from './SetFeaturedWalkForm/SetFeaturedWalkForm'\nimport DeleteWalkForm from './DeleteWalkForm/DeleteWalkForm'\nimport DeleteCityForm from './DeleteCityForm/DeleteCityForm'\nimport AddBoardForm from './AddBoardForm/AddBoardForm'\nimport DeleteBoardForm from \"./DeleteBoardForm/DeleteBoardForm\"\nimport AddBlogPostForm from \"./AddBlogPostForm/AddBlogPostForm\"\nimport DeleteBlogPostForm from \"./DeleteBlogPostForm/DeleteBlogPostForm\"\nimport Credentials from \"../../../types/PostRequests/Credentials\"\nimport './Admin.scss'\n\nconst Admin: React.FC = () => {\n\n  const [form, setForm] = useState<string>(\"\")\n  const [toggleAdminPanel, setToggleAdminPanel] = useState<boolean>(false)\n\n  const handleToggleAdminPanel: () => void = () => {\n    setToggleAdminPanel(!toggleAdminPanel)\n  }\n\n  let displayForm: ReactNode\n\n  // can this be a switch statement?\n  if (form === \"addWalk\") {\n    displayForm = <AddWalkForm />;\n  } else if (form === \"addCity\") {\n    displayForm = <AddCityForm />;\n  } else if (form === \"setFeaturedWalk\") {\n    displayForm = <SetFeaturedWalkForm />\n  } else if (form === \"deleteWalk\") {\n    displayForm = <DeleteWalkForm />\n  } else if (form === \"deleteCity\") {\n    displayForm = <DeleteCityForm />\n  } else if (form === \"addBoard\") {\n    displayForm = <AddBoardForm />\n  } else if (form === \"deleteBoard\") {\n    displayForm = <DeleteBoardForm />\n  } else if (form === \"addBlogPost\") {\n    displayForm = <AddBlogPostForm />\n  } else if (form === \"deleteBlogPost\") {\n    displayForm = <DeleteBlogPostForm />\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n\n  const [adminUserName, setAdminUserName] = useState<string>(\"\")\n  const [adminPassword, setAdminPassword] = useState<string>(\"\")\n  const [adminLoggedIn, setAdminLoggedIn] = useState<boolean>(false)\n\n  const handleSubmitAdminLogin: (event: React.FormEvent) => void = (event) => {\n    event.preventDefault()\n\n    const payload: Credentials = {\n      username: adminUserName,\n      password: adminPassword,\n    };\n\n    axios\n      .post(\"https://city-walks.herokuapp.com/admin-login\", qs.stringify(payload))\n      .then((res: AxiosResponse) => {\n        if (res.data === \"unsuccessful login attempt\") {\n          alert(\"Unsuccessful Login Attempt. Please Try Again.\")\n        } else {\n          alert(\"Successfully Logged In\")\n          setAdminLoggedIn(true)\n          setAdminUserName(\"\")\n          setAdminPassword(\"\")\n          window.scrollTo(0, 0)\n        }\n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });;\n\n  }\n\n  const handleChangeAdminLogin: (event: React.ChangeEvent<any>) => void = (event) => {\n    switch (event.target.name) {\n      case \"admin-username\":\n        setAdminUserName(event.target.value)\n        break;\n      case \"admin-password\":\n        setAdminPassword(event.target.value)\n        break;\n    }\n  }\n\n  const adminLogOut: () => void = () => {\n    setAdminLoggedIn(false)\n  }\n\n  return (\n    <div className=\"admin-portal page\">\n      {adminLoggedIn ?\n        <div>\n          <MDBNavbar className=\"admin-panel\" dark expand=\"md\">\n            <MDBContainer>\n              <MDBNavbarBrand>\n                <strong className=\"white-text\">Admin Portal</strong>\n              </MDBNavbarBrand>\n              <MDBHamburgerToggler color=\"#fff\" className=\"hamburger1\" id=\"hamburger2\" onClick={handleToggleAdminPanel} />\n              <MDBCollapse id=\"navbarCollapse3\" isOpen={toggleAdminPanel} navbar>\n                <MDBNavbarNav left>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"addWalk\")}>Add Walk</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"addCity\")}>Add City</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"setFeaturedWalk\")}>Set Featured Walk</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"deleteWalk\")}>Delete Walk</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"deleteCity\")}>Delete City</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"addBoard\")}>Add Board</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"deleteBoard\")}>Delete Board</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"addBlogPost\")}>Add Blog Post</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => setForm(\"deleteBlogPost\")}>Delete Blog Post</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"#!\" onClick={() => adminLogOut()}>Admin Logout</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBContainer>\n          </MDBNavbar>\n          <br />\n          <br />\n          <br />\n          <MDBContainer>\n            {displayForm}\n          </MDBContainer>\n        </div> :\n        <MDBContainer>\n          <form className=\"admin-login-form\" onSubmit={handleSubmitAdminLogin}>\n            <MDBInput type=\"text\" name=\"admin-username\" id=\"admin-username\" value={adminUserName} label=\"admin username\" onChange={handleChangeAdminLogin} maxLength=\"70\" required />\n            <MDBInput type=\"password\" name=\"admin-password\" id=\"admin-password\" value={adminPassword} label=\"admin password\" onChange={handleChangeAdminLogin} maxLength=\"70\" required />\n            <MDBBtn outline color=\"elegant\" type=\"submit\">Administrator Login <MDBIcon icon=\"sign-in-alt\" /></MDBBtn>\n          </form>\n        </MDBContainer>\n      }\n    </div>\n\n  )\n}\n\nexport default Admin","import { MDBContainer } from \"mdbreact\"\nimport React from 'react'\nimport Location from \"../../../types/Generic/Location\"\nimport './NotFound404.scss'\n\ninterface Props {\n    location: Location\n}\n\nconst nf404: React.FC<Props> = ({ location }: { location: Location }) => {\n\n    const errorMessage: string = `404 Error: Page not found at ${location.pathname}`\n\n    return (\n        <MDBContainer>\n            <div className=\"nf404-page-container page\">\n                <div className=\"page-heading-container\">\n                    <h1 className=\"page-heading\">{errorMessage}</h1>\n                </div>\n            </div>\n        </MDBContainer>\n    )\n}\n\nexport default nf404","import React, { useEffect } from \"react\"\nimport { MDBContainer } from \"mdbreact\"\nimport \"./PrivacyPolicy.scss\"\n\nconst PrivacyPolicy: React.FC = () => {\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    return (\n        <MDBContainer>\n            <div className=\"privacy-policy-container\">\n                <div className=\"page-heading-container\">\n                    <h1 className=\"page-heading\">City Walks Privacy Policy</h1>\n                </div>\n                <p>City Walks is a non-commercial application and is unaffiliated with any company or organisation. This privacy policy explains how City Walks uses the personal data we collect from you when you use our website.</p>\n                <h3>Topics:</h3>\n                <ul>\n                    <li>What data do we collect?</li>\n                    <li>How do we collect your data?</li>\n                    <li>How will we use your data?</li>\n                    <li>How do we store your data?</li>\n                    <li>Marketing</li>\n                    <li>What are your data protection rights?</li>\n                    <li>What are cookies?</li>\n                    <li>How do we use cookies?</li>\n                    <li>What types of cookies do we use?</li>\n                    <li>How to manage your cookies</li>\n                    <li>Privacy policies of other websites</li>\n                    <li>Changes to our privacy policy</li>\n                    <li>How to contact us</li>\n                    <li>How to contact the appropriate authorities</li>\n                </ul>\n                <h2>What data do we collect?</h2>\n                <p>City Walks collects the following data from users with an active account:</p>\n                <ul>\n                    <li>Personal identification information including first name, last name and email address.</li>\n                </ul>\n                <h2>How do we collect your data?</h2>\n                <p>You directly provide City Walks with all of the data we collect. We collect and process data when you:</p>\n                <ul>\n                    <li>Register online</li>\n                    <li>Contact us via our contact form</li>\n                </ul>\n                <h2>How will we use your data?</h2>\n                <p>City Walks collects your data so that we can:</p>\n                <ul>\n                    <li>Enable you to login into the site, manage your account and contribute to the forum</li>\n                    <li>To contact you when you have contacted us via the contact form</li>\n                </ul>\n                <h2>How do we store your data?</h2>\n                <p>City Walks securely stores your data in a MongoDB database. All passwords are saved as hashes in the database, and your password will never be logged or stored as plain text.</p>\n                <p>City Walks will keep this data for the duration that your account remains active. You can delete your account and its associated data by simply clicking the \"Delete Account\" link on the website's footer when logged into your account.</p>\n                <h2>Marketing</h2>\n                <p>City Walks is a non-commercial application and so will not use your data for marketing purposes.</p>\n                <h2>What are your data protection rights?</h2>\n                <p>City Walks woud like to make sure you are fully aware of all your data protection rights. Every user is entitled to the following:</p>\n                <p><strong className=\"bold-text\">The right to access - </strong>You have the right to request City Walks for copies of your personal data. We may charge you a small fee for this service.</p>\n                <p><strong className=\"bold-text\">The right to rectification - </strong>You have the right to request that City Walks correct any information you strongelieve is inaccurate. You also have the right to request City Walks to complete information you believe is incomplete.</p>\n                <p><strong className=\"bold-text\">The right to erasure - </strong>You have the right to request that City Walks erase your personal data, under certain conditions.</p>\n                <p><strong className=\"bold-text\">The right to restrict processing - </strong>You have the right to request that City Walks restrict the processing of your personal data, under certain conditions.</p>\n                <p><strong className=\"bold-text\">The right to object to processing - </strong>You have the right to object to City Walks's processing of your personal data, under certain conditions.</p>\n                <p><strong className=\"bold-text\">The right to data portability - </strong>You have the right to request that City Walks transfer the data we have collected to another organisation, or directly to you, under certain conditions.</p>\n                <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us at out email: city.walks.uk@gmail.com</p>\n                <h2>What are cookies?</h2>\n                <p>Cookies are text files placed on your computer to collect standard Internet log information and visitor behaviour information. When you visit our website, we may collect information from you automatically through cookies or similar technology.</p>\n                <p>For further information, visit <a target=\"_blank\" href=\"https://www.allaboutcookies.org/\">allaboutcookies.org</a></p>\n                <h2>How do we use cookies?</h2>\n                <p>City Walks uses cookies in a range of ways to improve your experience on our website, including:</p>\n                <ul>\n                    <li>Keeping you signed in.</li>\n                    <li>Keeping track of data that can help you manage your account, such as your userId and first name.</li>\n                </ul>\n                <h2>What types of cookies do we use?</h2>\n                <p>We use your browser's local storage to save the following pieces of information during your browsing session:</p>\n                <ul>\n                    <li>logged in status</li>\n                    <li>user first name</li>\n                    <li>user id</li>\n                    <li>whether the user has accepted the privacy policy</li>\n                </ul>\n                <h2>How to manage cookies</h2>\n                <p>You can set your browser not to accept cookies, and the above website tells you how to remove cookies from your browser. However, in a few cases, some features of our website may not function as a result.</p>\n                <h2>Privacy policies of other websites</h2>\n                <p>The City Walks website contains links to other websites. Our privacy policy applies only to our website, so if you click on a link to another website, you should read their privacy policy.</p>\n                <h2>Changes to our privacy policy</h2>\n                <p>City Walks keeps its privacy policy under regular review and places any updates on this web page. This privacy policy was last updated on 12 January 2021.</p>\n                <h2>How to contact us</h2>\n                <p>If you have any questions about City Walks's privacy policy, the data we hold on you, or you would like to exercise one of your data protection rights, please do not hesitate to contact us.</p>\n                <p>Email us at city.walks.uk@gmail.com</p>\n                <h2>How to contact the appropriate authority</h2>\n                <p>Should you wish to report a complaint or if you feel that City Walks has not addressed your concern in a satisfactory manner, you may wish to contact the Information Comissioner's Office.</p>\n                <p>Address: Information Commissioner's Office Wycliffe House Water Lane Wilmslow Cheshire SK9 5AF</p>\n                <p>Helpline: 0303 123 1113</p>\n            </div>\n        </MDBContainer>\n    )\n}\n\nexport default PrivacyPolicy","import React from 'react'\nimport { MDBBtn, MDBContainer } from \"mdbreact\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport { Action, bindActionCreators, Dispatch } from 'redux'\nimport { setPrivacyPopupVisible } from '../../actions/actions'\nimport \"./PrivacyPopUp.scss\"\n\ninterface Props {\n    setPrivacyPopupVisible: (boolValue: boolean) => Action;\n}\n\nconst PrivacyPopUp: React.FC<Props> = (props: Props) => {\n\n    const { setPrivacyPopupVisible } = props\n\n    const handlePrivacyPopup: () => void = () => {\n        setPrivacyPopupVisible(false)\n        localStorage.setItem('popupVisible', 'false')\n    }\n\n    return (\n        <MDBContainer>\n            <div className=\"popup-container-cookies\">\n                <div className=\"popup-cookies\">\n                    <p>To make City Walks work, we log user data. By using City Walks, you agree to our <Link to=\"/privacy\" className=\"popup-link\">Privacy Policy</Link>, including cookie policy.</p>\n                    <p className=\"popup-google-note\">This site is protected by reCAPTCHA and the <a target=\"_blank\" href=\"https://policies.google.com/privacy\" className=\"popup-link\">Google Privacy Policy</a> and <a target=\"_blank\" href=\"https://policies.google.com/terms\" className=\"popup-link\">Terms of Service</a> apply.</p>\n                    <MDBBtn onClick={handlePrivacyPopup} className=\"popup-accept-btn\">Accept</MDBBtn>\n                </div>\n            </div>\n        </MDBContainer>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        dispatch,\n        ...bindActionCreators({ setPrivacyPopupVisible }, dispatch),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(PrivacyPopUp);","import React from 'react'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from 'mdbreact'\nimport { GiWalkingBoot } from 'react-icons/gi'\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport { connect } from 'react-redux'\nimport { Dispatch, Action, bindActionCreators } from 'redux'\nimport RootState from '../../types/State/Root/State'\nimport Account from '../../types/PostRequests/Account'\nimport { setLoggedIn, setUserFirstName, setUserId, setUserLastName } from '../../actions/actions'\nimport './Footer.scss'\n\ninterface Props {\n  loggedIn: boolean;\n  userId: string;\n  setLoggedIn: (loggedIn: boolean) => Action;\n  setUserId: (userId: string) => Action;\n  setUserFirstName: (userFirstName: string) => Action;\n  setUserLastName: (userLastName: string) => Action;\n}\n\nconst Footer: React.FC<Props> = (props: Props) => {\n\n  const { loggedIn, userId, setLoggedIn, setUserId, setUserFirstName, setUserLastName } = props\n\n  const pushSlug: Function = useHistory().push\n\n  const logOut = () => {\n    localStorage.clear()\n    localStorage.setItem('popupVisible', 'false')\n    setLoggedIn(false)\n    setUserId('')\n    setUserFirstName('')\n    setUserLastName('')\n    alert('Logged out successfully.')\n    pushSlug('/forum');\n  }\n\n  const deleteAccount = () => {\n\n    const payload: Account = {\n      userId: userId,\n    }\n\n    axios.delete(\"https://city-walks.herokuapp.com/delete-account\", { data: payload })\n      .then((res: AxiosResponse) => {\n        console.log('account deleted')\n      }).catch((err: AxiosError) => {\n        console.log(err, 'account not deleted, try again.')\n      });\n\n    alert(\"Account Deleted. You can sign up again at any time.\")\n    logOut()\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <MDBFooter className=\"font-small pt-4 mt-4 footer\">\n      <MDBContainer className=\"text-left\">\n        <MDBRow>\n          <MDBCol md=\"3\">\n            <h5 className=\"title\">City Walks... <GiWalkingBoot /></h5>\n            <p>\n              City Walks is a website that publishes illustrated guided walks, with routes, maps and local attractions to explore.\n            </p>\n          </MDBCol>\n          <MDBCol md=\"3\"></MDBCol>\n          <MDBCol md=\"3\" className=\"footer-site-links\">\n            <h5 className=\"title\">Site Links</h5>\n            <ul className=\"footer-ul\">\n              <li className=\"list-unstyled\">\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"list-unstyled\">\n                <Link to=\"/cities\">Cities</Link>\n              </li>\n              <li className=\"list-unstyled\">\n                <Link to=\"/walks\">Walks</Link>\n              </li>\n              <li className=\"list-unstyled\">\n                <Link to=\"/about\">About</Link>\n              </li>\n              <li className=\"list-unstyled\">\n                <Link to=\"/sights\">Sights</Link>\n              </li>\n              <li className=\"list-unstyled\">\n                <Link to=\"/contact\">Contact</Link>\n              </li>\n              <li className=\"list-unstyled\">\n                <Link to=\"/forum/login\">User Login</Link>\n              </li>\n            </ul>\n          </MDBCol>\n          <MDBCol md=\"3\" className=\"footer-extra-links\">\n            <h5 className=\"title\">Extra Links</h5>\n            <ul className=\"footer-ul\">\n              <li className=\"list-unstyled\">\n                <Link to=\"/admin\">Admin portal</Link>\n              </li>\n              <li className=\"list-unstyled\">\n                <Link to=\"/privacy\">Privacy Policy</Link>\n              </li>\n              {loggedIn &&\n                <li className=\"list-unstyled\">\n                  <a onClick={deleteAccount}>Delete Account</a>\n                </li>}\n            </ul>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright <a href='https://github.com/mike1234-pixel' target='_blank' className=\"footer-github-link\">Michael Tandy</a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  loggedIn: state.loginState.loggedIn,\n  userId: state.loginState.userId,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ setLoggedIn, setUserId, setUserFirstName, setUserLastName }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","import React from 'react'\nimport { MDBContainer } from \"mdbreact\"\nimport './PopUp.scss'\n\ninterface Props {\n    iframeLink: string;\n    iframeTitle: string;\n}\n\nconst PopUp: React.FC<Props> = (props: Props) => {\n\n    const { iframeLink, iframeTitle } = props\n\n    return (\n        <MDBContainer>\n            <div className=\"popup-container\">\n                <div className=\"popup\">\n                    {/* orientation will be portrait */}\n                    <iframe\n                        src={iframeLink}\n                        title={iframeTitle}\n                        className=\"popup-img\"\n                    >\n                    </iframe>\n                </div>\n            </div>\n        </MDBContainer>\n    )\n}\n\nexport default PopUp\n","import React, { ReactNode, useEffect, useState } from \"react\"\nimport { MDBIcon, MDBAnimation, MDBBtn, MDBContainer } from \"mdbreact\"\nimport SectionA from '../SectionA/SectionA'\nimport SectionB from '../SectionB/SectionB'\nimport PopUp from './PopUp/PopUp'\nimport LoadingBar from \"../LoadingBar/LoadingBar\"\nimport toTitleCase from \"../../functions/toTitleCase\"\nimport { BsDot } from 'react-icons/bs'\nimport { FaRoad, FaMapMarkerAlt } from 'react-icons/fa'\nimport { IoMdTrain } from 'react-icons/io'\nimport { connect } from \"react-redux\";\nimport RootState from \"../../types/State/Root/State\"\nimport WalkT from '../../types/Walks/Walk'\nimport './Walk.scss'\n\ninterface Props {\n  walks: Array<WalkT>;\n  history: any; // CAN THIS BE MORE SPECIFIC?\n}\n\n// change this any to correct props type\nconst Walk: React.FC<any> = (props: Props) => {\n\n  const { walks } = props\n\n  const [togglePopUp, setTogglePopUp] = useState<boolean>(false)\n\n  const walkName: string = toTitleCase(props.history.location.pathname.replace(\"/walks/\", \"\").replace(/-/g, \" \"))\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    document.addEventListener(\"mousedown\", handleClickOutside);\n  });\n\n  let walk: string | ReactNode = <LoadingBar />\n\n  let currentWalk: WalkT | { iframeLink: string; iframeTitle: string } = { iframeLink: '', iframeTitle: '' }\n\n  const handleClick: () => void = () => {\n    setTogglePopUp(!togglePopUp)\n  }\n\n  // THIS EVENT SHOULD HAVE A MORE SPECIFIC TYPE\n  const handleClickOutside: (e: any) => void = (e) => {\n\n    if (e.target.id !== \"popup-img\" && e.target.id !== \"see-map-btn\" && e.target.id !== \"map-icon\") {\n      setTogglePopUp(false)\n    }\n  }\n\n  if (walks.length) {\n\n    let selectedWalk: Array<WalkT> | WalkT | undefined = walks.filter((walk) => walk.walk === walkName)\n    selectedWalk = selectedWalk[0]\n\n    currentWalk = selectedWalk\n\n    if (selectedWalk === undefined) {\n      walk = \"walk not found\"\n    } else {\n      walk =\n        <div>\n          <div className=\"walk-heading-container\">\n            <h1 className=\"walk-heading\">{selectedWalk.walk} <BsDot /> {selectedWalk.city}</h1>\n            <p className=\"walk-description\"><FaMapMarkerAlt /> {selectedWalk.description}</p>\n            <p className=\"walk-description\"><IoMdTrain /> Starting Point: {selectedWalk.startingPoint}</p>\n            <p className=\"walk-description\"><FaRoad /> Length: {selectedWalk.length}</p>\n          </div>\n          <SectionA content={selectedWalk.content1} img={selectedWalk.img1} alt={selectedWalk.walk} zoom={false} waves={false} />\n          <SectionB content={selectedWalk.content2} img={selectedWalk.img2} alt={selectedWalk.walk} zoom={false} waves={false} />\n          <SectionA content={selectedWalk.content3} img={selectedWalk.img3} alt={selectedWalk.walk} zoom={false} waves={false} />\n          <div className=\"author-info-container\">\n            <p>This walk was written by {selectedWalk.author}</p>\n            <p>{selectedWalk.aboutTheAuthor}</p>\n            <p>Connect with {selectedWalk.author.split(\" \")[0]}!</p>\n            <MDBAnimation reveal type=\"rubberBand\">\n              <div className=\"social-links\">\n                {selectedWalk.websiteLink !== undefined && <a href={selectedWalk.websiteLink} target=\"_blank\"><MDBIcon fab icon=\"github\" /></a>}\n              </div>\n            </MDBAnimation>\n          </div>\n        </div>\n    }\n  }\n\n\n  return (\n    <div>\n      <MDBContainer>\n        <div data-testid=\"walk-page\">\n          <div className=\"page center\">\n            {walk}\n          </div>\n        </div>\n      </MDBContainer>\n      {!togglePopUp && <MDBBtn id=\"see-map-btn\" onClick={handleClick}>\n        See Map <MDBIcon icon=\"map-marked-alt\" id=\"map-icon\" />\n      </MDBBtn>}\n      {togglePopUp && <PopUp iframeLink={currentWalk.iframeLink} iframeTitle={currentWalk.iframeTitle} />}\n    </div>\n  )\n}\n\n//export default Walk\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  walks: state.walksState.walks,\n});\n\nexport default connect(mapStateToProps)(Walk);\n","import { ReactNode, useState } from \"react\"\nimport React from 'react'\nimport { MDBInput, MDBBtn, MDBCard, MDBCardTitle, MDBCardText } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport Reply from \"../../../../../../types/Boards/Reply\"\nimport ReplyToSubmit from '../../../../../../types/PostRequests/Reply'\nimport SelectedReply from \"../../../../../../types/PostRequests/SelectedReply\"\nimport SelectedThread from \"../../../../../../types/PostRequests/SelectedThread\"\nimport './ThreadBox.scss'\nimport RootState from \"../../../../../../types/State/Root/State\"\n\ninterface Props {\n  currentBoardName: string; \n  threadId: string; \n  userFirstName: string; \n  title: string;\n  content: string; \n  replies: Array<Reply>; \n  submittedOn: string; \n  userId: string; \n  loggedIn: boolean; \n  currentUserFirstName: string; \n  currentUserId: string;\n}\n\nconst ThreadBox: React.FC<Props> = (props: Props) => {\n\n    const { currentBoardName, threadId, userFirstName, title, content, replies, submittedOn, loggedIn, userFirstName: currentUserFirstName, currentUserId, userId } = props\n\n    const [showAllReplies, setShowAllReplies] = useState<boolean>(false)\n    const [reply, setReply] = useState<string>(\"\")\n\n    const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n        setReply(event.target.value)\n    }\n\n    const handleSubmit: (event: React.FormEvent) => void = (event) => {\n        event.preventDefault()\n        setReply(\"\")\n\n        let payload: ReplyToSubmit = {\n            currentBoardName: currentBoardName,\n            threadId: threadId,\n            userId: currentUserId,\n            userFirstName: currentUserFirstName,\n            reply: reply, // send current user id\n          };\n\n        axios\n        .post(\"https://city-walks.herokuapp.com/add-reply\", qs.stringify(payload))\n        .then((res: AxiosResponse) => {\n          alert(\"reply submitted.\")\n          window.location.reload()\n        }).catch((err: AxiosError) => {\n          console.log(err)\n        });\n    }\n\n    const handleDeleteReply: (replyId: string) => void = (replyId) => {\n\n        let payload: SelectedReply = {\n            currentBoardName: currentBoardName,\n            threadId: threadId,\n            replyId: replyId\n        };\n\n        axios\n        .delete(\"https://city-walks.herokuapp.com/delete-reply\", { data: payload })\n        .then((res: AxiosResponse) => {\n          alert(\"reply deleted.\")\n          window.location.reload()\n        }).catch((err: AxiosError) => {\n          console.log(err)\n        });\n    }\n\n    const handleDeleteThread: (threadId: string) => void = (threadId) => {\n\n      let payload: SelectedThread = {\n        currentBoardName: currentBoardName,\n        threadId: threadId,\n      };\n\n      axios\n      .delete(\"https://city-walks.herokuapp.com/delete-thread\", { data: payload })\n      .then((res: AxiosResponse) => {\n\n          alert(\"thread deleted.\")\n          window.location.reload()\n        \n      }).catch((err: AxiosError) => {\n        console.log(err)\n      });\n    }\n\n    const replyComponents: Array<ReactNode> = replies.map((reply: Reply, index: number) => {\n\n        return (\n        <div className=\"reply\" key={index}>\n            <p>{reply.userFirstName} replied!</p>\n            <p>{reply.reply}</p>\n            <p>{reply.submittedOn.replace('T', ' ').substring(0, 19)}</p>\n            {reply.userId === currentUserId && <MDBBtn outline onClick={() => handleDeleteReply(reply._id)}>Delete</MDBBtn>}\n        </div>\n        )\n    })\n\n    let displayReplies: Array<ReactNode>;\n    if (showAllReplies) {\n        displayReplies = replyComponents;\n    } else {\n        // if end is greater than array length, slice uses the array length as the last index\n        displayReplies = replyComponents.slice(0,3)\n    }\n\n    return (\n        <MDBCard className=\"card-body thread-box\">\n          <div className=\"thread-container\">\n            <MDBCardTitle className=\"thread-box-title\">{title}</MDBCardTitle>\n                <MDBCardText className=\"thread-box-content\">\n                    {content}\n                </MDBCardText>\n                <p>Posted by {userFirstName} on {submittedOn.replace('T', ' ').substring(0, 19)}</p>\n                  {userId === currentUserId && <MDBBtn outline color=\"danger\" onClick={() => handleDeleteThread(threadId)}>Delete Thread</MDBBtn>}\n            </div>\n            <div className=\"replies-h3-container\">\n                <h3>Replies...</h3>\n            </div>\n                <div className=\"replies-container\">{displayReplies}</div>\n                <MDBBtn outline color=\"default\" className=\"show-all-replies-btn\" onClick={() => setShowAllReplies(!showAllReplies)}>{showAllReplies ? \"hide replies\" : \"show all replies\"}</MDBBtn>\n                <form onSubmit={handleSubmit}>\n                    {loggedIn && <div><MDBInput type=\"textarea\" rows=\"5\" name=\"reply\" id=\"reply\" label=\"reply\" value={reply} onChange={handleChange}/><MDBBtn outline type=\"submit\">Submit</MDBBtn></div>  }\n                </form>\n        </MDBCard>\n    )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  loggedIn: state.loginState.loggedIn,\n  userFirstName: state.loginState.userFirstName,\n  currentUserId: state.loginState.userId,\n});\n\nexport default connect(mapStateToProps, null)(ThreadBox);\n\n\n// // setter\n// localStorage.setItem('myData', data);\n \n// // getter\n// localStorage.getItem('myData');\n \n// // remove\n// localStorage.removeItem('myData');\n \n// // remove all\n// localStorage.clear();","import React, { ReactNode, useEffect, useState } from \"react\"\nimport ThreadBox from \"../ThreadBox/ThreadBox\"\nimport LoadingBar from \"../../../../../LoadingBar/LoadingBar\"\nimport toTitleCase from \"../../../../../../functions/toTitleCase\"\nimport { MDBBtn, MDBInput, MDBContainer } from \"mdbreact\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport qs from \"qs\"\nimport { connect } from 'react-redux'\nimport Board from '../../../../../../types/Boards/Board'\nimport Thread from \"../../../../../../types/PostRequests/Thread\"\nimport ThreadT from '../../../../../../types/Boards/Thread'\nimport RootState from \"../../../../../../types/State/Root/State\"\nimport \"./Threads.scss\"\n\ninterface Props {\n    history: any;\n    boards: Array<Board>;\n    loggedIn: boolean;\n    userId: string;\n    userFirstName: string;\n}\n\nconst Threads: React.FC<Props> = (props: Props) => {\n\n    const { boards, loggedIn, userId, userFirstName } = props;\n\n    const boardName: string = toTitleCase(props.history.location.pathname.replace(\"/forum/\", \"\").replace(/-/g, \" \"))\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    let threads: string | ReactNode = <LoadingBar />\n\n    if (boards.length) {\n\n        const selectedBoard = boards.filter((board: Board) => board.name === boardName)[0]\n\n        if (selectedBoard === undefined) {\n            threads = \"thread not found\"\n        } else {\n            threads = selectedBoard.threads.map((thread: ThreadT, index: number) => {\n\n                return (\n                    <ThreadBox\n                        currentBoardName={boardName}\n                        threadId={thread._id}\n                        userFirstName={thread.userFirstName}\n                        title={thread.title}\n                        content={thread.content}\n                        replies={thread.replies}\n                        submittedOn={thread.submittedOn}\n                        userId={thread.userId}\n                        key={index} loggedIn={loggedIn} currentUserFirstName={\"\"} currentUserId={\"\"} />\n                )\n            }).reverse()\n        }\n    }\n\n    const [threadName, setThreadName] = useState<string>(\"\")\n    const [threadContent, setThreadContent] = useState<string>(\"\")\n\n    const handleChange: (event: React.ChangeEvent<any>) => void = (event) => {\n\n        switch (event.target.name) {\n            case \"add-thread-name\":\n                setThreadName(event.target.value)\n                break;\n            case \"add-thread-content\":\n                setThreadContent(event.target.value)\n                break;\n        }\n\n    }\n\n    const handleSubmit: (event: React.FormEvent) => void = (event) => {\n        event.preventDefault()\n\n        let payload: Thread = {\n            currentBoardName: boardName,\n            userId: userId,\n            userFirstName: userFirstName,\n            title: threadName,\n            content: threadContent\n        };\n\n        axios\n            .post(\"https://city-walks.herokuapp.com/add-thread\", qs.stringify(payload))\n            .then((res: AxiosResponse) => {\n\n                alert(\"thread submitted.\")\n                setThreadName(\"\")\n                setThreadContent(\"\")\n                window.location.reload()\n\n            }).catch((err: AxiosError) => {\n                console.log(err)\n            });\n    }\n\n    const addThread: ReactNode =\n        <div className=\"add-thread-form-container\">\n            <h2 className=\"add-thread-form-heading\">Post a new discussion thread on this board:</h2>\n            <form className=\"add-thread-form\" onSubmit={handleSubmit}>\n                <MDBInput type=\"text\" name=\"add-thread-name\" id=\"add-thread-name\" onChange={handleChange} value={threadName} label=\"thread name\" />\n                <MDBInput type=\"textarea\" rows=\"6\" name=\"add-thread-content\" id=\"add-thread-content\" onChange={handleChange} value={threadContent} label=\"thread content\" />\n                <MDBBtn outline color=\"elegant\" type=\"submit\">Add Thread</MDBBtn>\n            </form>\n        </div>\n\n    return (\n        <MDBContainer>\n            <div className=\"threads-container\">\n                <h1 className=\"page-heading\">{boardName}</h1>\n                {loggedIn && addThread}\n                <div>{threads}</div>\n            </div>\n        </MDBContainer>\n    )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n    boards: state.boardsState.boards,\n    loggedIn: state.loginState.loggedIn,\n    userId: state.loginState.userId,\n    userFirstName: state.loginState.userFirstName\n});\n\nexport default connect(mapStateToProps, null)(Threads);","import React from 'react'\nimport Nav from '../../components/Nav/Nav'\nimport Home from '../../components/Pages/Home/Home'\nimport Cities from '../../components/Pages/Cities/Cities'\nimport Walks from '../../components/Pages/Walks/Walks'\nimport About from '../../components/Pages/About/About'\nimport Sights from \"../../components/Pages/Sights/Sights\"\nimport Sight from \"../../components/Pages/Sight/Sight\"\nimport Contact from '../../components/Pages/Contact/Contact'\nimport Boards from '../../components/Pages/LoginPage/LoggedInView/Boards'\nimport LoginForm from '../../components/Pages/LoginPage/LoginForm/LoginForm'\nimport RegistrationForm from '../../components/Pages/LoginPage/RegistrationForm/RegistrationForm'\nimport VerificationForm from '../../components/Pages/LoginPage/VerificationForm/VerificationForm'\nimport ResetPasswordForm from '../../components/Pages/LoginPage/ResetPasswordForm/ResetPasswordForm'\nimport ForgotPasswordForm from '../../components/Pages/LoginPage/ForgotPasswordForm/ForgotPasswordForm'\nimport Admin from '../../components/Pages/Admin/Admin'\nimport NotFound404 from '../../components/Pages/404/NotFound404'\nimport PrivacyPolicy from \"../../components/Pages/PrivacyPolicy/PrivacyPolicy\"\nimport PrivacyPopUp from '../../components/PopUp/PrivacyPopUp'\nimport Footer from '../../components/Footer/Footer'\nimport Walk from '../../components/Walk/Walk'\nimport Threads from '../../components/Pages/LoginPage/LoggedInView/Components/Threads/Threads'\nimport { Route, Switch, useLocation } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport RootState from '../../types/State/Root/State'\nimport Location from '../../types/Generic/Location'\n\ninterface Props {\n  loggedIn: boolean;\n  userId: string;\n  redirect: boolean;\n  privacyPopupVisible: boolean;\n}\n\nconst Router: React.FC<Props> = (props: Props) => {\n\n  const { loggedIn, userId, redirect, privacyPopupVisible } = props\n\n  const location: Location = useLocation()\n\n  return (\n    <div>\n      <Nav redirect={redirect} />\n      {privacyPopupVisible && <PrivacyPopUp />}\n      <Switch location={location} key={location.pathname}>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/cities\" component={Cities} />\n        <Route exact path=\"/walks\" component={Walks} />\n        {/* components with a dynamic route have to passed like this (no callback) */}\n        <Route path=\"/walks/:walks\" component={Walk} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route exact path=\"/sights\" component={Sights} />\n        <Route path=\"/sights/:sight\" component={Sight} />\n        {/* the render method here ensures the inputs in the forms don't lose focus */}\n        {/* https://www.xspdf.com/resolution/59715158.html */}\n        <Route exact path=\"/forum\" component={Boards} />\n        <Route exact path=\"/forum/login\" component={LoginForm} />\n        <Route exact path=\"/forum/register\" component={RegistrationForm} />\n        <Route exact path=\"/forum/verify\" component={VerificationForm} />\n        <Route exact path=\"/forum/reset-password\" component={ResetPasswordForm} />\n        <Route exact path=\"/forum/forgot-password\" component={ForgotPasswordForm} />\n        <Route path=\"/forum/:board\" component={Threads} />\n        <Route path=\"/admin\" component={Admin} />\n        <Route path=\"/privacy\" component={PrivacyPolicy} />\n        <Route component={NotFound404} />\n      </Switch>\n      <Footer loggedIn={loggedIn} userId={userId} />\n    </div>\n  )\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  privacyPopupVisible: state.privacyPopupState.privacyPopupVisible,\n  loggedIn: state.loginState.loggedIn,\n  userId: state.loginState.userId,\n  redirect: state.searchState.redirect\n});\n\nexport default connect(mapStateToProps)(Router);\n\n\n// redirect, loggedIn, userId etc should be coming from the redux store, as I have initial state defined in two places currently, which is unnecessary","import Router from './Router/Router'\nimport React, { useEffect } from \"react\"\nimport { connect } from 'react-redux'\nimport Walk from '../types/Walks/Walk'\nimport City from '../types/Cities/City'\nimport Board from '../types/Boards/Board'\nimport Sight from '../types/Sights/Sight'\nimport RootState from '../types/State/Root/State'\nimport { Action, Dispatch, bindActionCreators } from 'redux'\nimport { saveBoards, saveCities, saveSights, saveWalks, setLoggedIn, setPrivacyPopupVisible, setUserFirstName, setUserId } from '../actions/actions'\nimport './App.scss'\n\ninterface Props {\n  sitekey: string;\n  saveBoards: (boards?: Array<Board>) => Action;\n  saveSights: (sights?: Array<Sight>) => Action;\n  saveWalks: (walks?: Array<Walk>) => Action;\n  saveCities: (cities?: Array<City>) => Action;\n  setPrivacyPopupVisible: (boolValue: boolean) => Action;\n  setLoggedIn: (boolValue: boolean) => Action;\n  setUserId: (userId: string | null) => Action;\n  setUserFirstName: (userFirstName: string | null) => Action;\n  privacyPopupVisible: boolean;\n}\n\nconst App: React.FC<any> = (props: Props) => {\n\n  const { saveBoards, saveSights, saveWalks, saveCities, setPrivacyPopupVisible, setLoggedIn, setUserId, setUserFirstName, sitekey, privacyPopupVisible } = props\n\n  useEffect(() => {\n\n    // save data to redux store\n    saveWalks()\n    saveSights()\n    saveCities()\n    saveBoards()\n\n    if (localStorage.getItem(\"popupVisible\") === null) {\n      setPrivacyPopupVisible(true)\n    }\n\n    if (localStorage.getItem(\"loggedIn\") !== null) {\n      setLoggedIn(true)\n\n      setUserId(localStorage.getItem(\"userId\"))\n      setUserFirstName(localStorage.getItem(\"userFirstName\"))\n    }\n\n    // RECAPTCHA\n\n    const loadScriptByURL: (id: string, url: string, callback: Function) => void = (id, url, callback) => {\n      const doesScriptExist = document.getElementById(id);\n\n      if (!doesScriptExist) {\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = url;\n        script.id = id;\n        script.onload = function () {\n          if (callback) callback();\n        };\n        document.body.appendChild(script);\n\n      }\n\n      if (doesScriptExist && callback) callback();\n    }\n\n    // load the script by passing the URL\n    loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${sitekey}`, () => {\n      console.log(\"recaptcha script loaded!\");\n    });\n\n  }, [])\n\n  return (<Router privacyPopupVisible={privacyPopupVisible} loggedIn={false} userId={''} redirect={false} />)\n}\n\nconst mapStateToProps: (state: RootState) => void = (state) => ({\n  sitekey: state.recaptchaState.sitekey,\n  privacyPopupVisible: state.privacyPopupState.privacyPopupVisible\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    dispatch,\n    ...bindActionCreators({ saveSights, saveWalks, saveCities, saveBoards, setPrivacyPopupVisible, setLoggedIn, setUserId, setUserFirstName }, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Walk from '../types/Walks/Walk'\nimport State from '../types/State/Walks/State'\n\ninterface Action {\n  type: string;\n  walks: Array<Walk>\n}\n\nconst INITIAL_STATE: State = {\n  walks: [],\n};\n\nconst walksReducer = (state: State = INITIAL_STATE, action: Action) => {\n  switch (action.type) {\n    case 'SAVE_WALKS':\n      return { ...state, walks: action.walks };\n    default: return state;\n  }\n}\n\nexport default walksReducer;","import Sight from '../types/Sights/Sight'\nimport State from '../types/State/Sights/State'\n\ninterface Action {\n  type: string;\n  sights: Array<Sight>;\n}\n\nconst INITIAL_STATE: State = {\n  sights: [],\n};\n\nconst sightsReducer = (state: State = INITIAL_STATE, action: Action) => {\n  switch (action.type) {\n    case 'SAVE_SIGHTS':\n      return { ...state, sights: action.sights };\n    default: return state;\n  }\n}\n\nexport default sightsReducer;","import City from '../types/Cities/City'\nimport State from '../types/State/Cities/State'\n\ninterface Action {\n    type: string,\n    cities: Array<City>\n}\n\nconst INITIAL_STATE: State = {\n    cities: [],\n};\n\nconst citiesReducer = (state: State = INITIAL_STATE, action: Action) => {\n    switch (action.type) {\n        case 'SAVE_CITIES':\n            return { ...state, cities: action.cities };\n        default: return state;\n    }\n}\n\nexport default citiesReducer;","import Board from '../types/Boards/Board'\nimport State from '../types/State/Boards/State'\n\ninterface Action {\n    type: string;\n    boards: Array<Board>;\n}\n\nconst INITIAL_STATE: State = {\n    boards: [],\n};\n\nconst boardsReducer = (state: State = INITIAL_STATE, action: Action) => {\n    switch (action.type) {\n        case 'SAVE_BOARDS':\n            return { ...state, boards: action.boards };\n        default: return state;\n    }\n}\n\nexport default boardsReducer;","import State from '../types/State/Recaptcha/State'\n\ninterface Action {\n    type: string;\n    sitekey: string;\n}\n\nconst INITIAL_STATE: State = {\n    sitekey: '6LdmxiUaAAAAAIYySt3c8XvwOMokTQ_SW2cYkvMw',\n};\n\nconst recaptchaReducer = (state: State = INITIAL_STATE, action: Action) => {\n    switch (action.type) {\n        case 'SAVE_SITEKEY':\n            return { ...state, sitekey: action.sitekey };\n        default: return state;\n    }\n}\n\nexport default recaptchaReducer;","import State from '../types/State/Search/State'\n\ninterface Action {\n    type: string;\n    boolValue?: boolean;\n    inputValue?: string;\n    cityToSearch?: string;\n}\n\nconst INITIAL_STATE: State = {\n    redirect: false,\n    searchValue: '',\n};\n\nconst searchReducer = (state: State = INITIAL_STATE, action: Action) => {\n    switch (action.type) {\n        case 'SET_REDIRECT':\n            return { ...state, redirect: action.boolValue };\n        case 'HANDLE_CHANGE_SEARCH':\n            return { ...state, searchValue: action.inputValue };\n        case 'HANDLE_CLICK_SEARCH':\n            return { ...state, searchValue: action.cityToSearch };\n        default: return state;\n    }\n}\n\nexport default searchReducer;","import State from '../types/State/PrivacyPopup/State'\n\ninterface Action {\n    type: string;\n    boolValue: boolean;\n}\n\nconst INITIAL_STATE: State = {\n    privacyPopupVisible: false,\n};\n\nconst privacyPopupReducer = (state: State = INITIAL_STATE, action: Action) => {\n    switch (action.type) {\n        case 'SET_POPUP_VISIBLE':\n            return { ...state, privacyPopupVisible: action.boolValue };\n        default: return state;\n    }\n}\n\nexport default privacyPopupReducer;","import State from '../types/State/Login/State'\n\ninterface Action {\n    type: string;\n    firstName?: string;\n    lastName?: string;\n    userId?: string;\n    registrationEmail?: string;\n    registrationPassword?: string;\n    loginEmail?: string;\n    loginPassword?: string;\n    loggedIn?: false,\n    userFirstName?: string;\n    userLastName?: string;\n    verificationEmail?: string;\n    resetPasswordEmail?: string;\n    resetPasswordOldPassword?: string;\n    resetPasswordNewPassword?: string;\n    resetPasswordConfirmNewPassword?: string;\n    forgotPasswordEmail?: string;\n    activationMessageEmphasis?: string;\n    boolValue?: boolean;\n}\n\nconst INITIAL_STATE: State = {\n    firstName: '',\n    lastName: '',\n    userId: '',\n    registrationEmail: '',\n    registrationPassword: '',\n    loginEmail: '',\n    loginPassword: '',\n    loggedIn: false,\n    userFirstName: '',\n    userLastName: '',\n    verificationEmail: '',\n    resetPasswordEmail: '',\n    resetPasswordOldPassword: '',\n    resetPasswordNewPassword: '',\n    resetPasswordConfirmNewPassword: '',\n    forgotPasswordEmail: '',\n    activationMessageEmphasis: 'no-emphasis'\n};\n\nconst loginReducer = (state: State = INITIAL_STATE, action: Action) => {\n    switch (action.type) {\n        case 'SET_FIRST_NAME':\n            return { ...state, firstName: action.firstName };\n        case 'SET_LAST_NAME':\n            return { ...state, lastName: action.lastName };\n        case 'SET_USER_ID':\n            return { ...state, userId: action.userId };\n        case 'SET_REGISTRATION_EMAIL':\n            return { ...state, registrationEmail: action.registrationEmail };\n        case 'SET_REGISTRATION_PASSWORD':\n            return { ...state, registrationPassword: action.registrationPassword };\n        case 'SET_LOGIN_EMAIL':\n            return { ...state, loginEmail: action.loginEmail };\n        case 'SET_LOGIN_PASSWORD':\n            return { ...state, loginPassword: action.loginPassword };\n        case 'SET_LOGGED_IN':\n            return { ...state, loggedIn: action.boolValue };\n        case 'SET_USER_FIRST_NAME':\n            return { ...state, userFirstName: action.userFirstName };\n        case 'SET_USER_LAST_NAME':\n            return { ...state, userLastName: action.userLastName };\n        case 'SET_VERIFICATION_EMAIL':\n            return { ...state, verificationEmail: action.verificationEmail };\n        case 'SET_RESET_PASSWORD_EMAIL':\n            return { ...state, resetPasswordEmail: action.resetPasswordEmail };\n        case 'SET_RESET_PASSWORD_OLD_PASSWORD':\n            return { ...state, resetPasswordOldPassword: action.resetPasswordOldPassword };\n        case 'SET_RESET_PASSWORD_NEW_PASSWORD':\n            return { ...state, resetPasswordNewPassword: action.resetPasswordNewPassword };\n        case 'SET_RESET_PASSWORD_CONFIRM_NEW_PASSWORD':\n            return { ...state, resetPasswordConfirmNewPassword: action.resetPasswordConfirmNewPassword };\n        case 'SET_FORGOT_PASSWORD_EMAIL':\n            return { ...state, forgotPasswordEmail: action.forgotPasswordEmail };\n        case 'SET_ACTIVATION_MESSAGE_EMPHASIS':\n            return { ...state, activationMessageEmphasis: action.activationMessageEmphasis };\n        default: return state;\n    }\n}\n\nexport default loginReducer;","import { combineReducers } from 'redux';\nimport walksReducer from './walksReducer'\nimport sightsReducer from './sightsReducer';\nimport citiesReducer from './citiesReducer';\nimport boardsReducer from './boardsReducer';\nimport recaptchaReducer from './recaptchaReducer';\nimport searchReducer from './searchReducer';\nimport privacyPopupReducer from './privacyPopupReducer';\nimport loginReducer from './loginReducer';\n\nconst rootReducer = combineReducers({\n  sightsState: sightsReducer,\n  walksState: walksReducer,\n  citiesState: citiesReducer,\n  boardsState: boardsReducer,\n  recaptchaState: recaptchaReducer,\n  searchState: searchReducer,\n  privacyPopupState: privacyPopupReducer,\n  loginState: loginReducer\n});\n\nexport default rootReducer;","import rootReducer from '../reducers/index'\nimport { configureStore } from '@reduxjs/toolkit' // configure store creates a store and provides redux dev tools, used in place of the standard createStore\nimport thunk from 'redux-thunk';\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: [thunk],\n})\n\nexport default store;","import ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport App from \"./container/App.tsx\";\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport store from './store/index';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>, document.getElementById('root'));\n\n\nregisterServiceWorker();"],"sourceRoot":""}